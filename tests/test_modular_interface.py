#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –º–æ–¥—É–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ GopiAI
=================================

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π –∏ –∏—Ö –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.
"""

import sys
import os

def test_imports():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –º–æ–¥—É–ª–µ–π...")
    
    try:
        from ui_components import (
            StandaloneMenuBar,
            StandaloneTitlebar,
            StandaloneTitlebarWithMenu,
            CustomGrip,
            FileExplorerWidget,
            TabDocumentWidget,
            ChatWidget,
            TerminalWidget
        )
        print("‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ UI —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        return True
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π: {e}")
        return False

def test_fallback_mode():
    """–¢–µ—Å—Ç fallback —Ä–µ–∂–∏–º–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ fallback —Ä–µ–∂–∏–º–∞...")
    
    # –í—Ä–µ–º–µ–Ω–Ω–æ –ø–µ—Ä–µ–∏–º–µ–Ω—É–µ–º –ø–∞–ø–∫—É ui_components
    import shutil
    ui_components_path = "ui_components"
    ui_components_backup = "ui_components_backup_test"
    
    try:
        if os.path.exists(ui_components_path):
            shutil.move(ui_components_path, ui_components_backup)
            print("üìÅ ui_components –≤—Ä–µ–º–µ–Ω–Ω–æ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∞")
          # –ü–æ–ø—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª—å –≤ fallback —Ä–µ–∂–∏–º–µ
        if 'gopiai_standalone_interface_modular' in sys.modules:
            del sys.modules['gopiai_standalone_interface_modular']
            
        try:
            with open('gopiai_standalone_interface_modular.py', 'r', encoding='utf-8') as f:
                code = f.read()
            exec(code)
            print("‚úÖ Fallback —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            fallback_success = True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ fallback —Ä–µ–∂–∏–º–µ: {e}")
            fallback_success = False
            
    finally:
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–ø–∫—É
        if os.path.exists(ui_components_backup):
            if os.path.exists(ui_components_path):
                shutil.rmtree(ui_components_path)
            shutil.move(ui_components_backup, ui_components_path)
            print("üìÅ ui_components –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    
    return fallback_success

def test_module_structure():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –º–æ–¥—É–ª–µ–π"""
    print("üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –º–æ–¥—É–ª–µ–π...")
    
    modules_to_check = [
        "ui_components/__init__.py",
        "ui_components/menu_bar.py",
        "ui_components/titlebar.py", 
        "ui_components/file_explorer.py",
        "ui_components/tab_widget.py",
        "ui_components/chat_widget.py",
        "ui_components/terminal_widget.py"
    ]
    
    all_exist = True
    for module_path in modules_to_check:
        if os.path.exists(module_path):
            print(f"‚úÖ {module_path}")
        else:
            print(f"‚ùå {module_path} - –ù–ï –ù–ê–ô–î–ï–ù")
            all_exist = False
    
    return all_exist

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –º–æ–¥—É–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ GopiAI")
    print("=" * 50)
    
    tests = [
        ("–ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π", test_imports),
        ("–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–æ–¥—É–ª–µ–π", test_module_structure),
        ("Fallback —Ä–µ–∂–∏–º", test_fallback_mode)
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        print(f"\nüîç {test_name}...")
        try:
            if test_func():
                print(f"‚úÖ {test_name} - –ü–†–û–ô–î–ï–ù")
                passed += 1
            else:
                print(f"‚ùå {test_name} - –ü–†–û–í–ê–õ–ï–ù")
        except Exception as e:
            print(f"üí• {test_name} - –û–®–ò–ë–ö–ê: {e}")
    
    print(f"\n{'='*50}")
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω—ã")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã!")
        print("‚úÖ –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ GopiAI —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã, —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞")
    
    return passed == total

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
