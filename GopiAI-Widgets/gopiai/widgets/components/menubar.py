from PySide6.QtCore import Signal
from PySide6.QtWidgets import QMenuBar


class MenuBar(QMenuBar):
    newFileRequested = Signal()
    openFileRequested = Signal()
    openFolderRequested = Signal()
    saveRequested = Signal()
    saveAsRequested = Signal()
    exitRequested = Signal()
    openTextEditorRequested = Signal()
    openProjectExplorerRequested = Signal()
    openChatRequested = Signal()
    openBrowserRequested = Signal()
    openTerminalRequested = Signal()

    def __init__(self, parent=None):
        super().__init__(parent)
        self._build_menu()

    def _build_menu(self):
        file_menu = self.addMenu("Файл")
        new_action = file_menu.addAction("Создать новый")
        open_action = file_menu.addAction("Открыть файл")
        open_folder_action = file_menu.addAction("Открыть папку")
        file_menu.addSeparator()
        save_action = file_menu.addAction("Сохранить")
        save_as_action = file_menu.addAction("Сохранить как")
        file_menu.addSeparator()
        exit_action = file_menu.addAction("Выход")
        new_action.triggered.connect(self.newFileRequested.emit)
        open_action.triggered.connect(self.openFileRequested.emit)
        open_folder_action.triggered.connect(self.openFolderRequested.emit)
        save_action.triggered.connect(self.saveRequested.emit)
        save_as_action.triggered.connect(self.saveAsRequested.emit)
        exit_action.triggered.connect(self.exitRequested.emit)
        edit_menu = self.addMenu("Правка")
        self.undo_action = edit_menu.addAction("Отмена")
        self.redo_action = edit_menu.addAction("Повтор")
        edit_menu.addSeparator()
        self.cut_action = edit_menu.addAction("Вырезать")
        self.copy_action = edit_menu.addAction("Копировать")
        self.paste_action = edit_menu.addAction("Вставить")
        self.delete_action = edit_menu.addAction("Удалить")
        edit_menu.addSeparator()
        self.select_all_action = edit_menu.addAction("Выделить всё")
        view_menu = self.addMenu("Вид")
        project_explorer_action = view_menu.addAction("Файловый проводник")
        chat_action = view_menu.addAction("ИИ чат")
        browser_action = view_menu.addAction("Браузер")
        text_editor_action = view_menu.addAction("Текстовый редактор")
        terminal_action = view_menu.addAction("Терминал")
        view_menu.addAction("ИИ редактор кода")
        view_menu.addSeparator()
        view_menu.addAction("Сбросить вид")
        view_menu.addSeparator()
        view_menu.addAction("Тема")
        view_menu.addAction("Язык")
        project_explorer_action.triggered.connect(
            self.openProjectExplorerRequested.emit
        )
        chat_action.triggered.connect(self.openChatRequested.emit)
        browser_action.triggered.connect(self.openBrowserRequested.emit)
        terminal_action.triggered.connect(self.openTerminalRequested.emit)
        text_editor_action.triggered.connect(self.openTextEditorRequested.emit)
        self.addMenu("Настройки")
        help_menu = self.addMenu("Справка")
        help_menu.addAction("Документация")
        help_menu.addAction("О программе")
