
import sys
import os
import json
import traceback
from pathlib import Path

def diagnose_gopiai():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ GopiAI —Å–∏—Å—Ç–µ–º—ã"""
    
    print("üîç GopiAI System Diagnostic")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –ø—É—Ç–µ–π
    print("üìÇ Python paths:")
    for path in sys.path:
        print(f"  {path}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
    modules_to_check = [
        'GopiAI.GopiAI-WebView.gopiai.webview.webview_bridge',
        'GopiAI.GopiAI-Extensions.claude_tools.claude_tools_handler',
        'PySide6.QtCore',
        'PySide6.QtWebEngineWidgets',
        'PySide6.QtWebChannel'
    ]
    
    print("\nüì¶ Module imports:")
    for module in modules_to_check:
        try:
            __import__(module)
            print(f"  ‚úÖ {module}")
        except ImportError as e:
            print(f"  ‚ùå {module}: {e}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    files_to_check = [
        'GopiAI-UI/gopiai/ui/main.py',
        'GopiAI-WebView/gopiai/webview/webview_bridge.py',
        'GopiAI-WebView/gopiai/webview/assets/chat.js',
        'GopiAI-Extensions/claude_tools/claude_tools_handler.py'
    ]
    
    print("\nüìÑ File existence:")
    for file_path in files_to_check:
        if os.path.exists(file_path):
            print(f"  ‚úÖ {file_path}")
        else:
            print(f"  ‚ùå {file_path}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print("\nüåç Environment variables:")
    env_vars = ['PYTHONPATH', 'QT_LOGGING_RULES', 'PATH']
    for var in env_vars:
        value = os.environ.get(var, 'Not set')
        print(f"  {var}: {value}")
    
    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ QtWebEngine
    try:
        from PySide6.QtWebEngineWidgets import QWebEngineView
        print("\nüåê QtWebEngine: ‚úÖ Available")
    except ImportError as e:
        print(f"\nüåê QtWebEngine: ‚ùå {e}")
    
    # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ WebChannel
    try:
        from PySide6.QtWebChannel import QWebChannel
        print("üåâ WebChannel: ‚úÖ Available")
    except ImportError as e:
        print(f"üåâ WebChannel: ‚ùå {e}")

if __name__ == "__main__":
    diagnose_gopiai()
