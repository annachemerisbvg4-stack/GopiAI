#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import os
sys.path.append('C:/Users/crazy/GOPI_AI_MODULES/GopiAI-CrewAI')

from llm_rotation_config import LLM_MODELS_CONFIG, select_llm_model_safe, rate_limit_monitor

def test_rotation():
    print('üîç –ü–†–û–í–ï–†–ö–ê –†–û–¢–ê–¶–ò–ò –ú–û–î–ï–õ–ï–ô:')
    print(f'–í—Å–µ–≥–æ –º–æ–¥–µ–ª–µ–π –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {len(LLM_MODELS_CONFIG)}')
    print()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á–∏
    google_key = os.getenv('GEMINI_API_KEY') or os.getenv('GOOGLE_API_KEY')
    if google_key:
        print('Google API Key: ‚úÖ –ù–∞–π–¥–µ–Ω')
    else:
        print('Google API Key: ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
    print()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–µ –º–æ–¥–µ–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç dialog
    dialog_models = [m for m in LLM_MODELS_CONFIG if 'dialog' in m['type']]
    print(f'–ú–æ–¥–µ–ª–∏ –¥–ª—è dialog: {len(dialog_models)}')
    for model in dialog_models:
        name = model["name"]
        model_id = model["id"]
        priority = model["priority"]
        print(f'  - {name} (id: {model_id}, priority: {priority})')
    print()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
    print('–¢–µ–∫—É—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:')
    for model_id in rate_limit_monitor.usage:
        usage = rate_limit_monitor.usage[model_id]
        model_config = rate_limit_monitor.models[model_id]
        rpm_used = usage["rpm"]
        rpm_limit = model_config["rpm"]
        tpm_used = usage["tpm"]
        tpm_limit = model_config["tpm"]
        print(f'  {model_id}: RPM {rpm_used}/{rpm_limit}, TPM {tpm_used}/{tpm_limit}')
    print()

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏
    print('–¢–µ—Å—Ç –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏:')
    for i in range(10):
        model = select_llm_model_safe('dialog', tokens=1000)
        print(f'  –ü–æ–ø—ã—Ç–∫–∞ {i+1}: {model}')
        if model:
            rate_limit_monitor.register_use(model, tokens=1000)
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ–º –ª–∏ –µ—â–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –º–æ–¥–µ–ª—å
            can_use = rate_limit_monitor.can_use(model, tokens=1000)
            print(f'    -> –ú–æ–∂–µ–º –µ—â–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: {can_use}')
        print()

if __name__ == "__main__":
    test_rotation()
