"""
–¢–µ—Å—Ç SVG —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –¥–ª—è Lucide –∏–∫–æ–Ω–æ–∫.
"""

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—É—Ç–µ–π
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ GopiAI –º–æ–¥—É–ª—è–º
gopiai_paths = [
    r"C:\Users\crazy\GOPI_AI_MODULES\GopiAI-Core",
    r"C:\Users\crazy\GOPI_AI_MODULES\GopiAI-Widgets", 
    r"C:\Users\crazy\GOPI_AI_MODULES\GopiAI-App",
    r"C:\Users\crazy\GOPI_AI_MODULES\GopiAI-Extensions",
    r"C:\Users\crazy\GOPI_AI_MODULES\rag_memory_system"
]

for path in gopiai_paths:
    if os.path.exists(path) and path not in sys.path:
        sys.path.insert(0, path)

# –ò–º–ø–æ—Ä—Ç Qt
try:
    from PySide6.QtCore import QSize
    from PySide6.QtGui import QIcon, QPixmap, QPainter
    from PySide6.QtSvg import QSvgRenderer
    from PySide6.QtWidgets import QApplication, QLabel, QVBoxLayout, QWidget
    print("‚úì PySide6 –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
except ImportError as e:
    print(f"‚ùå PySide6 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
    exit(1)

# –°–æ–∑–¥–∞—ë–º QApplication
app = QApplication([])

def test_svg_file(svg_path):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ SVG —Ñ–∞–π–ª–∞."""
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º: {svg_path}")
    
    if not os.path.exists(svg_path):
        print("‚ùå –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return None
    
    # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
    with open(svg_path, 'r', encoding='utf-8') as f:
        svg_content = f.read()
    print(f"‚úì SVG —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ: {len(svg_content)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"  –ü–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤: {svg_content[:100]}...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º QSvgRenderer
    renderer = QSvgRenderer()
    if renderer.load(svg_path):
        print("‚úì QSvgRenderer —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∑–∏–ª SVG")
        print(f"  –†–∞–∑–º–µ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {renderer.defaultSize()}")
        print(f"  –í–∞–ª–∏–¥–Ω—ã–π: {renderer.isValid()}")
        
        # –°–æ–∑–¥–∞—ë–º QPixmap –∏ —Ä–µ–Ω–¥–µ—Ä–∏–º
        pixmap = QPixmap(24, 24)
        pixmap.fill()  # –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ñ–æ–Ω
        
        painter = QPainter(pixmap)
        renderer.render(painter)
        painter.end()
        
        print(f"‚úì –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à—ë–Ω. Pixmap: {pixmap.size()}")
        print(f"  –ü—É—Å—Ç–æ–π pixmap: {pixmap.isNull()}")
        
        # –°–æ–∑–¥–∞—ë–º QIcon
        icon = QIcon(pixmap)
        print(f"‚úì QIcon —Å–æ–∑–¥–∞–Ω. –ü—É—Å—Ç–æ–π: {icon.isNull()}")
        print(f"  –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã: {icon.availableSizes()}")
        
        return icon
    else:
        print("‚ùå QSvgRenderer –Ω–µ —Å–º–æ–≥ –∑–∞–≥—Ä—É–∑–∏—Ç—å SVG")
        return None

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–∫–æ–Ω–æ–∫
test_icons = [
    "node_modules/lucide-static/icons/house.svg",
    "node_modules/lucide-static/icons/save.svg", 
    "node_modules/lucide-static/icons/wrench.svg"
]

icons = {}
for icon_path in test_icons:
    icon_name = os.path.basename(icon_path).replace('.svg', '')
    icon = test_svg_file(icon_path)
    if icon:
        icons[icon_name] = icon

print(f"\nüéâ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ {len(icons)} –∏–∫–æ–Ω–æ–∫: {list(icons.keys())}")

# –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
if icons:
    window = QWidget()
    layout = QVBoxLayout(window)
    
    for name, icon in icons.items():
        label = QLabel(f"–ò–∫–æ–Ω–∫–∞: {name}")
        label.setPixmap(icon.pixmap(24, 24))
        layout.addWidget(label)
    
    window.setWindowTitle("–¢–µ—Å—Ç Lucide –∏–∫–æ–Ω–æ–∫")
    window.show()
    
    print("üöÄ –¢–µ—Å—Ç–æ–≤–æ–µ –æ–∫–Ω–æ –ø–æ–∫–∞–∑–∞–Ω–æ. –ó–∞–∫—Ä–æ–π—Ç–µ –µ–≥–æ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.")
    app.exec()
else:
    print("‚ùå –ù–∏ –æ–¥–Ω–∞ –∏–∫–æ–Ω–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")

print("üöÄ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!")
