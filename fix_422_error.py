"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–∫–∏ 422 –≤ RAG API
"""
import subprocess
import time
import requests
import json
import sys
import os
from threading import Thread

def start_rag_server():
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å RAG —Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ"""
    try:
        env_python = r"C:\Users\crazy\GOPI_AI_MODULES\rag_memory_env\Scripts\python.exe"
        api_path = r"C:\Users\crazy\GOPI_AI_MODULES\rag_memory_system\api.py"
        
        print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º RAG —Å–µ—Ä–≤–µ—Ä...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–µ
        process = subprocess.Popen(
            [env_python, api_path],
            cwd=r"C:\Users\crazy\GOPI_AI_MODULES\rag_memory_system",
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            creationflags=subprocess.CREATE_NEW_CONSOLE
        )
        
        # –î–∞–µ–º —Å–µ—Ä–≤–µ—Ä—É –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫
        print("‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
        time.sleep(5)
        
        return process
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        return None

def test_server_connection():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º"""
    try:
        response = requests.get("http://127.0.0.1:8080/health", timeout=5)
        if response.status_code == 200:
            print("‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
            return True
        else:
            print(f"‚ùå –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –∫–æ–¥ {response.status_code}")
            return False
    except requests.exceptions.ConnectionError:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
        return False

def test_session_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º JSON"""
    url = "http://127.0.0.1:8080/sessions"
    
    # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö —Å–æ–≥–ª–∞—Å–Ω–æ CreateSessionRequest
    data = {
        "title": "GopiAI Chat Session Test",
        "project_context": "GopiAI-WebView",
        "tags": ["webview", "chat", "test"]
    }
    
    try:
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏...")
        print(f"üì° POST {url}")
        print(f"üì¶ Data: {json.dumps(data, indent=2)}")
        
        response = requests.post(url, json=data, timeout=10)
        
        print(f"üìä Status: {response.status_code}")
        print(f"üìÑ Response: {response.text}")
        
        if response.status_code == 200:
            print("‚úÖ –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            response_data = response.json()
            return response_data.get("session_id")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}: {response.text}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

def test_message_creation(session_id):
    """–¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–µ—Å—Å–∏—é"""
    if not session_id:
        print("‚ùå –ù–µ—Ç session_id –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π")
        return False
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        message_url = f"http://127.0.0.1:8080/sessions/{session_id}/messages"
        message_data = {
            "content": "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
            "role": "user",
            "metadata": {"test": True}
        }
        
        print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è...")
        print(f"üì° POST {message_url}")
        print(f"üì¶ Data: {json.dumps(message_data, indent=2)}")
        
        message_response = requests.post(message_url, json=message_data, timeout=10)
        
        print(f"üìä Status: {message_response.status_code}")
        print(f"üìÑ Response: {message_response.text}")
        
        if message_response.status_code == 200:
            print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ {message_response.status_code}: {message_response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return False

def analyze_422_error():
    """–ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–∫–∏ 422 –∏ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–∏—á–∏–Ω"""
    print("\nüìã –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–∫–∏ 422 (Unprocessable Entity):")
    print("=" * 60)
    print("üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
    print("   1. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON –≤ –∑–∞–ø—Ä–æ—Å–µ")
    print("   2. –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π –≤ Pydantic –º–æ–¥–µ–ª–∏")
    print("   3. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –≤ –ø–æ–ª—è—Ö")
    print("   4. –ü—Ä–æ–±–ª–µ–º—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤ FastAPI")
    print("   5. –û—à–∏–±–∫–∏ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤")
    
    print("\nüõ†Ô∏è –ß—Ç–æ –±—ã–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:")
    print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã Pydantic –º–æ–¥–µ–ª–∏ CreateSessionRequest –∏ AddMessageRequest")
    print("   ‚úÖ –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ç–µ–ø–µ—Ä—å –ø—Ä–∏–Ω–∏–º–∞—é—Ç —ç—Ç–∏ –º–æ–¥–µ–ª–∏ –≤–º–µ—Å—Ç–æ —Å—ã—Ä–æ–≥–æ JSON")
    print("   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ FastAPI")
    
    print("\nüìù –§–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏:")
    print(json.dumps({
        "title": "–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞",
        "project_context": "GopiAI-WebView", 
        "tags": ["webview", "chat"]
    }, indent=2))
    
    print("\nüìù –§–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è:")
    print(json.dumps({
        "content": "–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è",
        "role": "user",  # user, assistant, system
        "metadata": {"extra": "info"}
    }, indent=2))

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ 422 –≤ RAG API")
    print("=" * 60)
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
    analyze_422_error()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    server_process = start_rag_server()
    if not server_process:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä")
        return
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        if not test_server_connection():
            print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏
        session_id = test_session_creation()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        message_ok = test_message_creation(session_id)
        
        # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
        print("\n" + "=" * 60)
        print("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print(f"   –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏: {'‚úÖ' if session_id else '‚ùå'}")
        print(f"   –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {'‚úÖ' if message_ok else '‚ùå'}")
        
        if session_id and message_ok:
            print("\nüéâ –û—à–∏–±–∫–∞ 422 –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞! API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        else:
            print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å API")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞—à–±–æ—Ä–¥
        print(f"\nüìä Dashboard –¥–æ—Å—Ç—É–ø–µ–Ω: http://127.0.0.1:8080")
        print(f"üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://127.0.0.1:8080/docs")
        
    finally:
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        if server_process:
            print("\nüõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä...")
            server_process.terminate()
            time.sleep(1)
            if server_process.poll() is None:
                server_process.kill()

if __name__ == "__main__":
    main()