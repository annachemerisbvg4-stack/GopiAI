"""
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è SmartBrowserAgent —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º enhanced_browser_widget
"""

import sys
import os
import importlib.util
from typing import Optional, Dict, Any
from SmartBrowserAgent import SmartBrowserAgent

class BrowserIntegration:
    """–ö–ª–∞—Å—Å –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ SmartBrowserAgent —Å UI"""
    
    def __init__(self, brave_api_key: str):
        self.smart_agent = SmartBrowserAgent(brave_api_key)
        self.browser_widget = None
        
    def connect_browser_widget(self, browser_widget):
        """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π browser widget"""
        self.browser_widget = browser_widget
        
    def smart_navigate(self, command: str) -> Dict[str, Any]:
        """–£–º–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º URL"""
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É —á–µ—Ä–µ–∑ SmartAgent
        result = self.smart_agent.process_command(command)
        
        if result['success'] and result['url']:
            # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–π browser widget, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
            if self.browser_widget:
                try:
                    # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É browser_widget –µ—Å—Ç—å –º–µ—Ç–æ–¥ navigate
                    if hasattr(self.browser_widget, 'navigate'):
                        self.browser_widget.navigate(result['url'])
                    elif hasattr(self.browser_widget, 'load'):
                        self.browser_widget.load(result['url'])
                    elif hasattr(self.browser_widget, 'setUrl'):
                        self.browser_widget.setUrl(result['url'])
                    
                    result['message'] = f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—à—ë–ª –Ω–∞ {result['url']}"
                    
                except Exception as e:
                    result['success'] = False
                    result['message'] = f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: {str(e)}"
        
        return result
    
    def add_smart_commands_to_widget(self, browser_widget):
        """–î–æ–±–∞–≤–ª—è–µ—Ç —É–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É browser widget"""
        
        # –°–æ–∑–¥–∞—ë–º –æ–±—ë—Ä—Ç–∫—É –¥–ª—è –º–µ—Ç–æ–¥–∞ navigate
        original_navigate = getattr(browser_widget, 'navigate', None)
        
        def smart_navigate_wrapper(url_or_command: str):
            """–û–±—ë—Ä—Ç–∫–∞ –¥–ª—è —É–º–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
            
            # –ï—Å–ª–∏ —ç—Ç–æ —É–∂–µ –≤–∞–ª–∏–¥–Ω—ã–π URL, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
            if url_or_command.startswith(('http://', 'https://')):
                if original_navigate:
                    return original_navigate(url_or_command)
                return
            
            # –ò–Ω–∞—á–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –∫–æ–º–∞–Ω–¥—É
            result = self.smart_navigate(url_or_command)
            
            if not result['success']:
                print(f"‚ö†Ô∏è {result['message']}")
                
            return result
        
        # –ó–∞–º–µ–Ω—è–µ–º –º–µ—Ç–æ–¥ navigate –Ω–∞ —É–º–Ω—É—é –≤–µ—Ä—Å–∏—é
        setattr(browser_widget, 'smart_navigate', smart_navigate_wrapper)
        
        # –î–æ–±–∞–≤–ª—è–µ–º alias –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        if not original_navigate:
            setattr(browser_widget, 'navigate', smart_navigate_wrapper)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
def enhance_browser_widget_with_smart_navigation(browser_widget, brave_api_key: str):
    """
    –ë—ã—Å—Ç—Ä–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É–º–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É browser widget
    
    Usage:
        from browser_integration import enhance_browser_widget_with_smart_navigation
        
        # –ì–¥–µ-—Ç–æ –≤ –∫–æ–¥–µ UI
        enhance_browser_widget_with_smart_navigation(your_browser_widget, "your_brave_api_key")
        
        # –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
        your_browser_widget.smart_navigate("–∑–∞–π–¥–∏ –Ω–∞ —Å–∞–π—Ç leonardo ai")
    """
    
    integration = BrowserIntegration(brave_api_key)
    integration.connect_browser_widget(browser_widget)
    integration.add_smart_commands_to_widget(browser_widget)
    
    return integration


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–ª—è enhanced_browser_widget.py
def patch_enhanced_browser_widget():
    """
    –ü–∞—Ç—á –¥–ª—è enhanced_browser_widget.py
    –î–æ–±–∞–≤–ª—è–µ—Ç —É–º–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –≤–∏–¥–∂–µ—Ç—É
    """
    
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–æ–¥—É–ª—å
        from gopiai.ui.components.enhanced_browser_widget import EnhancedBrowserWidget
        
        # Brave API –∫–ª—é—á - –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –ª—É—á—à–µ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Ñ–∏–≥
        BRAVE_API_KEY = "BSAEcqmI0ZUDsktUV1FKYYYq7HaQlnt"
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π __init__
        original_init = EnhancedBrowserWidget.__init__
        
        def enhanced_init(self, *args, **kwargs):
            # –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä
            original_init(self, *args, **kwargs)
            
            # –î–æ–±–∞–≤–ª—è–µ–º —É–º–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            enhance_browser_widget_with_smart_navigation(self, BRAVE_API_KEY)
        
        # –ó–∞–º–µ–Ω—è–µ–º __init__
        EnhancedBrowserWidget.__init__ = enhanced_init
        
        print("‚úÖ Enhanced browser widget successfully patched with smart navigation!")
        
    except ImportError as e:
        print(f"‚ö†Ô∏è Could not import enhanced_browser_widget: {e}")
        return False
    
    return True


if __name__ == "__main__":
    print("üîß Browser Integration Module")
    print("–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –¥–æ–±–∞–≤–ª—è–µ—Ç —É–º–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º browser widgets")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ç—á
    patch_enhanced_browser_widget()
