"""
–î–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–µ–∫ GopiAI

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è GopiAI,
–≤–∫–ª—é—á–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º –∏ –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
"""

from PySide6.QtCore import Signal
from PySide6.QtWidgets import (
    QDialog, QVBoxLayout, QHBoxLayout, QTabWidget, QWidget, 
    QLabel, QPushButton, QComboBox, QCheckBox, QSpinBox, 
    QLineEdit, QTextEdit, QScrollArea, QFrame
)


def is_qt_object_valid(obj):
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å Qt –æ–±—ä–µ–∫—Ç–∞ –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç sip.
    
    Args:
        obj: Qt –æ–±—ä–µ–∫—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        
    Returns:
        bool: True –µ—Å–ª–∏ –æ–±—ä–µ–∫—Ç –≤–∞–ª–∏–¥–µ–Ω, False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
    """
    if obj is None:
        return False
    
    try:
        # –ü—Ä–æ–±—É–µ–º –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –µ—Å—Ç—å —É –≤—Å–µ—Ö QObject
        obj.isVisible()
        return True
    except RuntimeError:
        # C++ –æ–±—ä–µ–∫—Ç —É–∂–µ —É–¥–∞–ª–µ–Ω
        return False
    except Exception:
        # –ü—Ä–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –æ—à–∏–±–∫–µ —Å—á–∏—Ç–∞–µ–º –æ–±—ä–µ–∫—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º
        return False


class GopiAISettingsDialog(QDialog):
    """
    –î–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–µ–∫ GopiAI.
    
    –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º –∏ –¥—Ä—É–≥–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    """
    
    # –°–∏–≥–Ω–∞–ª—ã
    settings_applied = Signal(dict)  # –°–∏–≥–Ω–∞–ª –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    themeChanged = Signal(str)       # –°–∏–≥–Ω–∞–ª –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
    
    # –ö–æ–¥—ã –¥–∏–∞–ª–æ–≥–∞
    class DialogCode:
        Accepted = 1
        Rejected = 0
    
    def __init__(self, theme_manager=None, parent=None):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–µ–∫.
        
        Args:
            theme_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä —Ç–µ–º
            parent: –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –≤–∏–¥–∂–µ—Ç
        """
        super().__init__(parent)
        self.theme_manager = theme_manager
        self.settings = {}
        
        self.setup_ui()
        self.load_current_settings()
    
    def _is_light_color(self, color):
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ü–≤–µ—Ç —Å–≤–µ—Ç–ª—ã–º.
        
        Args:
            color (str): –¶–≤–µ—Ç –≤ HEX —Ñ–æ—Ä–º–∞—Ç–µ
            
        Returns:
            bool: True –µ—Å–ª–∏ —Ü–≤–µ—Ç —Å–≤–µ—Ç–ª—ã–π, False –µ—Å–ª–∏ —Ç–µ–º–Ω—ã–π
        """
        # –£–±–∏—Ä–∞–µ–º # –µ—Å–ª–∏ –µ—Å—Ç—å
        if color.startswith('#'):
            color = color[1:]
        
        # –î–ª—è HEX —Ñ–æ—Ä–º–∞—Ç–∞ #RRGGBB
        if len(color) == 6:
            try:
                r = int(color[0:2], 16)
                g = int(color[2:4], 16)
                b = int(color[4:6], 16)
                
                # –§–æ—Ä–º—É–ª–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —è—Ä–∫–æ—Å—Ç–∏
                brightness = (r * 299 + g * 587 + b * 114) / 1000
                return brightness > 128
            except ValueError:
                pass
        
        return True  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—á–∏—Ç–∞–µ–º —Å–≤–µ—Ç–ª—ã–º

        <<<<<<< HEAD
            def load_current_settings(self):
                """–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
                print("üîß load_current_settings() –Ω–∞—á–∞—Ç")
                try:
                    if self.theme_manager:
                        print("üîß theme_manager —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                        current_theme = self.theme_manager.get_current_theme()
                        print(f"üîß current_theme = {current_theme}")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ theme_combo —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω
                        if hasattr(self, 'theme_combo') and self.theme_combo:
                            try:
                                # –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ C++ –æ–±—ä–µ–∫—Ç —É–∂–µ —É–¥–∞–ª–µ–Ω
                                if not self.theme_combo.isVisible() and not sip_is_deleted(self.theme_combo):
                                    print("üîß theme_combo —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –Ω–µ–≤–∏–¥–∏–º")
                                
                                print(f"üîß theme_combo —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {self.theme_combo}")
                                count = self.theme_combo.count()
                                print(f"üîß theme_combo.count() = {count}")
                                
                                # –ù–∞–π—Ç–∏ –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã –≤ –∫–æ–º–±–æ–±–æ–∫—Å–µ
                                for i in range(count):
                                    if self.theme_combo.itemData(i) == current_theme:
                                        self.theme_combo.setCurrentIndex(i)
                                        print(f"üîß –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–Ω–¥–µ–∫—Å —Ç–µ–º—ã: {i}")
                                        break
                            except RuntimeError as e:
                                if "Internal C++ object" in str(e):
                                    print(f"‚ö†Ô∏è C++ –æ–±—ä–µ–∫—Ç QComboBox —É–∂–µ —É–¥–∞–ª–µ–Ω: {e}")
                                else:
                                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å theme_combo: {e}")
                            except Exception as e:
                                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å theme_combo: {e}")
                                print(f"‚ùå –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e)}")
                        else:
                            print("‚ùå theme_combo –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –±—ã–ª —É–¥–∞–ª–µ–Ω!")
                        
                        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º–Ω—ã–π —Ä–µ–∂–∏–º –µ—Å–ª–∏ —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ç–µ–º –µ—Å—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∞—Ç—Ä–∏–±—É—Ç
                        try:
                            if hasattr(self, 'dark_mode_check') and hasattr(self.theme_manager, '_current_variant'):
                                self.dark_mode_check.setChecked(self.theme_manager._current_variant == "dark")
                                print(f"üîß –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ç–µ–º–Ω—ã–π —Ä–µ–∂–∏–º: {self.theme_manager._current_variant == 'dark'}")
                        except Exception as e:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Ç–µ–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞: {e}")
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
                    
                print("üîß load_current_settings() –∑–∞–≤–µ—Ä—à–µ–Ω")
                
        =======
            def load_current_settings(self):
                """–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
                print("üîß load_current_settings() –Ω–∞—á–∞—Ç")
                try:
                    if self.theme_manager:
                        print("üîß theme_manager —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                        current_theme = self.theme_manager.get_current_theme()
                        print(f"üîß current_theme = {current_theme}")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ theme_combo —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω
                        if hasattr(self, 'theme_combo') and self.theme_combo:
                            try:
                                # –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–∞
                                if not is_qt_object_valid(self.theme_combo):
                                    print("‚ö†Ô∏è theme_combo –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã")
                                    return
                                
                                print(f"üîß theme_combo —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {self.theme_combo}")
                                count = self.theme_combo.count()
                                print(f"üîß theme_combo.count() = {count}")
                                
                                # –ù–∞–π—Ç–∏ –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã –≤ –∫–æ–º–±–æ–±–æ–∫—Å–µ
                                for i in range(count):
                                    try:
                                        if self.theme_combo.itemData(i) == current_theme:
                                            self.theme_combo.setCurrentIndex(i)
                                            print(f"üîß –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–Ω–¥–µ–∫—Å —Ç–µ–º—ã: {i}")
                                            break
                                    except Exception as e:
                                        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ theme_combo: {e}")
                                        break
                            except RuntimeError as e:
                                if "Internal C++ object" in str(e):
                                    print(f"‚ö†Ô∏è C++ –æ–±—ä–µ–∫—Ç QComboBox —É–∂–µ —É–¥–∞–ª–µ–Ω: {e}")
                                else:
                                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å theme_combo: {e}")
                            except Exception as e:
                                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å theme_combo: {e}")
                                print(f"‚ùå –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e)}")
                        else:
                            print("‚ùå theme_combo –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –±—ã–ª —É–¥–∞–ª–µ–Ω!")
                        
                        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º–Ω—ã–π —Ä–µ–∂–∏–º –µ—Å–ª–∏ —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ç–µ–º –µ—Å—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∞—Ç—Ä–∏–±—É—Ç
                        try:
                            if hasattr(self, 'dark_mode_check') and hasattr(self.theme_manager, '_current_variant'):
                                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ dark_mode_check –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω
                                if not is_qt_object_valid(self.dark_mode_check):
                                    print("‚ö†Ô∏è dark_mode_check –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É —Ç–µ–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞")
                                    return
                                    
                                self.dark_mode_check.setChecked(self.theme_manager._current_variant == "dark")
                                print(f"üîß –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ç–µ–º–Ω—ã–π —Ä–µ–∂–∏–º: {self.theme_manager._current_variant == 'dark'}")
                        except Exception as e:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Ç–µ–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞: {e}")
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
                    
                print("üîß load_current_settings() –∑–∞–≤–µ—Ä—à–µ–Ω")
        >>>>>>> updated

        <<<<<<< HEAD
        def sip_is_deleted(obj):
            """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –±—ã–ª –ª–∏ C++ –æ–±—ä–µ–∫—Ç —É–¥–∞–ª–µ–Ω"""
            try:
                from sip import isdeleted
                return isdeleted(obj)
            except (ImportError, AttributeError):
                # –ï—Å–ª–∏ sip –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥–∞ isdeleted
                return False

        class GopiAISettingsDialog(QDialog):
            """–î–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–µ–∫ GopiAI"""
            
            settings_applied = Signal(dict)  # –°–∏–≥–Ω–∞–ª –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
            themeChanged = Signal(str)       # –°–∏–≥–Ω–∞–ª –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
            
            # –ö–æ–¥—ã –¥–∏–∞–ª–æ–≥–∞
            class DialogCode:
                Accepted = 1
                Rejected = 0
            
            # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —è—Ä–∫–æ—Å—Ç–∏ —Ü–≤–µ—Ç–∞
            def _is_light_color(self, color):
                """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ü–≤–µ—Ç —Å–≤–µ—Ç–ª—ã–º"""
                # –£–±–∏—Ä–∞–µ–º # –µ—Å–ª–∏ –µ—Å—Ç—å
                if color.startswith('#'):
                    color = color[1:]
                
                # –î–ª—è HEX —Ñ–æ—Ä–º–∞—Ç–∞ #RRGGBB
                if len(color) == 6:
                    r = int(color[0:2], 16)
        # –£–¥–∞–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è sip_is_deleted, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–∞ is_qt_object_valid
        >>>>>>> updated
                            QLabel {{
                                color: {text_color};
                            }}
                            QPushButton {{
                                background-color: {main_color}dd;
                                color: {button_text_color};
                                border: 1px solid #dee2e6;
                                padding: 5px 10px;
                                border-radius: 4px;
                            }}
                            QPushButton:hover {{
                                background-color: {main_color}ee;
                            }}
                            QTabWidget::pane {{
                                border: 1px solid #dee2e6;
                                border-radius: 4px;
                            }}
                            QTabBar::tab {{
                                background-color: {main_color};
                                color: {text_color};
                                padding: 8px 12px;
                            }}
                            QTabBar::tab:selected {{
                                background-color: {main_color}cc;
                            }}
                            SettingsCard {{
                                background-color: {main_color}cc;
                                border: 1px solid #dee2e6;
                                border-radius: 8px;
                                padding: 12px;
                                margin: 4px;
                            }}
                            SettingsCard:hover {{
                                background-color: {main_color}ee;
                            }}
                            QComboBox {{
                                background-color: {main_color}ee;
                                color: {text_color};
                                border: 1px solid #dee2e6;
                                border-radius: 4px;
                                padding: 3px;
                            }}
                            QComboBox:hover {{
                                border: 1px solid #bbb;
                            }}
                            QCheckBox {{
                                color: {text_color};
                            }}
                            QCheckBox::indicator {{
                                width: 15px;
                                height: 15px;
                                border: 1px solid #dee2e6;
                                border-radius: 3px;
                            }}
                            QCheckBox::indicator:checked {{
                                background-color: {main_color}dd;
                            }}
                            QSpinBox, QLineEdit, QTextEdit {{
                                background-color: {main_color}ee;
                                color: {text_color};
                                border: 1px solid #dee2e6;
                                border-radius: 4px;
                                padding: 3px;
                            }}
                            QSpinBox:hover, QLineEdit:hover, QTextEdit:hover {{
                                border: 1px solid #bbb;
                            }}
                            QScrollArea, QScrollBar {{
                                background-color: {main_color};
                                border: none;
                            }}
                        """)
        =======
            def setup_ui(self):
                """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
                self.setWindowTitle("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ GopiAI")
                self.setMinimumSize(600, 500)
                self.resize(800, 600)
                
                # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–∫—É—â—É—é —Ç–µ–º—É –∫ –¥–∏–∞–ª–æ–≥—É
                if self.theme_manager:            # –ü–æ–ª—É—á–∞–µ–º —Ü–≤–µ—Ç–∞ –∏–∑ —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã
                    current_theme_data = self.theme_manager.get_current_theme_data()
                    if current_theme_data:
                        main_color = current_theme_data.get('main_color', '#f8f9fa')
                        text_color = current_theme_data.get('text_color', '#212529')
                        accent_color = current_theme_data.get('accent_color', '#4dabf7')
                        
                        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —è—Ä–∫–æ—Å—Ç–∏ —Ñ–æ–Ω–∞
                        is_light_bg = self._is_light_color(main_color)
                        button_text_color = "#1a1a1a" if is_light_bg else "#ffffff"
                        
                        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫–æ –≤—Å–µ–º—É –¥–∏–∞–ª–æ–≥—É
                        self.setStyleSheet(f"""
                            QDialog {{
                                background-color: {main_color};
                                color: {text_color};
                            }}
                            QLabel {{
                                color: {text_color};
                            }}
                            QPushButton {{
                                background-color: {main_color}dd;
                                color: {button_text_color};
                                border: 1px solid #dee2e6;
                                padding: 5px 10px;
                                border-radius: 4px;
                            }}
                            QPushButton:hover {{
                                background-color: {main_color}ee;
                            }}
                            QPushButton:pressed {{
                                background-color: {main_color}cc;
                            }}
                            QPushButton:disabled {{
                                background-color: {main_color}88;
                            }}
                            QTabWidget::pane {{
                                border: 1px solid #dee2e6;
                                border-radius: 4px;
                            }}
                            QTabBar::tab {{
                                background-color: {main_color};
                                color: {text_color};
                                padding: 8px 12px;
                                border-top-left-radius: 4px;
                                border-top-right-radius: 4px;
                            }}
                            QTabBar::tab:selected {{
                                background-color: {accent_color}22;
                                border-bottom: 2px solid {accent_color};
                            }}
                            QTabBar::tab:hover {{
                                background-color: {main_color}dd;
                            }}
                            SettingsCard {{
                                background-color: {main_color}cc;
                                border: 1px solid #dee2e6;
                                border-radius: 8px;
                                padding: 12px;
                                margin: 4px;
                            }}
                            SettingsCard:hover {{
                                background-color: {main_color}ee;
                            }}
                            QComboBox {{
                                background-color: {main_color}ee;
                                color: {text_color};
                                border: 1px solid #dee2e6;
                                border-radius: 4px;
                                padding: 3px;
                            }}
                            QComboBox:hover {{
                                border: 1px solid #bbb;
                            }}
                            QComboBox::drop-down {{
                                border: 0px;
                            }}
                            QComboBox::down-arrow {{
                                width: 10px;
                                height: 10px;
                            }}
                            QCheckBox {{
                                color: {text_color};
                            }}
                            QCheckBox::indicator {{
                                width: 15px;
                                height: 15px;
                                border: 1px solid #dee2e6;
                                border-radius: 3px;
                            }}
                            QCheckBox::indicator:checked {{
                                background-color: {accent_color};
                                border: 1px solid {accent_color};
                            }}
                            QSpinBox, QLineEdit, QTextEdit {{
                                background-color: {main_color}ee;
                                color: {text_color};
                                border: 1px solid #dee2e6;
                                border-radius: 4px;
                                padding: 3px;
                            }}
                            QSpinBox:hover, QLineEdit:hover, QTextEdit:hover {{
                                border: 1px solid #bbb;
                            }}
                            QScrollArea {{
                                background-color: transparent;
                                border: none;
                            }}
                            QScrollBar:vertical {{
                                background-color: {main_color}aa;
                                width: 12px;
                                margin: 0px;
                                border-radius: 6px;
                            }}
                            QScrollBar::handle:vertical {{
                                background-color: {text_color}44;
                                min-height: 20px;
                                border-radius: 6px;
                            }}
                            QScrollBar::handle:vertical:hover {{
                                background-color: {text_color}88;
                            }}
                            QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical {{
                                height: 0px;
                            }}
                        """)
        >>>>>>> updated

        <<<<<<< HEAD
            def create_appearance_tab(self):
                """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞"""
                tab = QWidget()
                scroll = QScrollArea()
                scroll.setWidgetResizable(True)
                scroll.setWidget(tab)
                
                layout = QVBoxLayout(tab)
                layout.setSpacing(12)
                
                # –ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–µ–º—ã
                theme_card = SettingsCard(
                    "–¢–µ–º–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
                    "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"
                )
                
                theme_layout = QVBoxLayout()
                
                # –í—ã–±–æ—Ä —Ç–µ–º—ã
                theme_combo_layout = QHBoxLayout()
                theme_label = QLabel("–¢–µ–º–∞:")
                theme_combo_layout.addWidget(theme_label)
                
                self.theme_combo = QComboBox()
                self.theme_combo.setMinimumWidth(200)
                print(f"üîß theme_combo —Å–æ–∑–¥–∞–Ω: {self.theme_combo}")
                
                # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–µ–º
                if self.theme_manager:
                    themes = self.theme_manager.get_theme_display_names()
                    for theme_key, display_name in themes.items():
                        self.theme_combo.addItem(display_name, theme_key)
                    print(f"üîß theme_combo –∑–∞–ø–æ–ª–Ω–µ–Ω, count = {self.theme_combo.count()}")
                
                theme_combo_layout.addWidget(self.theme_combo)
                print(f"üîß theme_combo –¥–æ–±–∞–≤–ª–µ–Ω –≤ layout")
                theme_combo_layout.addStretch()
                theme_layout.addLayout(theme_combo_layout)
                
                # –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
                dark_mode_layout = QHBoxLayout()
                dark_mode_layout.addWidget(QLabel("–¢–µ–º–Ω—ã–π —Ä–µ–∂–∏–º:"))
                
                self.dark_mode_check = QCheckBox()
                self.dark_mode_check.setToolTip("–í–∫–ª—é—á–∏—Ç—å —Ç–µ–º–Ω—ã–π —Ä–µ–∂–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
                dark_mode_layout.addWidget(self.dark_mode_check)
                dark_mode_layout.addStretch()
                theme_layout.addLayout(dark_mode_layout)
                
                # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –≤ –∫–∞—Ä—Ç–æ—á–∫—É
                theme_widget = QWidget()
                theme_widget.setLayout(theme_layout)
                theme_card.add_content(theme_widget)
                layout.addWidget(theme_card)
                
                # –ö–∞—Ä—Ç–æ—á–∫–∞ —à—Ä–∏—Ñ—Ç–æ–≤
                font_card = SettingsCard(
                    "–®—Ä–∏—Ñ—Ç—ã",
                    "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –∏ —Ç–∏–ø–∞ —à—Ä–∏—Ñ—Ç–æ–≤"
                )
                
                font_layout = QFormLayout()
                
                self.font_size_spin = QSpinBox()
                self.font_size_spin.setRange(8, 72)
                self.font_size_spin.setValue(10)
                font_layout.addRow("–†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞:", self.font_size_spin)
                
                self.font_family_combo = QComboBox()
                self.font_family_combo.addItems([
                    "System Default", "Arial", "Helvetica", "Times New Roman",
                    "Courier New", "Verdana", "Georgia", "Comic Sans MS"
                ])
                font_layout.addRow("–°–µ–º–µ–π—Å—Ç–≤–æ —à—Ä–∏—Ñ—Ç–∞:", self.font_family_combo)
                
                font_widget = QWidget()
                font_widget.setLayout(font_layout)
                font_card.add_content(font_widget)
                layout.addWidget(font_card)
        =======
            def create_appearance_tab(self):
                """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞"""
                tab = QWidget()
                scroll = QScrollArea()
                scroll.setWidgetResizable(True)
                scroll.setWidget(tab)
                
                layout = QVBoxLayout(tab)
                layout.setSpacing(12)
                
                # –ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–µ–º—ã
                theme_card = SettingsCard(
                    "–¢–µ–º–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
                    "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"
                )
                
                theme_layout = QVBoxLayout()
                
                # –í—ã–±–æ—Ä —Ç–µ–º—ã
                    theme_combo_layout = QHBoxLayout()
                theme_label = QLabel("–¢–µ–º–∞:")
                theme_combo_layout.addWidget(theme_label)
                
                self.theme_combo = QComboBox()
                self.theme_combo.setMinimumWidth(200)
                # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
                self.theme_combo.currentIndexChanged.connect(self._preview_theme_change)
                print(f"üîß theme_combo —Å–æ–∑–¥–∞–Ω: {self.theme_combo}")
                
                # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–µ–º
                if self.theme_manager:
                    themes = self.theme_manager.get_theme_display_names()
                    for theme_key, display_name in themes.items():
                        self.theme_combo.addItem(display_name, theme_key)
                    print(f"üîß theme_combo –∑–∞–ø–æ–ª–Ω–µ–Ω, count = {self.theme_combo.count()}")
                
                theme_combo_layout.addWidget(self.theme_combo)
                print(f"üîß theme_combo –¥–æ–±–∞–≤–ª–µ–Ω –≤ layout")
                theme_combo_layout.addStretch()
                theme_layout.addLayout(theme_combo_layout)
                
                # –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
                dark_mode_layout = QHBoxLayout()
                dark_mode_layout.addWidget(QLabel("–¢–µ–º–Ω—ã–π —Ä–µ–∂–∏–º:"))
                
                self.dark_mode_check = QCheckBox()
                self.dark_mode_check.setToolTip("–í–∫–ª—é—á–∏—Ç—å —Ç–µ–º–Ω—ã–π —Ä–µ–∂–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
                # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
                self.dark_mode_check.toggled.connect(self._preview_theme_change)
                dark_mode_layout.addWidget(self.dark_mode_check)
                dark_mode_layout.addStretch()
                theme_layout.addLayout(dark_mode_layout)
                
                # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –≤ –∫–∞—Ä—Ç–æ—á–∫—É
                theme_widget = QWidget()
                theme_widget.setLayout(theme_layout)
                theme_card.add_content(theme_widget)
                layout.addWidget(theme_card)
                
                # –ö–∞—Ä—Ç–æ—á–∫–∞ —à—Ä–∏—Ñ—Ç–æ–≤
                font_card = SettingsCard(
                    "–®—Ä–∏—Ñ—Ç—ã",
                    "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –∏ —Ç–∏–ø–∞ —à—Ä–∏—Ñ—Ç–æ–≤"
                )
                
                font_layout = QFormLayout()
                
                self.font_size_spin = QSpinBox()
                self.font_size_spin.setRange(8, 72)
                self.font_size_spin.setValue(10)
                font_layout.addRow("–†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞:", self.font_size_spin)
                
                self.font_family_combo = QComboBox()
                self.font_family_combo.addItems([
                    "System Default", "Arial", "Helvetica", "Times New Roman",
                    "Courier New", "Verdana", "Georgia", "Comic Sans MS"
                ])
                font_layout.addRow("–°–µ–º–µ–π—Å—Ç–≤–æ —à—Ä–∏—Ñ—Ç–∞:", self.font_family_combo)
                
                font_widget = QWidget()
                font_widget.setLayout(font_layout)
                font_card.add_content(font_widget)
                layout.addWidget(font_card)
                
                # –î–æ–±–∞–≤–ª—è–µ–º –≤–∫–ª–∞–¥–∫—É –≤ TabWidget
                self.tab_widget.addTab(scroll, "–í–Ω–µ—à–Ω–∏–π –≤–∏–¥")
        >>>>>>> updated

        <<<<<<< HEAD
            def apply_settings(self):
                """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
                try:
                    self.settings = self.collect_settings()
                    
                    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã –∏ —Ç–µ–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
                    if self.theme_manager and 'theme' in self.settings:
                        theme_name = self.settings.get('theme')
                        
                        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º–Ω—ã–π/—Å–≤–µ—Ç–ª—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –≤ –º–µ–Ω–µ–¥–∂–µ—Ä–µ —Ç–µ–º
                        if hasattr(self.theme_manager, '_current_variant') and 'dark_mode' in self.settings:
                            self.theme_manager._current_variant = "dark" if self.settings.get('dark_mode', False) else "light"
                        
                        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É
                        self.theme_manager.apply_theme(theme_name)
                        
                        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É —Ç–∞–∫–∂–µ –∫ –¥–∏–∞–ª–æ–≥—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                        self._update_dialog_theme()
                        
                        # –°–∏–≥–Ω–∞–ª –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
                        self.themeChanged.emit(theme_name)
                    
                    # –ò—Å–ø—É—Å–∫–∞–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ
                    self.settings_applied.emit(self.settings)
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        =======
            def _preview_theme_change(self):
                """–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã –±–µ–∑ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é"""
                try:
                    # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ —É –Ω–∞—Å –µ—Å—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä —Ç–µ–º –∏ –≤—ã–±—Ä–∞–Ω–∞ —Ç–µ–º–∞
                    if not self.theme_manager or not is_qt_object_valid(self.theme_combo):
                        return
                        
                    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ç–µ–º—É
                    selected_theme = self.theme_combo.currentData()
                    if not selected_theme:
                        return
                        
                    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ–º—ã
                    theme_data = self.theme_manager.get_theme_data(selected_theme)
                    if not theme_data:
                        return
                        
                    # –£—á–∏—Ç—ã–≤–∞–µ–º —Ç–µ–º–Ω—ã–π —Ä–µ–∂–∏–º
                    is_dark_mode = False
                    if is_qt_object_valid(self.dark_mode_check):
                        is_dark_mode = self.dark_mode_check.isChecked()
                        
                    # –ü–æ–ª—É—á–∞–µ–º —Ü–≤–µ—Ç–∞ —Å —É—á–µ—Ç–æ–º —Ç–µ–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
                    variant = "dark" if is_dark_mode else "light"
                    main_color = theme_data.get(f'{variant}_main_color', theme_data.get('main_color', '#f8f9fa'))
                    text_color = theme_data.get(f'{variant}_text_color', theme_data.get('text_color', '#212529'))
                    accent_color = theme_data.get(f'{variant}_accent_color', theme_data.get('accent_color', '#4dabf7'))
                    
                    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ —Ç–æ–ª—å–∫–æ –∫ –¥–∏–∞–ª–æ–≥—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
                    self._apply_theme_to_dialog(main_color, text_color, accent_color)
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–µ —Ç–µ–º—ã: {e}")
                    
            def _apply_theme_to_dialog(self, main_color, text_color, accent_color='#4dabf7'):
                """–ü—Ä–∏–º–µ–Ω—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞ —Ç–µ–º—ã –∫ –¥–∏–∞–ª–æ–≥—É –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
                try:
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —è—Ä–∫–æ—Å—Ç–∏ —Ñ–æ–Ω–∞
                    is_light_bg = self._is_light_color(main_color)
                    button_text_color = "#1a1a1a" if is_light_bg else "#ffffff"
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤—Å–µ—Ö –≤–∏–¥–∂–µ—Ç–æ–≤
                    self.setStyleSheet(f"""
                        QDialog {{
                            background-color: {main_color};
                            color: {text_color};
                        }}
                        QLabel {{
                            color: {text_color};
                        }}
                        QPushButton {{
                            background-color: {main_color}dd;
                            color: {button_text_color};
                            border: 1px solid #dee2e6;
                            padding: 5px 10px;
                            border-radius: 4px;
                        }}
                        QPushButton:hover {{
                            background-color: {main_color}ee;
                        }}
                        QPushButton:pressed {{
                            background-color: {main_color}cc;
                        }}
                        QPushButton:disabled {{
                            background-color: {main_color}88;
                        }}
                        QTabWidget::pane {{
                            border: 1px solid #dee2e6;
                            border-radius: 4px;
                        }}
                        QTabBar::tab {{
                            background-color: {main_color};
                            color: {text_color};
                            padding: 8px 12px;
                            border-top-left-radius: 4px;
                            border-top-right-radius: 4px;
                        }}
                        QTabBar::tab:selected {{
                            background-color: {accent_color}22;
                            border-bottom: 2px solid {accent_color};
                        }}
                        QTabBar::tab:hover {{
                            background-color: {main_color}dd;
                        }}
                        SettingsCard {{
                            background-color: {main_color}cc;
                            border: 1px solid #dee2e6;
                            border-radius: 8px;
                            padding: 12px;
                            margin: 4px;
                        }}
                        SettingsCard:hover {{
                            background-color: {main_color}ee;
                        }}
                        QComboBox {{
                            background-color: {main_color}ee;
                            color: {text_color};
                            border: 1px solid #dee2e6;
                            border-radius: 4px;
                            padding: 3px;
                        }}
                        QComboBox:hover {{
                            border: 1px solid #bbb;
                        }}
                        QComboBox::drop-down {{
                            border: 0px;
                        }}
                        QComboBox::down-arrow {{
                            width: 10px;
                            height: 10px;
                        }}
                        QCheckBox {{
                            color: {text_color};
                        }}
                        QCheckBox::indicator {{
                            width: 15px;
                            height: 15px;
                            border: 1px solid #dee2e6;
                            border-radius: 3px;
                        }}
                        QCheckBox::indicator:checked {{
                            background-color: {accent_color};
                            border: 1px solid {accent_color};
                        }}
                        QSpinBox, QLineEdit, QTextEdit {{
                            background-color: {main_color}ee;
                            color: {text_color};
                            border: 1px solid #dee2e6;
                            border-radius: 4px;
                            padding: 3px;
                        }}
                        QSpinBox:hover, QLineEdit:hover, QTextEdit:hover {{
                            border: 1px solid #bbb;
                        }}
                        QScrollArea {{
                            background-color: transparent;
                            border: none;
                        }}
                        QScrollBar:vertical {{
                            background-color: {main_color}aa;
                            width: 12px;
                            margin: 0px;
                            border-radius: 6px;
                        }}
                        QScrollBar::handle:vertical {{
                            background-color: {text_color}44;
                            min-height: 20px;
                            border-radius: 6px;
                        }}
                        QScrollBar::handle:vertical:hover {{
                            background-color: {text_color}88;
                        }}
                        QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical {{
                            height: 0px;
                        }}
                    """)
                    
                    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ –≤–∏–¥–∂–µ—Ç—ã
                    for child in self.findChildren(QWidget):
                        if is_qt_object_valid(child):
                            child.update()
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–∫–∂–µ —Å–∞–º –¥–∏–∞–ª–æ–≥
                    self.update()
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ —Ç–µ–º—ã –∫ –¥–∏–∞–ª–æ–≥—É: {e}")
        >>>>>>> updated

        <<<<<<< HEAD
            def _update_dialog_theme(self):
                """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–º—É –¥–∏–∞–ª–æ–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫, –ø—Ä–∏–º–µ–Ω—è—è —Ç–µ–∫—É—â–∏–µ —Ü–≤–µ—Ç–∞ –∏–∑ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ç–µ–º"""
                try:
                    if self.theme_manager:
                        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã
                        current_theme_data = self.theme_manager.get_current_theme_data()
                        if current_theme_data:
                            main_color = current_theme_data.get('main_color', '#f8f9fa')
                            text_color = current_theme_data.get('text_color', '#212529')
                            
                            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —è—Ä–∫–æ—Å—Ç–∏ —Ñ–æ–Ω–∞
                            is_light_bg = self._is_light_color(main_color)
                            button_text_color = "#1a1a1a" if is_light_bg else "#ffffff"
                            
                            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤—Å–µ—Ö –≤–∏–¥–∂–µ—Ç–æ–≤
                            self.setStyleSheet(f"""
                                QDialog {{
                                    background-color: {main_color};
                                    color: {text_color};
                                }}
                                QLabel {{
                                    color: {text_color};
                                }}
                                QPushButton {{
                                    background-color: {main_color}dd;
                                    color: {button_text_color};
                                    border: 1px solid #dee2e6;
                                    padding: 5px 10px;
                                    border-radius: 4px;
                                }}
                                QPushButton:hover {{
                                    background-color: {main_color}ee;
                                }}
                                QPushButton:pressed {{
                                    background-color: {main_color}cc;
                                }}
                                QPushButton:disabled {{
                                    background-color: {main_color}88;
                                }}
                                QTabWidget::pane {{
                                    border: 1px solid #dee2e6;
                                    border-radius: 4px;
                                }}
                                QTabBar::tab {{
                                    background-color: {main_color};
                                    color: {text_color};
                                    padding: 8px 12px;
                                }}
                                QTabBar::tab:selected {{
                                    background-color: {main_color}cc;
                                }}
                                QTabBar::tab:hover {{
                                    background-color: {main_color}dd;
                                }}
                                SettingsCard {{
                                    background-color: {main_color}cc;
                                    border: 1px solid #dee2e6;
                                    border-radius: 8px;
                                    padding: 12px;
                                    margin: 4px;
                                }}
                                SettingsCard:hover {{
                                    background-color: {main_color}ee;
                                }}
                                SettingsCard:pressed {{
                                    background-color: {main_color}dd;
                                }}
                                SettingsCard:disabled {{
                                    background-color: {main_color}66;
                                }}
                                QComboBox {{
                                    background-color: {main_color}ee;
                                    color: {text_color};
                                    border: 1px solid #dee2e6;
                                    border-radius: 4px;
                                    padding: 3px;
                                }}
                                QComboBox:hover {{
                                    border: 1px solid #bbb;
                                }}
                                QCheckBox {{
                                    color: {text_color};
                                }}
                                QCheckBox::indicator {{
                                    width: 15px;
                                    height: 15px;
                                    border: 1px solid #dee2e6;
                                    border-radius: 3px;
                                }}
                                QCheckBox::indicator:checked {{
                                    background-color: {main_color}dd;
                                }}
                                QSpinBox, QLineEdit, QTextEdit {{
                                    background-color: {main_color}ee;
                                    color: {text_color};
                                    border: 1px solid #dee2e6;
                                    border-radius: 4px;
                                    padding: 3px;
                                }}
                                QSpinBox:hover, QLineEdit:hover, QTextEdit:hover {{
                                    border: 1px solid #bbb;
                                }}
                                QScrollArea, QScrollBar {{
                                    background-color: {main_color};
                                    border: none;
                                }}
                            """)
                            
                            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ –≤–∏–¥–∂–µ—Ç—ã
                            for child in self.findChildren(QWidget):
                                if is_qt_object_valid(child):
                                    child.update()
                            
                            # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–∫–∂–µ —Å–∞–º –¥–∏–∞–ª–æ–≥
                            self.update()
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–µ–º—ã –¥–∏–∞–ª–æ–≥–∞: {e}")
        =======
            def apply_settings(self):
                """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
                try:
                    self.settings = self.collect_settings()
                    
                    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã –∏ —Ç–µ–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
                    if self.theme_manager and 'theme' in self.settings:
                        theme_name = self.settings.get('theme')
                        
                        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º–Ω—ã–π/—Å–≤–µ—Ç–ª—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –≤ –º–µ–Ω–µ–¥–∂–µ—Ä–µ —Ç–µ–º
                        if hasattr(self.theme_manager, '_current_variant') and 'dark_mode' in self.settings:
                            self.theme_manager._current_variant = "dark" if self.settings.get('dark_mode', False) else "light"
                        
                        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É
                        self.theme_manager.apply_theme(theme_name)
                        
                        # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ–º—ã –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
                        current_theme_data = self.theme_manager.get_current_theme_data()
                        if current_theme_data:
                            variant = "dark" if self.settings.get('dark_mode', False) else "light"
                            main_color = current_theme_data.get(f'{variant}_main_color', current_theme_data.get('main_color', '#f8f9fa'))
                            text_color = current_theme_data.get(f'{variant}_text_color', current_theme_data.get('text_color', '#212529'))
                            accent_color = current_theme_data.get(f'{variant}_accent_color', current_theme_data.get('accent_color', '#4dabf7'))
                            
                            # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É –∫ –¥–∏–∞–ª–æ–≥—É –Ω–∞—Å—Ç—Ä–æ–µ–∫
                            self._apply_theme_to_dialog(main_color, text_color, accent_color)
                        
                        # –°–∏–≥–Ω–∞–ª –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
                        self.themeChanged.emit(theme_name)
                    
                    # –ò—Å–ø—É—Å–∫–∞–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ
                    self.settings_applied.emit(self.settings)
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
                
            def _update_dialog_theme(self):
                """–£—Å—Ç–∞—Ä–µ–≤—à–∏–π –º–µ—Ç–æ–¥, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ _apply_theme_to_dialog"""
                try:
                    if self.theme_manager:
                        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã
                        current_theme_data = self.theme_manager.get_current_theme_data()
                        if current_theme_data:
                            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç (—Å–≤–µ—Ç–ª—ã–π/—Ç–µ–º–Ω—ã–π)
                            variant = "dark" if hasattr(self.theme_manager, '_current_variant') and self.theme_manager._current_variant == "dark" else "light"
                            
                            # –ü–æ–ª—É—á–∞–µ–º —Ü–≤–µ—Ç–∞ —Å —É—á–µ—Ç–æ–º –≤–∞—Ä–∏–∞–Ω—Ç–∞
                            main_color = current_theme_data.get(f'{variant}_main_color', current_theme_data.get('main_color', '#f8f9fa'))
                            text_color = current_theme_data.get(f'{variant}_text_color', current_theme_data.get('text_color', '#212529'))
                            accent_color = current_theme_data.get(f'{variant}_accent_color', current_theme_data.get('accent_color', '#4dabf7'))
                            
                            # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É –∫ –¥–∏–∞–ª–æ–≥—É
                            self._apply_theme_to_dialog(main_color, text_color, accent_color)
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–µ–º—ã –¥–∏–∞–ª–æ–≥–∞: {e}")