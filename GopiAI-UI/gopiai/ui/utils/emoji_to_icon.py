"""
Emoji to Icon Utility
=====================

–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –∑–∞–º–µ–Ω—ã emoji –Ω–∞ –∫—Ä–∞—Å–∏–≤—ã–µ –∏–∫–æ–Ω–∫–∏ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ GopiAI.
"""

from typing import Optional, Dict
from PySide6.QtGui import QIcon
from PySide6.QtWidgets import QPushButton, QLabel

# –ú–∞–ø–ø–∏–Ω–≥ emoji –∫ –∏–º–µ–Ω–∞–º –∏–∫–æ–Ω–æ–∫ Lucide
EMOJI_TO_ICON_MAP: Dict[str, str] = {
    # –ù–∞–≤–∏–≥–∞—Ü–∏—è
    "üè†": "home",
    "‚¨ÜÔ∏è": "arrow-up", 
    "‚¨áÔ∏è": "arrow-down",
    "‚¨ÖÔ∏è": "arrow-left",
    "‚û°Ô∏è": "arrow-right",
    "üîô": "arrow-left",
    "üîÑ": "refresh-cw",
    
    # –§–∞–π–ª—ã –∏ –ø–∞–ø–∫–∏
    "üìÅ": "folder",
    "üìÇ": "folder-open",
    "üìÑ": "file-text",
    "üìù": "edit-3",
    "üíæ": "save",
    "üóÇÔ∏è": "folder-tree",
    "üì¶": "package",
    
    # UI —ç–ª–µ–º–µ–Ω—Ç—ã –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    "üîß": "settings",
    "‚öôÔ∏è": "cog",
    "üé®": "palette",
    "üéØ": "target",
    "üöÄ": "rocket",
    "üîç": "search",
    "üîé": "search",
    
    # –î–µ–π—Å—Ç–≤–∏—è
    "‚ûï": "plus",
    "‚ùå": "x",
    "‚úÖ": "check",
    "‚ö†Ô∏è": "alert-triangle",
    "‚ùó": "alert-circle",
    "üí°": "lightbulb",
    
    # –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    "üíª": "monitor",
    "üñ•Ô∏è": "pc", 
    "üì±": "smartphone",
    "üîå": "plug",
    "üåê": "globe",
    "üì°": "wifi",
    
    # –û–∫–Ω–æ –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    "‚Äî": "minimize",
    "‚ùê": "square",
    "‚ñ°": "maximize",
    "√ó": "x",
    
    # –°—Ç–∞—Ç—É—Å—ã
    "üü¢": "check-circle",
    "üî¥": "x-circle", 
    "üü°": "alert-circle",
    "üîµ": "info",
    
    # –¢–µ–º—ã
    "üåô": "moon",
    "‚òÄÔ∏è": "sun",
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ
    "üìä": "bar-chart-3",
    "üìà": "trending-up",
    "üìâ": "trending-down",
    "üîó": "link",
    "üìã": "clipboard",
    "üéµ": "music",
    "üé•": "video",
    "üì∑": "camera",
    "üéÆ": "gamepad-2",
}


class EmojiToIconConverter:
    """–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä emoji –≤ –∏–∫–æ–Ω–∫–∏"""
    
    def __init__(self, icon_manager=None):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞
        
        Args:
            icon_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –∏–∫–æ–Ω–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, UniversalIconManager)
        """
        self.icon_manager = icon_manager
        
    def convert_button_emoji_to_icon(self, button: QPushButton, emoji: str) -> bool:
        """
        –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç emoji –Ω–∞ –∫–Ω–æ–ø–∫–µ –≤ –∏–∫–æ–Ω–∫—É
        
        Args:
            button: –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            emoji: Emoji –¥–ª—è –∑–∞–º–µ–Ω—ã
            
        Returns:
            bool: True –µ—Å–ª–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞
        """
        if not self.icon_manager:
            return False
            
        icon_name = EMOJI_TO_ICON_MAP.get(emoji)
        if not icon_name:
            return False
            
        try:
            icon = self.icon_manager.get_icon(icon_name)
            if icon and not icon.isNull():
                button.setIcon(icon)
                # –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç, —Ç–∞–∫ –∫–∞–∫ —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–∫–æ–Ω–∫—É
                if button.text() == emoji:
                    button.setText("")
                return True
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ emoji {emoji} –≤ –∏–∫–æ–Ω–∫—É: {e}")
            
        return False
    
    def convert_label_emoji_to_icon(self, label: QLabel, emoji: str) -> bool:
        """
        –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç emoji –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ –≤ –∏–∫–æ–Ω–∫—É
        
        Args:
            label: –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            emoji: Emoji –¥–ª—è –∑–∞–º–µ–Ω—ã
            
        Returns:
            bool: True –µ—Å–ª–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞
        """
        if not self.icon_manager:
            return False
            
        icon_name = EMOJI_TO_ICON_MAP.get(emoji)
        if not icon_name:
            return False
            
        try:
            icon = self.icon_manager.get_icon(icon_name)
            if icon and not icon.isNull():
                # –ó–∞–º–µ–Ω—è–µ–º emoji –≤ —Ç–µ–∫—Å—Ç–µ
                current_text = label.text()
                new_text = current_text.replace(emoji, "").strip()
                label.setText(new_text)
                
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∫–æ–Ω–∫—É –∫–∞–∫ pixmap
                pixmap = icon.pixmap(16, 16)
                label.setPixmap(pixmap)
                return True
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ emoji {emoji} –≤ –∏–∫–æ–Ω–∫—É: {e}")
            
        return False
    
    def get_icon_for_emoji(self, emoji: str) -> Optional[QIcon]:
        """
        –ü–æ–ª—É—á–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è emoji
        
        Args:
            emoji: Emoji –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
            
        Returns:
            QIcon –∏–ª–∏ None
        """
        if not self.icon_manager:
            return None
            
        icon_name = EMOJI_TO_ICON_MAP.get(emoji)
        if not icon_name:
            return None
            
        try:
            return self.icon_manager.get_icon(icon_name)
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –¥–ª—è emoji {emoji}: {e}")
            return None
    
    def replace_emoji_in_text(self, text: str) -> str:
        """
        –ó–∞–º–µ–Ω—è–µ—Ç –≤—Å–µ emoji –≤ —Ç–µ–∫—Å—Ç–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–∫–æ–Ω–æ–∫
        
        Args:
            text: –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç —Å emoji
            
        Returns:
            str: –¢–µ–∫—Å—Ç —Å –∑–∞–º–µ–Ω–µ–Ω–Ω—ã–º–∏ emoji
        """
        result = text
        for emoji, icon_name in EMOJI_TO_ICON_MAP.items():
            result = result.replace(emoji, f"[{icon_name}]")
        return result


def apply_icons_to_component(component, icon_manager=None):
    """
    –ü—Ä–∏–º–µ–Ω—è–µ—Ç –∏–∫–æ–Ω–∫–∏ –∫–æ –≤—Å–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    
    Args:
        component: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        icon_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –∏–∫–æ–Ω–æ–∫
    """
    if not icon_manager:
        return
        
    converter = EmojiToIconConverter(icon_manager)
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –∏ –∑–∞–º–µ–Ω—è–µ–º emoji
    buttons = component.findChildren(QPushButton)
    for button in buttons:
        text = button.text()
        if text in EMOJI_TO_ICON_MAP:
            converter.convert_button_emoji_to_icon(button, text)
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –∑–∞–º–µ–Ω—è–µ–º emoji
    labels = component.findChildren(QLabel)
    for label in labels:
        text = label.text()
        for emoji in EMOJI_TO_ICON_MAP:
            if emoji in text:
                converter.convert_label_emoji_to_icon(label, emoji)
                break


__all__ = [
    'EMOJI_TO_ICON_MAP',
    'EmojiToIconConverter', 
    'apply_icons_to_component'
]