"""
–ú–æ–¥—É–ª—å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏ GopiAI
=============================================================

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ RAG —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏
–ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è GopiAI. –ü—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –∏–∑ main.py –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    from gopiai.ui.memory_initializer import init_memory_system

–ê–≤—Ç–æ—Ä: Crazy Coder
–î–∞—Ç–∞: 2025-01-27
"""

import os
import sys
import logging
from pathlib import Path
from typing import Optional

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)


def init_memory_system(silent: bool = True, port: int = 8080) -> bool:
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏ GopiAI —Å –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º RAG —Å–µ—Ä–≤–µ—Ä–∞
    
    Args:
        silent: –¢–∏—Ö–∏–π —Ä–µ–∂–∏–º (–±–µ–∑ –ª–∏—à–Ω–∏—Ö –≤—ã–≤–æ–¥–æ–≤ –≤ –∫–æ–Ω—Å–æ–ª—å)
        port: –ü–æ—Ä—Ç –¥–ª—è RAG —Å–µ—Ä–≤–µ—Ä–∞
        
    Returns:
        True –µ—Å–ª–∏ —Å–∏—Å—Ç–µ–º–∞ –ø–∞–º—è—Ç–∏ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞
    """
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ RAG —Å–∏—Å—Ç–µ–º–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞
        current_dir = Path(__file__).parent.parent.parent.parent  # GopiAI-UI/gopiai/ui/ -> –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
        rag_system_path = current_dir / "rag_memory_system"
        
        if not rag_system_path.exists():
            if not silent:
                print("‚ö†Ô∏è RAG —Å–∏—Å—Ç–µ–º–∞ –ø–∞–º—è—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é")
            return False
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ RAG —Å–∏—Å—Ç–µ–º–µ –≤ sys.path –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç
        rag_system_str = str(rag_system_path)
        if rag_system_str not in sys.path:
            sys.path.insert(0, rag_system_str)
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º RAG —Å–µ—Ä–≤–µ—Ä
        try:
            from server_manager import start_rag_server
            
            if not silent:
                print("üß† –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏ GopiAI...")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º RAG —Å–µ—Ä–≤–µ—Ä –≤ —Ç–∏—Ö–æ–º —Ä–µ–∂–∏–º–µ
            server_manager = start_rag_server(port=port, silent=silent)
            
            if server_manager and server_manager.is_running:
                if not silent:
                    print(f"‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–∞–º—è—Ç–∏ –∑–∞–ø—É—â–µ–Ω–∞ –Ω–∞ http://127.0.0.1:{port}")
                return True
            else:
                if not silent:
                    print("‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –ø–∞–º—è—Ç–∏ –Ω–µ —Å–º–æ–≥–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è")
                return False
                
        except ImportError as e:
            if not silent:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å RAG —Å–µ—Ä–≤–µ—Ä: {e}")
            return False
            
    except Exception as e:
        logger.warning(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏: {e}")
        if not silent:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏: {e}")
        return False


def get_memory_status() -> dict:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏
    
    Returns:
        –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏
    """
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ server_manager
        current_dir = Path(__file__).parent.parent.parent.parent
        rag_system_path = current_dir / "rag_memory_system"
        rag_system_str = str(rag_system_path)
        
        if rag_system_str not in sys.path:
            sys.path.insert(0, rag_system_str)
        
        from server_manager import get_rag_server_status
        return get_rag_server_status()
        
    except Exception as e:
        return {
            "running": False,
            "error": f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å: {e}"
        }


def stop_memory_system():
    """
    –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏
    """
    try:
        current_dir = Path(__file__).parent.parent.parent.parent
        rag_system_path = current_dir / "rag_memory_system"
        rag_system_str = str(rag_system_path)
        
        if rag_system_str not in sys.path:
            sys.path.insert(0, rag_system_str)
        
        from server_manager import stop_rag_server
        stop_rag_server()
        
    except Exception as e:
        logger.warning(f"–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏: {e}")


# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
_auto_init = os.environ.get("GOPIAI_AUTO_INIT_MEMORY", "").lower() in ("1", "true", "yes")

if _auto_init:
    init_memory_system(silent=True)


if __name__ == "__main__":
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –ø–∞–º—è—Ç–∏...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤ –Ω–µ-—Ç–∏—Ö–æ–º —Ä–µ–∂–∏–º–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    success = init_memory_system(silent=False)
    
    if success:
        print("\nüìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏:")
        status = get_memory_status()
        for key, value in status.items():
            print(f"  {key}: {value}")
        
        print("\n‚è≥ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç... (–Ω–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏)")
        try:
            import time
            while True:
                time.sleep(1)
        except KeyboardInterrupt:
            print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏...")
            stop_memory_system()
            print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –ø–∞–º—è—Ç–∏")