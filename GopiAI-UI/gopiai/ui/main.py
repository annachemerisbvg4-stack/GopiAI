#!/usr/bin/env python3
"""
GopiAI Standalone Interface - –ú–æ–¥—É–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π —Ç–µ–º
=====================================================================

–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–æ–¥—É–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ GopiAI.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–º–∞–º–∏ —á–µ—Ä–µ–∑ ThemeManager.

–ê–≤—Ç–æ—Ä: Crazy Coder
–í–µ—Ä—Å–∏—è: 0.3.2 (–ú–æ–¥—É–ª—å–Ω–∞—è —Å —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π —Ç–µ–º)
–î–∞—Ç–∞: 2025-06-03
"""

import sys
import os
import warnings
from pathlib import Path
from dotenv import load_dotenv
import chardet

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ WebEngine –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫


from PySide6.QtWidgets import (
    QApplication,
    QMainWindow,
    QWidget,
    QVBoxLayout,
    QHBoxLayout,
    QSplitter,
    QMenuBar,
    QLabel,
    QFileDialog,
    QMessageBox,
    QTabWidget,
    QSizePolicy,
)
from PySide6.QtCore import Qt, QTimer
from PySide6.QtGui import QAction, QPalette

# –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Ç–µ–º
from gopiai.ui.utils.theme_manager import ThemeManager
from gopiai.ui.dialogs.settings_dialog import GopiAISettingsDialog

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—É—Ç–µ–π –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π GopiAI
script_dir = os.path.dirname(os.path.abspath(__file__))
gopiai_modules_root = os.path.dirname(os.path.dirname(os.path.dirname(script_dir)))

module_paths = [
    os.path.join(gopiai_modules_root, "GopiAI-Core"),
    os.path.join(gopiai_modules_root, "GopiAI-Widgets"),
    os.path.join(gopiai_modules_root, "GopiAI-App"),
    os.path.join(gopiai_modules_root, "GopiAI-Extensions"),
    os.path.join(gopiai_modules_root, "rag_memory_system"),
    gopiai_modules_root,
]

for path in module_paths:
    if path not in sys.path:
        sys.path.insert(0, path)

print("–ú–æ–¥—É–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è GopiAI v0.3.2 —Å —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π —Ç–µ–º")
print("–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –ø—É—Ç–∏ –¥–ª—è –º–æ–¥—É–ª–µ–π:")
for p in module_paths:
    print(f"- {p} (—Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {os.path.exists(p)})")

# –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ UI
try:
    from gopiai.ui.components import (
        StandaloneMenuBar,
        StandaloneTitlebar,
        StandaloneTitlebarWithMenu,
        CustomGrip,
        FileExplorerWidget,
        TabDocumentWidget,
        ChatWidget,
        TerminalWidget,
    )

    print("[OK] –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ UI –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏ GopiAI
    from gopiai.ui.memory_initializer import init_memory_system
    try:
        init_ok = init_memory_system(silent=False)
        print(f"[MEMORY] Initialisation status: {init_ok}")
        if not init_ok:
            print("[WARNING] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞–º—è—Ç–∏ –Ω–µ—É–¥–∞—á–Ω–∞, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç —Ä–∞–±–æ—Ç—É –±–µ–∑ –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–∞–º—è—Ç–∏")
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏: {e}")
        print("[WARNING] –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç —Ä–∞–±–æ—Ç—É –±–µ–∑ —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏")
    
    MODULES_LOADED = True

except ImportError as e:
    print(f"[WARNING] –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ UI –º–æ–¥—É–ª–µ–π: {e}")
    print("–ó–∞–ø—É—Å–∫–∞–µ–º –≤ fallback —Ä–µ–∂–∏–º–µ...")
    MODULES_LOADED = False

    # Fallback - —Å–æ–∑–¥–∞—ë–º –ø—Ä–æ—Å—Ç—ã–µ –∑–∞–≥–ª—É—à–∫–∏
    class SimpleWidget(QWidget):
        def __init__(self, name="Widget"):
            super().__init__()
            self.setFixedSize(200, 100)
            layout = QVBoxLayout()
            layout.addWidget(QLabel(f"Fallback: {name}"))
            self.setLayout(layout)
            
            # Create dummy signals for file explorer compatibility
            from PySide6.QtCore import Signal
            self.file_double_clicked = Signal(str)
            self.file_selected = Signal(str)

        def add_new_tab(self, title, content):
            print(f"Fallback: add_new_tab({title})")

        def add_notebook_tab(self, title, content, menu_bar=None):
            print(f"Fallback: add_notebook_tab({title})")

        def get_current_text(self):
            return "Fallback content"

        def set_window(self, window):
            pass

        def add_browser_tab(self, url="about:blank", title="–ë—Ä–∞—É–∑–µ—Ä"):
            print(f"Fallback: add_browser_tab({url}, {title}) - Browser not available")

        def open_file_in_tab(self, file_path):
            print(f"Fallback: open_file_in_tab({file_path})")

    class SimpleMenuBar(QMenuBar):
        def refresh_icons(self):
            pass

    StandaloneMenuBar = SimpleMenuBar
    StandaloneTitlebar = lambda parent=None: SimpleWidget("Titlebar")
    StandaloneTitlebarWithMenu = lambda parent=None: SimpleWidget("TitlebarWithMenu")
    CustomGrip = lambda parent, direction: QWidget()
    FileExplorerWidget = lambda parent=None, icon_manager=None: SimpleWidget("FileExplorer")
    TabDocumentWidget = lambda parent=None: SimpleWidget("TabDocument")
    TerminalWidget = lambda parent=None: SimpleWidget("Terminal")

    class GlobalFallbackThemeManager:
        def __init__(self):
            self.current_theme = "default"
        
        def apply_theme(self, app_or_theme):
            print(f"Fallback: apply_theme({app_or_theme})")
            return False
        


    if 'ThemeManager' not in globals() or ThemeManager is None:
        ThemeManager = GlobalFallbackThemeManager

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–∏—Å—Ç–µ–º
AutoIconSystem = None
ThemeManagerClass = None
GopiAIThemeManager = None
apply_theme = None
load_theme = None
save_theme = None
MATERIAL_SKY_THEME = {"name": "Material Sky", "primary": "#2196F3"}
EXTENSIONS_AVAILABLE = True


class FallbackThemeManager:
    """Fallback –º–µ–Ω–µ–¥–∂–µ—Ä —Ç–µ–º –¥–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ –æ—Å–Ω–æ–≤–Ω–æ–π ThemeManager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"""
    def __init__(self):
        self.current_theme = "default"
    
    def apply_theme(self, app_or_theme):
        print(f"Fallback: apply_theme({app_or_theme})")
        return False


class FramelessGopiAIStandaloneWindow(QMainWindow):
    """–û—Å–Ω–æ–≤–Ω–æ–µ frameless –æ–∫–Ω–æ GopiAI —Å –º–æ–¥—É–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π —Ç–µ–º"""



    def __init__(self):
        super().__init__()
        print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ GopiAI —Å —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π —Ç–µ–º...")

        # –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫–Ω–∞
        self.setWindowTitle("GopiAI v0.3.2 - –ú–æ–¥—É–ª—å–Ω—ã–π –ò–ò –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
        self.setMinimumSize(1000, 700)
        self.resize(1400, 900)

        # Frameless –æ–∫–Ω–æ
        self.setWindowFlags(Qt.WindowType.FramelessWindowHint)
        self.setAttribute(Qt.WidgetAttribute.WA_TranslucentBackground, False)

        # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
        self.TITLEBAR_HEIGHT = 40
        self.GRIP_SIZE = 10
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º
        self._init_theme_system()
        self._setup_ui()
        self._init_grips()
        self._connect_menu_signals()
        self._apply_vscode_like_layout()
        self._setup_panel_shortcuts()


        print("[OK] FramelessGopiAIStandaloneWindow –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")


    def _setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥—É–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        print("[SETUP] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UI –∏–∑ –º–æ–¥—É–ª–µ–π...")

        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        main_layout = QVBoxLayout(central_widget)
        main_layout.setContentsMargins(0, 0, 0, 0)
        main_layout.setSpacing(0)
        
        # Titlebar —Å –º–µ–Ω—é (–º–æ–¥—É–ª—å–Ω—ã–π)
        if MODULES_LOADED:
            self.titlebar_with_menu = StandaloneTitlebarWithMenu(self)
            if hasattr(self.titlebar_with_menu, "set_window"):
                self.titlebar_with_menu.set_window(self)
        else:
            self.titlebar_with_menu = StandaloneTitlebarWithMenu()
        self.titlebar_with_menu.setFixedHeight(self.TITLEBAR_HEIGHT * 2)
        main_layout.addWidget(self.titlebar_with_menu)

        # --- –ù–æ–≤—ã–π layout: –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–ø–ª–∏—Ç—Ç–µ—Ä (–ø—Ä–æ–≤–æ–¥–Ω–∏–∫ | —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å | —á–∞—Ç) ---
        main_splitter = QSplitter(Qt.Orientation.Horizontal)
        main_layout.addWidget(main_splitter, 1)

        # –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - —Ñ–∞–π–ª–æ–≤—ã–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ (–º–æ–¥—É–ª—å–Ω—ã–π)
        self.file_explorer = FileExplorerWidget(icon_manager=self.icon_manager)
        self.file_explorer.setMinimumWidth(0)
        self.file_explorer.setMaximumWidth(600)
        self.file_explorer.resize(300, 600)
        size_policy = QSizePolicy(QSizePolicy.Policy.Fixed, QSizePolicy.Policy.Expanding)
        self.file_explorer.setSizePolicy(size_policy)
        main_splitter.addWidget(self.file_explorer)

        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å: –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Å–ø–ª–∏—Ç—Ç–µ—Ä (TabDocumentWidget | —Ç–µ—Ä–º–∏–Ω–∞–ª)
        center_vertical_splitter = QSplitter(Qt.Orientation.Vertical)
        main_splitter.addWidget(center_vertical_splitter)

        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å - —Å–∏—Å—Ç–µ–º–∞ –≤–∫–ª–∞–¥–æ–∫ (–º–æ–¥—É–ª—å–Ω–∞—è)
        self.tab_document = TabDocumentWidget()
        self.tab_document.setMinimumWidth(500)
        center_vertical_splitter.addWidget(self.tab_document)

        # –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å ‚Äî —Ç–µ—Ä–º–∏–Ω–∞–ª –ø–æ–¥ TabDocumentWidget
        self.terminal_widget = TerminalWidget()
        self.terminal_widget.setMinimumHeight(150)
        self.terminal_widget.setMaximumHeight(400)
        terminal_size_policy = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Fixed)
        self.terminal_widget.setSizePolicy(terminal_size_policy)
        center_vertical_splitter.addWidget(self.terminal_widget)

        # –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - —á–∞—Ç —Å –ò–ò (–º–æ–¥—É–ª—å–Ω—ã–π)
        self.chat_widget = ChatWidget()
        print("üîç ChatWidget —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        if hasattr(self, 'theme_manager'):
            print("üîç –ü–µ—Ä–µ–¥–∞–µ–º theme_manager –≤ ChatWidget...")
            self.chat_widget.set_theme_manager(self.theme_manager)
            print("üîç theme_manager –ø–µ—Ä–µ–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        self.chat_widget.setMinimumWidth(0)
        self.chat_widget.setMaximumWidth(600)
        chat_size_policy = QSizePolicy(QSizePolicy.Policy.Fixed, QSizePolicy.Policy.Expanding)
        self.chat_widget.setSizePolicy(chat_size_policy)
        main_splitter.addWidget(self.chat_widget)

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–ø–æ—Ä—Ü–∏–π —Å–ø–ª–∏—Ç—Ç–µ—Ä–æ–≤
        main_splitter.setSizes([100, 900, 100])  # –ü—Ä–æ–≤–æ–¥–Ω–∏–∫ | —Ü–µ–Ω—Ç—Ä | —á–∞—Ç
        center_vertical_splitter.setSizes([700, 200])  # TabDocumentWidget | —Ç–µ—Ä–º–∏–Ω–∞–ª
        main_splitter.setCollapsible(0, True)   # –ü—Ä–æ–≤–æ–¥–Ω–∏–∫ –º–æ–∂–Ω–æ —Å—Ö–ª–æ–ø–Ω—É—Ç—å
        main_splitter.setCollapsible(1, False)  # –¶–µ–Ω—Ç—Ä –Ω–µ–ª—å–∑—è —Å—Ö–ª–æ–ø–Ω—É—Ç—å
        main_splitter.setCollapsible(2, True)   # –ß–∞—Ç –º–æ–∂–Ω–æ —Å—Ö–ª–æ–ø–Ω—É—Ç—å
        center_vertical_splitter.setChildrenCollapsible(True)
        main_splitter.setStretchFactor(0, 0)
        main_splitter.setStretchFactor(1, 10)
        main_splitter.setStretchFactor(2, 0)
        center_vertical_splitter.setStretchFactor(0, 1)
        center_vertical_splitter.setStretchFactor(1, 0)

        self._configure_splitter_behavior()
        self._setup_splitter_constraints()  # –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç–æ—Ç –≤—ã–∑–æ–≤
        print("[OK] –ú–æ–¥—É–ª—å–Ω—ã–π UI –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ —Ä–∞–∑–º–µ—Ä–æ–≤ –ø–∞–Ω–µ–ª–µ–π")

    def _configure_splitter_behavior(self):
        """–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è —Å–ø–ª–∏—Ç—Ç–µ—Ä–æ–≤ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏"""
        try:
            main_splitter = self.findChild(QSplitter)
            if main_splitter:
                main_splitter.setHandleWidth(5)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É handle –¥–ª—è –ª—É—á—à–µ–≥–æ –∑–∞—Ö–≤–∞—Ç–∞
                
                # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∏ collapsible —Ç–µ–ø–µ—Ä—å –∑–∞–¥–∞—é—Ç—Å—è –≤ _setup_ui
                pass
                
            print("[OK] –ü–æ–≤–µ–¥–µ–Ω–∏–µ —Å–ø–ª–∏—Ç—Ç–µ—Ä–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏")
            
        except Exception as e:
            print(f"[WARNING] –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–ø–ª–∏—Ç—Ç–µ—Ä–æ–≤: {e}")
    
    def _setup_splitter_constraints(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –¥–ª—è —Å–ø–ª–∏—Ç—Ç–µ—Ä–æ–≤"""
        try:
            # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Å–ø–ª–∏—Ç—Ç–µ—Ä—ã –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏—Ö
            splitters = self.findChildren(QSplitter)
            
            for splitter in splitters:
                # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä handle –¥–ª—è –ª—É—á—à–µ–≥–æ –∑–∞—Ö–≤–∞—Ç–∞
                splitter.setHandleWidth(6)
                
                # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
                splitter.splitterMoved.connect(self._on_splitter_moved)
            
            print("[OK] –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Å–ø–ª–∏—Ç—Ç–µ—Ä–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            
        except Exception as e:
            print(f"[WARNING] –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Å–ø–ª–∏—Ç—Ç–µ—Ä–æ–≤: {e}")
    
    def _on_splitter_moved(self, pos, index):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è —Å–ø–ª–∏—Ç—Ç–µ—Ä–∞ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –≥—Ä–∞–Ω–∏—Ü"""
        try:
            splitter = self.sender()
            if not isinstance(splitter, QSplitter):
                return
            
            sizes = splitter.sizes()
            total_size = sum(sizes)
            
            # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö –æ—Ç –æ–±—â–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
            min_percent = 0.05  # 5% –º–∏–Ω–∏–º—É–º –¥–ª—è –∫–∞–∂–¥–æ–π –ø–∞–Ω–µ–ª–∏
            min_size = int(total_size * min_percent)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä—ã
            adjusted = False
            for i, size in enumerate(sizes):
                if size < min_size:
                    sizes[i] = min_size
                    adjusted = True
            
            # –ï—Å–ª–∏ –±—ã–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏, –ø—Ä–∏–º–µ–Ω—è–µ–º –∏—Ö
            if adjusted:
                # –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
                current_total = sum(sizes)
                if current_total != total_size:
                    ratio = total_size / current_total
                    sizes = [int(size * ratio) for size in sizes]
                
                splitter.setSizes(sizes)
        
        except Exception as e:
            print(f"[WARNING] –û—à–∏–±–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è —Å–ø–ª–∏—Ç—Ç–µ—Ä–∞: {e}")
    
    def _reset_panel_sizes(self):
        """–°–±—Ä–æ—Å —Ä–∞–∑–º–µ—Ä–æ–≤ –ø–∞–Ω–µ–ª–µ–π –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
        try:
            main_splitter = self.findChild(QSplitter)
            if main_splitter:
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                main_splitter.setSizes([300, 1100])
                
                right_splitter = main_splitter.widget(1)
                if isinstance(right_splitter, QSplitter):
                    right_splitter.setSizes([900, 100])  # –ß–∞—Ç –≤—ã—Å–æ–∫–∏–π, —Ç–µ—Ä–º–∏–Ω–∞–ª –Ω–∏–∑–∫–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                    
                    center_splitter = right_splitter.widget(0)
                    if isinstance(center_splitter, QSplitter):
                        center_splitter.setSizes([700, 350])
            
            print("[OK] –†–∞–∑–º–µ—Ä—ã –ø–∞–Ω–µ–ª–µ–π —Å–±—Ä–æ—à–µ–Ω—ã –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
            
        except Exception as e:
            print(f"[WARNING] –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –ø–∞–Ω–µ–ª–µ–π: {e}")

    def _apply_vscode_like_layout(self):
        """–ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∞–∫–µ—Ç –≤ —Å—Ç–∏–ª–µ VSCode —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ —Ü–≤–µ—Ç–∞–º–∏"""
        try:
            print("[OK] –ü—Ä–∏–º–µ–Ω–µ–Ω –º–∞–∫–µ—Ç –≤ —Å—Ç–∏–ª–µ VSCode —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ —Ü–≤–µ—Ç–∞–º–∏")
        except Exception as e:
            print(f"[WARNING] –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∞–∫–µ—Ç–∞ VSCode: {e}")

    def _setup_panel_shortcuts(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–Ω–µ–ª—è–º–∏"""
        try:
            from PySide6.QtGui import QKeySequence, QShortcut
            
            toggle_explorer = QShortcut(QKeySequence("Ctrl+B"), self)
            toggle_explorer.activated.connect(
                lambda: self.file_explorer.setVisible(not self.file_explorer.isVisible())
            )
            
            toggle_terminal = QShortcut(QKeySequence("Ctrl+`"), self)
            toggle_terminal.activated.connect(
                lambda: self.terminal_widget.setVisible(not self.terminal_widget.isVisible())
            )
            
            # Ctrl+Shift+C - –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —á–∞—Ç–∞
            toggle_chat = QShortcut(QKeySequence("Ctrl+Shift+C"), self)
            toggle_chat.activated.connect(
                lambda: self.chat_widget.setVisible(not self.chat_widget.isVisible())
            )
            
            # Ctrl+Shift+R - —Å–±—Ä–æ—Å —Ä–∞–∑–º–µ—Ä–æ–≤ –ø–∞–Ω–µ–ª–µ–π
            reset_panels = QShortcut(QKeySequence("Ctrl+Shift+R"), self)
            reset_panels.activated.connect(self._reset_panel_sizes)
            
            print("[OK] –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –¥–ª—è –ø–∞–Ω–µ–ª–µ–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã (–≤–∫–ª—é—á–∞—è —Å–±—Ä–æ—Å —Ä–∞–∑–º–µ—Ä–æ–≤)")
            
        except Exception as e:
            print(f"[WARNING] –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à: {e}")

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã —Ñ–∞–π–ª–æ–≤–æ–≥–æ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞
        self._connect_file_explorer_signals()
        
        print("[OK] –ú–æ–¥—É–ª—å–Ω—ã–π UI –Ω–∞—Å—Ç—Ä–æ–µ–Ω")

    def _init_grips(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∏–ø–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞"""
        self.grips = {}
        directions = [
            "top",
            "bottom",
            "left",
            "right",
            "top-left",
            "top-right",
            "bottom-left",
            "bottom-right",
        ]

        for direction in directions:
            grip = CustomGrip(self, direction)
            self.grips[direction] = grip

        self._update_grips()

    def _update_grips(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π –≥—Ä–∏–ø–æ–≤"""
        rect = self.rect()
        grip_size = self.GRIP_SIZE

        # –£–≥–ª–æ–≤—ã–µ –≥—Ä–∏–ø—ã
        self.grips["top-left"].setGeometry(0, 0, grip_size, grip_size)
        self.grips["top-right"].setGeometry(
            rect.width() - grip_size, 0, grip_size, grip_size
        )
        self.grips["bottom-left"].setGeometry(
            0, rect.height() - grip_size, grip_size, grip_size
        )
        self.grips["bottom-right"].setGeometry(
            rect.width() - grip_size, rect.height() - grip_size, grip_size, grip_size
        )

        # –ë–æ–∫–æ–≤—ã–µ –≥—Ä–∏–ø—ã
        self.grips["top"].setGeometry(
            grip_size, 0, rect.width() - 2 * grip_size, grip_size
        )
        self.grips["bottom"].setGeometry(
            grip_size,
            rect.height() - grip_size,
            rect.width() - 2 * grip_size,
            grip_size,
        )
        self.grips["left"].setGeometry(
            0, grip_size, grip_size, rect.height() - 2 * grip_size
        )
        self.grips["right"].setGeometry(
            rect.width() - grip_size,
            grip_size,
            grip_size,
            rect.height() - 2 * grip_size,
        )

    def _init_theme_system(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Ç–µ–º –∏ –∏–∫–æ–Ω–æ–∫"""
        # –ò–º–ø–æ—Ä—Ç —Å–∏—Å—Ç–µ–º—ã –∏–∫–æ–Ω–æ–∫
        try:
            import qtawesome as qta

            class SimpleIconManager:
                def __init__(self):
                    self.qta = qta

                def get_icon(self, name):
                    # Try several icon prefixes, fallback to a default icon if not found
                    prefixes = ["fa5.", "fa.", "mdi.", "ei."]
                    for prefix in prefixes:
                        try:
                            icon = self.qta.icon(prefix + name)
                            if not icon.isNull():
                                return icon
                        except Exception:
                            continue
                    # Fallback to a default icon if all attempts fail
                    try:
                        return self.qta.icon("fa5.question")
                    except Exception:
                        return None

            self.icon_manager = SimpleIconManager()
            self.icon_manager.get_icon("example")
            print("[OK] –°–∏—Å—Ç–µ–º–∞ –∏–∫–æ–Ω–æ–∫ SimpleIconManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        except ImportError:
            self.icon_manager = None
            print("[WARNING] –°–∏—Å—Ç–µ–º–∞ –∏–∫–æ–Ω–æ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        except Exception as e:
            print(f"[WARNING] –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–∫–æ–Ω–æ–∫: {e}")
            self.icon_manager = None

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Ç–µ–º
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º LocalFallbackThemeManager –æ–¥–∏–Ω —Ä–∞–∑ –∑–¥–µ—Å—å, –¥–æ –±–ª–æ–∫–∞ try-except
        class LocalFallbackThemeManager:
            def __init__(self):
                self.current_theme = "default"
            
            def apply_theme(self, app_or_theme):
                print(f"Fallback: apply_theme({app_or_theme})")
                return False

        try:
            if ThemeManager is not None:
                self.theme_manager = ThemeManager()
                if self.theme_manager:
                    print("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä —Ç–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
                    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –≤ —Ñ–∞–π–ª–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
                    app = QApplication.instance()
                    if app:
                        self.theme_manager.apply_theme(app)
                        print("‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω–∞ —Ç–µ–º–∞ –∏–∑ —Ñ–∞–π–ª–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫")
                else:
                    print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä —Ç–µ–º. –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback.")
                    self.theme_manager = LocalFallbackThemeManager() # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä
            else:
                print("‚ö†Ô∏è ThemeManager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback")
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π LocalFallbackThemeManager
                self.theme_manager = LocalFallbackThemeManager() # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä
        except Exception as e:
            print(f"[WARNING] –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ç–µ–º: {e}")
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π LocalFallbackThemeManager –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            self.theme_manager = LocalFallbackThemeManager() # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä

    def _apply_default_styles(self):
        """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
        # –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º—É —Ç–µ–º —á–µ—Ä–µ–∑ theme_manager
        try:
            if self.theme_manager and hasattr(self.theme_manager, "apply_theme"):
                from PySide6.QtWidgets import QApplication

                app = QApplication.instance()
                print(f"[DEBUG] main.py: QApplication.instance() = {app}")
                if app:
                    print(f"[DEBUG] main.py: –í—ã–∑—ã–≤–∞–µ–º self.theme_manager.apply_theme({app})")
                    result = self.theme_manager.apply_theme(app)
                    print(f"[DEBUG] main.py: –†–µ–∑—É–ª—å—Ç–∞—Ç apply_theme = {result}")
                    if result:
                        print("[OK] –°–∏—Å—Ç–µ–º–∞ —Ç–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —á–µ—Ä–µ–∑ theme_manager")
                        
                        return
                    else:
                        print("[WARNING] apply_theme –≤–µ—Ä–Ω—É–ª False")
                else:
                    print("[WARNING] QApplication.instance() –≤–µ—Ä–Ω—É–ª None")
        except Exception as e:
            print(f"[WARNING] –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã —á–µ—Ä–µ–∑ theme_manager: {e}")
            import traceback

            traceback.print_exc()

        # –ï—Å–ª–∏ –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã –Ω–µ —É–¥–∞–ª–∏—Å—å, –æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å—Ç–∏–ª–∏
        print("[WARNING] –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–∏—Å—Ç–µ–º–Ω–∞—è —Ç–µ–º–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")



    def _connect_menu_signals(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ –º–µ–Ω—é"""
        try:
            menu_bar = getattr(self.titlebar_with_menu, "menu_bar", None)
            if not menu_bar:
                print("[WARNING] –ú–µ–Ω—é –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ")
                return

            # –ü–æ–¥–∫–ª—é—á–∞–µ–º –Ω–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
            if hasattr(menu_bar, "newCodeEditorRequested"):
                menu_bar.newCodeEditorRequested.connect(self._on_new_code_editor)
            if hasattr(menu_bar, "newNotebookRequested"):
                menu_bar.newNotebookRequested.connect(self._on_new_notebook)

            # –ü–æ–¥–∫–ª—é—á–∞–µ–º –Ω–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã
            if hasattr(menu_bar, "openSettingsRequested"):
                menu_bar.openSettingsRequested.connect(self._open_settings)
                if self.icon_manager is not None:
                    self.icon_manager.get_icon("settings")
                print("[OK] –°–∏–≥–Ω–∞–ª openSettingsRequested –ø–æ–¥–∫–ª—é—á–µ–Ω")

            if hasattr(menu_bar, "changeThemeRequested"):
                menu_bar.changeThemeRequested.connect(self.on_change_theme)
                if self.icon_manager is not None:
                    self.icon_manager.get_icon("theme")
                print("[OK] –°–∏–≥–Ω–∞–ª changeThemeRequested –ø–æ–¥–∫–ª—é—á–µ–Ω")

            # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã —Ñ–∞–π–ª–æ–≤–æ–≥–æ –º–µ–Ω—é
            if hasattr(menu_bar, "newFileRequested"):
                menu_bar.newFileRequested.connect(self._on_new_file)
            if hasattr(menu_bar, "openFileRequested"):
                menu_bar.openFileRequested.connect(self._on_open_file)
            if hasattr(menu_bar, "saveRequested"):
                menu_bar.saveRequested.connect(self._on_save_file)
            if hasattr(menu_bar, "exitRequested"):
                menu_bar.exitRequested.connect(self.close)

            # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã –º–µ–Ω—é –≤–∏–¥–∞
            if hasattr(menu_bar, "openChatRequested"):
                menu_bar.openChatRequested.connect(self._toggle_chat)
            if hasattr(menu_bar, "openTerminalRequested"):
                menu_bar.openTerminalRequested.connect(self._toggle_terminal)
            if hasattr(menu_bar, "toggleFileExplorerRequested"):
                menu_bar.toggleFileExplorerRequested.connect(
                    lambda: self.file_explorer.setVisible(
                        not self.file_explorer.isVisible()
                    )
                )
            if hasattr(menu_bar, "togglePanelsRequested"):

                def toggle_panels():
                    self.file_explorer.setVisible(not self.file_explorer.isVisible())
                    self.chat_widget.setVisible(not self.chat_widget.isVisible())
                    self.terminal_widget.setVisible(
                        not self.terminal_widget.isVisible()
                    )

                menu_bar.togglePanelsRequested.connect(toggle_panels)

            # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª –æ—Ç–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞
            if hasattr(menu_bar, "openBrowserRequested"):
                if hasattr(self.tab_document, "add_browser_tab"):
                    menu_bar.openBrowserRequested.connect(
                        self.tab_document.add_browser_tab
                    )
                    print("‚úÖ –°–∏–≥–Ω–∞–ª openBrowserRequested –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ add_browser_tab")
                else:
                    print("‚ö†Ô∏è tab_document –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç add_browser_tab")

            # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∫–æ–Ω–æ–∫ –∏ —Ç–µ–º
            if hasattr(menu_bar, "refreshIconsRequested"):
                menu_bar.refreshIconsRequested.connect(menu_bar.refresh_icons)
            if hasattr(menu_bar, "refreshThemeRequested"):
                menu_bar.refreshThemeRequested.connect(
                    lambda: self.on_change_theme(
                        getattr(self.theme_manager, "current_theme", "default")
                    )
                )

            print("‚úÖ –°–∏–≥–Ω–∞–ª—ã –º–µ–Ω—é –ø–æ–¥–∫–ª—é—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤ –º–µ–Ω—é: {e}")

    def _on_new_code_editor(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –∫–æ–¥–∞"""
        if MODULES_LOADED and hasattr(self.tab_document, "add_new_tab"):
            self.tab_document.add_new_tab("–ù–æ–≤—ã–π –∫–æ–¥", "# –ù–æ–≤—ã–π –∫–æ–¥\n\n")
        else:
            print("üìù –ù–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–¥–∞ —Å–æ–∑–¥–∞–Ω (fallback —Ä–µ–∂–∏–º)")

    def _on_new_notebook(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–∏-–±–ª–æ–∫–Ω–æ—Ç–∞ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
        if MODULES_LOADED and hasattr(self.tab_document, "add_notebook_tab"):
            menu_bar = getattr(self.titlebar_with_menu, "menu_bar", None)
            self.tab_document.add_notebook_tab("–ù–æ–≤—ã–π –±–ª–æ–∫–Ω–æ—Ç", "<h2>–ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞</h2><p>–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç...</p>", menu_bar=menu_bar)
        else:
            # Fallback: —Å–æ–∑–¥–∞—ë–º –ø—Ä–æ—Å—Ç—É—é –≤–∫–ª–∞–¥–∫—É —Å QLabel –∏–ª–∏ QTextEdit
            if hasattr(self.tab_document, "add_new_tab"):
                self.tab_document.add_new_tab("–ù–æ–≤—ã–π –±–ª–æ–∫–Ω–æ—Ç (fallback)", "<h2>–ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞ (fallback)</h2><p>–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç...</p>")
            else:
                print("üìù –ù–æ–≤—ã–π –±–ª–æ–∫–Ω–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω: –Ω–µ—Ç –º–µ—Ç–æ–¥–∞ add_new_tab (fallback —Ä–µ–∂–∏–º)")
            print("üìù –ù–æ–≤—ã–π –±–ª–æ–∫–Ω–æ—Ç —Å–æ–∑–¥–∞–Ω (fallback —Ä–µ–∂–∏–º)")

    def _open_settings(self):
        """–û—Ç–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        try:
            print("üîß –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–ª–∞—Å—Å–∞ –¥–∏–∞–ª–æ–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            if GopiAISettingsDialog is None:
                print("‚ö†Ô∏è GopiAISettingsDialog –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
                from PySide6.QtWidgets import QMessageBox
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–î–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
                return

            # –£–¥–∞–ª—è–µ–º –≤—ã–∑–æ–≤ —Å—Ç–∞—Ä–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            print("üîß –ò–º–ø–æ—Ä—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∏–∞–ª–æ–≥ –∫–∞–∫ –∞—Ç—Ä–∏–±—É—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
            if hasattr(self, "_settings_dialog") and self._settings_dialog is not None:
                try:
                    self._settings_dialog.close()
                except Exception:
                    pass
                self._settings_dialog = None
            
            self._settings_dialog = GopiAISettingsDialog(self.theme_manager, self)
            print("üîß –î–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")

            # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã –¥–∏–∞–ª–æ–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            if hasattr(self._settings_dialog, "themeChanged"):
                self._settings_dialog.themeChanged.connect(self.on_change_theme)
            if hasattr(self._settings_dialog, "settings_applied"):
                self._settings_dialog.settings_applied.connect(
                    self._on_settings_changed
                )

            print("üîß –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
            result = self._settings_dialog.exec()
            if result == self._settings_dialog.DialogCode.Accepted:
                print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
            else:
                print("‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω—ã")
            self._settings_dialog = None

        except ImportError as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –¥–∏–∞–ª–æ–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
            from PySide6.QtWidgets import QMessageBox
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–î–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
            from PySide6.QtWidgets import QMessageBox
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {e}")

    def _on_settings_changed(self, settings_dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        try:
            print(f"üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–º–µ–Ω–µ–Ω—ã: {settings_dict}")

            # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —à—Ä–∏—Ñ—Ç–∞
            if "font_size" in settings_dict:
                font_size = settings_dict["font_size"]
                font = self.font()
                font.setPointSize(font_size)
                self.setFont(font)
                print(f"‚úÖ –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {font_size}")

            # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã –∏ —Ç—ë–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
            # –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç—ë–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –≤ settings_dialog.py
            # –∏ –ø—Ä–∏–º–µ–Ω—ë–Ω –∫ theme_manager._current_variant
            if "theme" in settings_dict:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è —Ç–µ–º—ã –Ω–∞–ø—Ä—è–º—É—é, –∞ –Ω–µ –º–∞–ø–ø–∏–Ω–≥, —Ç–∞–∫ –∫–∞–∫ —Ç–µ–ø–µ—Ä—å
                # –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ
                theme_name = settings_dict["theme"]
                self.on_change_theme(theme_name)

            # –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª–∏
            # –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π panels
            if "show_panels" in settings_dict:
                panels = settings_dict["show_panels"]
                if "file_explorer" in panels:
                    self.file_explorer.setVisible(panels["file_explorer"])
                if "terminal" in panels:
                    self.terminal_widget.setVisible(panels["terminal"])
                if "chat" in panels:
                    self.chat_widget.setVisible(panels["chat"])
                print(
                    "‚úÖ –í–∏–¥–∏–º–æ—Å—Ç—å –ø–∞–Ω–µ–ª–µ–π –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
                )  # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
            if "extensions" in settings_dict:
                extensions = settings_dict["extensions"]
                print(f"üîå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π: {extensions}")
                # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –≤–∫–ª—é—á–µ–Ω–∏—è/–æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")

    def _show_settings(self):
            """–ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
            try:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∏–∞–ª–æ–≥ –∫–∞–∫ –∞—Ç—Ä–∏–±—É—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
                if hasattr(self, "_settings_dialog") and self._settings_dialog is not None:
                    try:
                        self._settings_dialog.close()
                    except Exception:
                        pass
                    self._settings_dialog = None
                self._settings_dialog = GopiAISettingsDialog(self.theme_manager, self)
                # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
                self._settings_dialog.settings_applied.connect(self._on_settings_changed)
                
                
                self._settings_dialog.themeChanged.connect(self.on_change_theme)
    
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
                if (
                    self._settings_dialog.exec()
                    == self._settings_dialog.DialogCode.Accepted
                ):
                    print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
                self._settings_dialog = None
    
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
                from PySide6.QtWidgets import QMessageBox
    
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {e}")


    def _apply_theme_change(self, theme_key: str):
        """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã"""
        try:
            if self.theme_manager and self.theme_manager.apply_theme(theme_key):
                print(f"üé® –¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: {theme_key}")
            else:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–µ–º—É: {theme_key}")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã: {e}")

    def _on_new_file(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞"""
        if MODULES_LOADED and hasattr(self.tab_document, "add_new_tab"):
            self.tab_document.add_new_tab(
                "–ù–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç", "# –ù–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç\n\n–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∑–¥–µ—Å—å..."
            )
        else:
            print("üìù –ù–æ–≤—ã–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω (fallback —Ä–µ–∂–∏–º)")

    def _on_open_file(self):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞"""
        file_path, _ = QFileDialog.getOpenFileName(
            self, "–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª", "", "–í—Å–µ —Ñ–∞–π–ª—ã (*.*)"
        )
        if file_path:
            try:
                with open(file_path, "rb") as f:
                    raw = f.read()
                encoding = chardet.detect(raw)["encoding"] or "utf-8"
                content = raw.decode(encoding, errors="replace")
                filename = os.path.basename(file_path)
                if MODULES_LOADED and hasattr(self.tab_document, "add_new_tab"):
                    self.tab_document.add_new_tab(filename, content)
                else:
                    print(f"üìÇ –§–∞–π–ª –æ—Ç–∫—Ä—ã—Ç: {filename} (fallback —Ä–µ–∂–∏–º)")
            except Exception as e:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª: {e}")

    def _on_save_file(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞"""
        if hasattr(self.tab_document, "get_current_text"):
            content = self.tab_document.get_current_text()
            file_path, _ = QFileDialog.getSaveFileName(
                self, "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª", "", "–í—Å–µ —Ñ–∞–π–ª—ã (*.*)"
            )
            if file_path:
                try:
                    with open(file_path, "w", encoding="utf-8") as f:
                        f.write(content)
                    QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω —É—Å–ø–µ—à–Ω–æ!")
                except Exception as e:
                    QMessageBox.warning(
                        self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª: {e}"
                    )

    def _toggle_chat(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —á–∞—Ç–∞"""
        self.chat_widget.setVisible(not self.chat_widget.isVisible())

    def _toggle_terminal(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞"""
        self.terminal_widget.setVisible(not self.terminal_widget.isVisible())

    def on_change_theme(self, theme_name):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã —Ç–µ–º—ã"""
        try:
            print(f"üé® –ó–∞–ø—Ä–æ—Å —Å–º–µ–Ω—ã —Ç–µ–º—ã: {theme_name}")

            # –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–µ–º—É —á–µ—Ä–µ–∑ theme_manager
            if self.theme_manager and hasattr(self.theme_manager, "apply_theme"):
                try:
                    self.theme_manager.apply_theme(theme_name)
                    print(f"‚úÖ –¢–µ–º–∞ '{theme_name}' –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —á–µ—Ä–µ–∑ theme_manager")
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Ç–µ–º—ã
                    self._apply_theme_to_components()
                    


                    return
                except Exception as e:
                    print(f"[WARNING] –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã —á–µ—Ä–µ–∑ theme_manager: {e}")

            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–µ–º—É: {theme_name}")

        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã —Ç–µ–º—ã: {e}")

    def resizeEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞"""
        super().resizeEvent(event)
        self._update_grips()

    def showEvent(self, event):
        """–°–æ–±—ã—Ç–∏–µ –ø–æ–∫–∞–∑–∞ –æ–∫–Ω–∞"""
        super().showEvent(event)
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫–∏ –º–µ–Ω—é –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞
        try:
            menu_bar = getattr(self.titlebar_with_menu, "menu_bar", None)
            if menu_bar and hasattr(menu_bar, "refresh_icons"):
                menu_bar.refresh_icons()
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∫–æ–Ω–æ–∫: {e}")

    def _apply_theme_to_components(self):
            """–ü—Ä–∏–º–µ–Ω—è–µ—Ç —Ç–µ–º—É –∫–æ –≤—Å–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Ç–µ–º—ã"""
            try:
                print("üé® –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É –∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º...")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∏–ª–∏
                        
                # –û–±–Ω–æ–≤–ª—è–µ–º titlebar –µ—Å–ª–∏ –µ—Å—Ç—å
                if hasattr(self, 'titlebar_with_menu'):
                    try:
                        menu_bar = getattr(self.titlebar_with_menu, 'menu_bar', None)
                        if menu_bar and hasattr(menu_bar, 'refresh_colors'):
                            menu_bar.refresh_colors()
                            print("‚úÖ Titlebar –æ–±–Ω–æ–≤–ª–µ–Ω")
                    except Exception as e:
                        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è titlebar: {e}")
                
                
                
                print("[OK] –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
                
            except Exception as e:
                print(f"[WARNING] –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã –∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º: {e}")

    def _connect_file_explorer_signals(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ —Ñ–∞–π–ª–æ–≤–æ–≥–æ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞"""
        try:
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–æ–≤
            if hasattr(self.file_explorer, 'file_double_clicked'):
                self.file_explorer.file_double_clicked.connect(self._open_file_in_editor)  # type: ignore
                print("[OK] –°–∏–≥–Ω–∞–ª file_double_clicked –ø–æ–¥–∫–ª—é—á–µ–Ω")
            
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–¥–∏–Ω–∞—Ä–Ω—ã–π –∫–ª–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤
            if hasattr(self.file_explorer, 'file_selected'):
                self.file_explorer.file_selected.connect(self._on_file_selected)  # type: ignore
                print("[OK] –°–∏–≥–Ω–∞–ª file_selected –ø–æ–¥–∫–ª—é—á–µ–Ω")
                
            print("[OK] –°–∏–≥–Ω–∞–ª—ã —Ñ–∞–π–ª–æ–≤–æ–≥–æ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã")
            
        except Exception as e:
            print(f"[WARNING] –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤ —Ñ–∞–π–ª–æ–≤–æ–≥–æ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞: {e}")

    def _open_file_in_editor(self, file_path):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ –ø–æ –¥–≤–æ–π–Ω–æ–º—É –∫–ª–∏–∫—É"""
        try:
            print(f"üìÇ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª: {file_path}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ñ–∞–π–ª
            import os
            if not os.path.isfile(file_path):
                print(f"‚ö†Ô∏è –≠—Ç–æ –Ω–µ —Ñ–∞–π–ª: {file_path}")
                return
                
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
            if MODULES_LOADED and hasattr(self.tab_document, 'open_file_in_tab'):
                self.tab_document.open_file_in_tab(file_path)
            elif MODULES_LOADED and hasattr(self.tab_document, 'add_new_tab'):
                # Fallback - –∏—Å–ø–æ–ª—å–∑—É–µ–º add_new_tab
                try:
                    with open(file_path, 'r', encoding='utf-8') as f:
                        content = f.read()
                    filename = os.path.basename(file_path)
                    self.tab_document.add_new_tab(filename, content)
                    print(f"‚úÖ –§–∞–π–ª –æ—Ç–∫—Ä—ã—Ç (fallback): {filename}")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞: {e}")
            else:
                # –ü–æ–ª–Ω—ã–π fallback –¥–ª—è —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ –º–æ–¥—É–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
                print(f"‚ö†Ô∏è –ú–æ–¥—É–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ: {file_path}")
                try:
                    import subprocess
                    import platform
                    if platform.system() == "Windows":
                        os.startfile(file_path)
                    elif platform.system() == "Darwin":  # macOS
                        subprocess.run(["open", file_path])
                    else:  # Linux
                        subprocess.run(["xdg-open", file_path])
                    print(f"‚úÖ –§–∞–π–ª –æ—Ç–∫—Ä—ã—Ç –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ: {file_path}")
                except Exception as e:
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ: {e}")
                    
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–∞–π–ª–∞ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ: {e}")

    def _on_file_selected(self, file_path):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ –≤ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–µ"""
        try:
            print(f"üìÑ –í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: {file_path}")
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–∞–π–ª–∞
            # –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ –≤ —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
        except Exception as e:
            print(f"[WARNING] –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("[LAUNCH] –ó–∞–ø—É—Å–∫ –º–æ–¥—É–ª—å–Ω–æ–≥–æ GopiAI...")

    

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    app = QApplication(sys.argv)
    app.setApplicationName("GopiAI")
    app.setApplicationVersion("0.3.0")
    app.setOrganizationName("GopiAI Team")

    # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π Qt
    warnings.filterwarnings("ignore", category=DeprecationWarning)

    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø–æ–∫–∞–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        window = FramelessGopiAIStandaloneWindow()
        window.show()

        print("[SUCCESS] GopiAI v0.3.0 —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
        print("[INFO] –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∞–∫—Ç–∏–≤–Ω–∞")
        print("[INFO] –†–∞–∑–º–µ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–º–µ–Ω—å—à–µ–Ω")

        # –ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        sys.exit(app.exec())
    except Exception as e:
        print(f"[CRITICAL ERROR] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)


if __name__ == "__main__":
    main()



