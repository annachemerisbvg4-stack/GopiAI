#!/usr/bin/env python3
"""
GopiAI Standalone Interface - –ú–æ–¥—É–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è
=============================================

–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–æ–¥—É–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ GopiAI.

–ê–≤—Ç–æ—Ä: Crazy Coder
–í–µ—Ä—Å–∏—è: 0.3.0 (–ú–æ–¥—É–ª—å–Ω–∞—è)
–î–∞—Ç–∞: 2025-06-03
"""

import sys
import os
import warnings
from pathlib import Path
from PySide6.QtWidgets import (
    QApplication, QMainWindow, QWidget, QVBoxLayout, QHBoxLayout, 
    QSplitter, QMenuBar, QLabel, QFileDialog, QMessageBox
)
from PySide6.QtCore import Qt
from PySide6.QtGui import QAction

# –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Ç–µ–º
from gopiai.ui.utils.theme_manager import ThemeManager
from gopiai.ui.dialogs.settings_dialog import GopiAISettingsDialog

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—É—Ç–µ–π –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π GopiAI
script_dir = os.path.dirname(os.path.abspath(__file__))
# –ü–æ–¥–Ω–∏–º–∞–µ–º—Å—è –Ω–∞ 3 —É—Ä–æ–≤–Ω—è: ui -> gopiai -> GopiAI-UI -> –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
gopiai_modules_root = os.path.dirname(os.path.dirname(os.path.dirname(script_dir)))

module_paths = [
    os.path.join(gopiai_modules_root, "GopiAI-Core"),
    os.path.join(gopiai_modules_root, "GopiAI-Widgets"), 
    os.path.join(gopiai_modules_root, "GopiAI-App"),
    os.path.join(gopiai_modules_root, "GopiAI-Extensions"),
    os.path.join(gopiai_modules_root, "rag_memory_system"),
    gopiai_modules_root,  # –î–ª—è –∫–æ—Ä–Ω–µ–≤—ã—Ö –º–æ–¥—É–ª–µ–π
]


for path in module_paths:
    if path not in sys.path:
        sys.path.insert(0, path)

print("üì¶ –ú–æ–¥—É–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è GopiAI v0.3.0")
print("–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –ø—É—Ç–∏ –¥–ª—è –º–æ–¥—É–ª–µ–π:")
for p in module_paths:
    print(f"- {p} (—Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {os.path.exists(p)})")

# –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ UI
try:
    from gopiai.ui.components import (
        StandaloneMenuBar,
        StandaloneTitlebar, 
        StandaloneTitlebarWithMenu,
        CustomGrip,
        FileExplorerWidget,
        TabDocumentWidget,
        ChatWidget,
        TerminalWidget,
    )
    print("‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ UI –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    MODULES_LOADED = True
    
except ImportError as e:
    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ UI –º–æ–¥—É–ª–µ–π: {e}")
    print("–ó–∞–ø—É—Å–∫–∞–µ–º –≤ fallback —Ä–µ–∂–∏–º–µ...")
    MODULES_LOADED = False
      # Fallback - —Å–æ–∑–¥–∞—ë–º –ø—Ä–æ—Å—Ç—ã–µ –∑–∞–≥–ª—É—à–∫–∏
    class SimpleWidget(QWidget):
        def __init__(self, name="Widget"):
            super().__init__()
            self.setFixedSize(200, 100)
            layout = QVBoxLayout()
            layout.addWidget(QLabel(f"Fallback: {name}"))
            self.setLayout(layout)
            
        def add_new_tab(self, title, content):
            print(f"Fallback: add_new_tab({title})")
            
        def get_current_text(self):
            return "Fallback content"
            
        def set_window(self, window):
            pass  # Fallback –∑–∞–≥–ª—É—à–∫–∞
    
    class SimpleMenuBar(QMenuBar):
        def refresh_icons(self):
            pass
    
    StandaloneMenuBar = SimpleMenuBar
    StandaloneTitlebar = lambda parent=None: SimpleWidget("Titlebar")
    StandaloneTitlebarWithMenu = lambda parent=None: SimpleWidget("TitlebarWithMenu")
    CustomGrip = lambda parent, direction: QWidget()
    FileExplorerWidget = lambda parent=None, icon_manager=None: SimpleWidget("FileExplorer") 
    TabDocumentWidget = lambda parent=None: SimpleWidget("TabDocument")
    ChatWidget = lambda parent=None: SimpleWidget("Chat")
    TerminalWidget = lambda parent=None: SimpleWidget("Terminal")
    ThemeManager = None
    AutoIconSystem = None

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–∏—Å—Ç–µ–º
AutoIconSystem = None
ThemeManagerClass = None  # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–æ —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ —Å –∏–º–ø–æ—Ä—Ç–æ–º
GopiAIThemeManager = None
apply_theme = None
load_theme = None
save_theme = None
MATERIAL_SKY_THEME = {"name": "Material Sky", "primary": "#2196F3"}


class FramelessGopiAIStandaloneWindow(QMainWindow):
    """–û—Å–Ω–æ–≤–Ω–æ–µ frameless –æ–∫–Ω–æ GopiAI - –º–æ–¥—É–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è"""
    
    def __init__(self):
        super().__init__()
        print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ GopiAI...")
        
        # –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫–Ω–∞
        self.setWindowTitle("GopiAI v0.3.0 - –ú–æ–¥—É–ª—å–Ω—ã–π –ò–ò –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
        self.setMinimumSize(1000, 700)
        self.resize(1400, 900)
        
        # Frameless –æ–∫–Ω–æ
        self.setWindowFlags(Qt.WindowType.FramelessWindowHint)
        self.setAttribute(Qt.WidgetAttribute.WA_TranslucentBackground, False)
        
        # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
        self.TITLEBAR_HEIGHT = 40
        self.GRIP_SIZE = 10
          # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        self._init_theme_system()
        self._setup_ui()
        self._init_grips()
        self._apply_default_styles()
        self._connect_menu_signals()
        
        print("‚úÖ FramelessGopiAIStandaloneWindow –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")

    def _setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥—É–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UI –∏–∑ –º–æ–¥—É–ª–µ–π...")
        
        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        main_layout = QVBoxLayout(central_widget)
        main_layout.setContentsMargins(0, 0, 0, 0)
        main_layout.setSpacing(0)
          # Titlebar —Å –º–µ–Ω—é (–º–æ–¥—É–ª—å–Ω—ã–π)
        if MODULES_LOADED:
            self.titlebar_with_menu = StandaloneTitlebarWithMenu(self)
            if hasattr(self.titlebar_with_menu, 'set_window'):
                self.titlebar_with_menu.set_window(self)
        else:
            self.titlebar_with_menu = StandaloneTitlebarWithMenu()
        self.titlebar_with_menu.setFixedHeight(self.TITLEBAR_HEIGHT * 2)
        main_layout.addWidget(self.titlebar_with_menu)
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Å–ø–ª–∏—Ç—Ç–µ—Ä (–≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π)
        main_splitter = QSplitter(Qt.Orientation.Horizontal)
        main_layout.addWidget(main_splitter, 1)        # –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - —Ñ–∞–π–ª–æ–≤—ã–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ (–º–æ–¥—É–ª—å–Ω—ã–π)
        self.file_explorer = FileExplorerWidget(icon_manager=self.icon_manager)
        
        # –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–º–µ—Ä –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞
        from PySide6.QtWidgets import QSizePolicy
        self.file_explorer.setMinimumWidth(250)
        self.file_explorer.setMaximumWidth(400)
        self.file_explorer.resize(300, 600)
        
        # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–ª–∏—Ç–∏–∫—É —Ä–∞–∑–º–µ—Ä–∞ - —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞, —Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ–º–∞—è –≤—ã—Å–æ—Ç–∞
        size_policy = QSizePolicy(QSizePolicy.Policy.Fixed, QSizePolicy.Policy.Expanding)
        self.file_explorer.setSizePolicy(size_policy)
        
        main_splitter.addWidget(self.file_explorer)
        
        # –ü—Ä–∞–≤—ã–π —Å–ø–ª–∏—Ç—Ç–µ—Ä (–≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π)
        right_splitter = QSplitter(Qt.Orientation.Vertical)
        main_splitter.addWidget(right_splitter)
        
        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Å–ø–ª–∏—Ç—Ç–µ—Ä (–≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π)
        center_splitter = QSplitter(Qt.Orientation.Horizontal)
        right_splitter.addWidget(center_splitter)
        
        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å - —Å–∏—Å—Ç–µ–º–∞ –≤–∫–ª–∞–¥–æ–∫ (–º–æ–¥—É–ª—å–Ω–∞—è)
        self.tab_document = TabDocumentWidget()
        center_splitter.addWidget(self.tab_document)
        
        # –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - —á–∞—Ç —Å –ò–ò (–º–æ–¥—É–ª—å–Ω—ã–π)
        self.chat_widget = ChatWidget()
        center_splitter.addWidget(self.chat_widget)
        
        # –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å - —Ç–µ—Ä–º–∏–Ω–∞–ª (–º–æ–¥—É–ª—å–Ω—ã–π)
        self.terminal_widget = TerminalWidget()
        right_splitter.addWidget(self.terminal_widget)        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–ø–æ—Ä—Ü–∏–π —Å–ø–ª–∏—Ç—Ç–µ—Ä–æ–≤
        main_splitter.setSizes([300, 1100])   # –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å : –û—Å—Ç–∞–ª—å–Ω–æ–µ
        center_splitter.setSizes([800, 350])  # –î–æ–∫—É–º–µ–Ω—Ç—ã : –ß–∞—Ç  
        right_splitter.setSizes([700, 200])   # –í–µ—Ä—Ö : –¢–µ—Ä–º–∏–Ω–∞–ª
        
        # –†–∞–∑—Ä–µ—à–∞–µ–º —Å–∫–ª–∞–¥—ã–≤–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–µ–π, –Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
        main_splitter.setChildrenCollapsible(True)
        
        # –í–ê–ñ–ù–û: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç—Ä–µ—Ç—á-—Ñ–∞–∫—Ç–æ—Ä—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤
        # –ü–∞–Ω–µ–ª—å –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞ (–∏–Ω–¥–µ–∫—Å 0) –Ω–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è, –æ—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å (–∏–Ω–¥–µ–∫—Å 1) —Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è
        main_splitter.setStretchFactor(0, 0)  # –ü—Ä–æ–≤–æ–¥–Ω–∏–∫ –Ω–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è
        main_splitter.setStretchFactor(1, 1)  # –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å —Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è
        
        print("‚úÖ –ú–æ–¥—É–ª—å–Ω—ã–π UI –Ω–∞—Å—Ç—Ä–æ–µ–Ω")

    def _init_grips(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∏–ø–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞"""
        self.grips = {}
        directions = ['top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right']
        
        for direction in directions:
            grip = CustomGrip(self, direction)
            self.grips[direction] = grip
        
        self._update_grips()

    def _update_grips(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π –≥—Ä–∏–ø–æ–≤"""
        rect = self.rect()
        grip_size = self.GRIP_SIZE
        
        # –£–≥–ª–æ–≤—ã–µ –≥—Ä–∏–ø—ã
        self.grips['top-left'].setGeometry(0, 0, grip_size, grip_size)
        self.grips['top-right'].setGeometry(rect.width() - grip_size, 0, grip_size, grip_size)
        self.grips['bottom-left'].setGeometry(0, rect.height() - grip_size, grip_size, grip_size)
        self.grips['bottom-right'].setGeometry(rect.width() - grip_size, rect.height() - grip_size, grip_size, grip_size)
        
        # –ë–æ–∫–æ–≤—ã–µ –≥—Ä–∏–ø—ã
        self.grips['top'].setGeometry(grip_size, 0, rect.width() - 2*grip_size, grip_size)
        self.grips['bottom'].setGeometry(grip_size, rect.height() - grip_size, rect.width() - 2*grip_size, grip_size)
        self.grips['left'].setGeometry(0, grip_size, grip_size, rect.height() - 2*grip_size)
        self.grips['right'].setGeometry(rect.width() - grip_size, grip_size, grip_size, rect.height() - 2*grip_size)

    def _init_theme_system(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Ç–µ–º –∏ –∏–∫–æ–Ω–æ–∫"""
        # –ò–º–ø–æ—Ä—Ç —Å–∏—Å—Ç–µ–º—ã –∏–∫–æ–Ω–æ–∫
        try:
            import qtawesome as qta
            class SimpleIconManager:
                def __init__(self):
                    self.qta = qta
                def get_icon(self, name):
                    return self.qta.icon('fa.' + name)
            
            self.icon_manager = SimpleIconManager()
            print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏–∫–æ–Ω–æ–∫ SimpleIconManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        except ImportError:
            self.icon_manager = None
            print("‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –∏–∫–æ–Ω–æ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–∫–æ–Ω–æ–∫: {e}")
            self.icon_manager = None
              # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Ç–µ–º
        try:
            self.theme_manager = ThemeManager()
            if self.theme_manager:
                print("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä —Ç–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
                # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Ç–µ–º—É –≤–º–µ—Å—Ç–æ "simple",
                # —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ—è–≤–ª–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
                self.theme_manager.apply_theme("Material Sky")
            else:
                print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä —Ç–µ–º")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ç–µ–º: {e}")
            self.theme_manager = None

    def _apply_default_styles(self):
        """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""        # –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º—É —Ç–µ–º —á–µ—Ä–µ–∑ theme_manager
        try:
            if self.theme_manager and hasattr(self.theme_manager, 'apply_theme'):
                from PySide6.QtWidgets import QApplication
                app = QApplication.instance()
                print(f"üîç main.py: QApplication.instance() = {app}")
                if app:
                    print(f"üîç main.py: –í—ã–∑—ã–≤–∞–µ–º self.theme_manager.apply_theme({app})")
                    result = self.theme_manager.apply_theme(app)
                    print(f"üîç main.py: –†–µ–∑—É–ª—å—Ç–∞—Ç apply_theme = {result}")
                    if result:
                        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ç–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —á–µ—Ä–µ–∑ theme_manager")
                        return
                    else:
                        print("‚ö†Ô∏è apply_theme –≤–µ—Ä–Ω—É–ª False")
                else:
                    print("‚ö†Ô∏è QApplication.instance() –≤–µ—Ä–Ω—É–ª None")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã —á–µ—Ä–µ–∑ theme_manager: {e}")
            import traceback
            traceback.print_exc()
            
        # –ü–æ—Å–ª–µ–¥–Ω–∏–π fallback - –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏
        print("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ fallback")
        self._apply_fallback_styles()

    def _apply_fallback_styles(self):
        """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∑–∞–ø–∞—Å–Ω—ã—Ö —Å—Ç–∏–ª–µ–π"""
        fallback_style = """
        QMainWindow {
            background-color: #1e1e1e;
            color: #ffffff;
        }
        QWidget {
            background-color: #2d2d2d;
            color: #ffffff;
            border: none;
        }
        QMenuBar {
            background-color: #333333;
            color: #ffffff;
            padding: 4px;
        }
        QMenuBar::item {
            background-color: transparent;
            padding: 8px 12px;
            border-radius: 4px;
        }
        QMenuBar::item:selected {
            background-color: #4CAF50;
        }
        QSplitter::handle {
            background-color: #404040;
        }
        QTabWidget::pane {
            border: 1px solid #404040;
            background-color: #2d2d2d;
        }
        QTabBar::tab {
            background-color: #404040;
            color: #ffffff;
            padding: 8px 16px;
            margin-right: 2px;
        }
        QTabBar::tab:selected {
            background-color: #4CAF50;
        }        """
        self.setStyleSheet(fallback_style)
        
    def _connect_menu_signals(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ –º–µ–Ω—é"""
        try:
            menu_bar = getattr(self.titlebar_with_menu, 'menu_bar', None)
            if not menu_bar:
                print("‚ö†Ô∏è –ú–µ–Ω—é –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ")
                return
            
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º –Ω–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã
            if hasattr(menu_bar, 'openSettingsRequested'):
                menu_bar.openSettingsRequested.connect(self._open_settings)
                print("‚úÖ –°–∏–≥–Ω–∞–ª openSettingsRequested –ø–æ–¥–∫–ª—é—á–µ–Ω")
            
            if hasattr(menu_bar, 'changeThemeRequested'):
                menu_bar.changeThemeRequested.connect(self.on_change_theme)
                print("‚úÖ –°–∏–≥–Ω–∞–ª changeThemeRequested –ø–æ–¥–∫–ª—é—á–µ–Ω")
                
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã —Ñ–∞–π–ª–æ–≤–æ–≥–æ –º–µ–Ω—é
            if hasattr(menu_bar, 'newFileRequested'):
                menu_bar.newFileRequested.connect(self._on_new_file)
            if hasattr(menu_bar, 'openFileRequested'):
                menu_bar.openFileRequested.connect(self._on_open_file)
            if hasattr(menu_bar, 'saveRequested'):
                menu_bar.saveRequested.connect(self._on_save_file)
            if hasattr(menu_bar, 'exitRequested'):
                menu_bar.exitRequested.connect(self.close)
                
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã –º–µ–Ω—é –≤–∏–¥–∞
            if hasattr(menu_bar, 'openChatRequested'):
                menu_bar.openChatRequested.connect(self._toggle_chat)
            if hasattr(menu_bar, 'openTerminalRequested'):
                menu_bar.openTerminalRequested.connect(self._toggle_terminal)
            
            print("‚úÖ –°–∏–≥–Ω–∞–ª—ã –º–µ–Ω—é –ø–æ–¥–∫–ª—é—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤ –º–µ–Ω—é: {e}")

    def _open_settings(self):
        """–û—Ç–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        try:
            # –£–¥–∞–ª—è–µ–º –≤—ã–∑–æ–≤ —Å—Ç–∞—Ä–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            from gopiai.ui.dialogs.settings_dialog import GopiAISettingsDialog
            settings_dialog = GopiAISettingsDialog(self.theme_manager, self)
            
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã –¥–∏–∞–ª–æ–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            if hasattr(settings_dialog, 'themeChanged'):
                settings_dialog.themeChanged.connect(self.on_change_theme)
            if hasattr(settings_dialog, 'settings_applied'):
                settings_dialog.settings_applied.connect(self._on_settings_changed)
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
            result = settings_dialog.exec()
            if result == settings_dialog.DialogCode.Accepted:
                print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
            else:
                print("‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω—ã")
                
        except ImportError as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –¥–∏–∞–ª–æ–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
            from PySide6.QtWidgets import QMessageBox
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–î–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
            from PySide6.QtWidgets import QMessageBox
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {e}")

    def _on_settings_changed(self, settings_dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        try:
            print(f"üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–º–µ–Ω–µ–Ω—ã: {settings_dict}")
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —à—Ä–∏—Ñ—Ç–∞
            if 'font_size' in settings_dict:
                font_size = settings_dict['font_size']
                font = self.font()
                font.setPointSize(font_size)
                self.setFont(font)
                print(f"‚úÖ –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {font_size}")
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã –∏ —Ç—ë–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
            # –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç—ë–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –≤ settings_dialog.py
            # –∏ –ø—Ä–∏–º–µ–Ω—ë–Ω –∫ theme_manager._current_variant
            if 'theme' in settings_dict:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è —Ç–µ–º—ã –Ω–∞–ø—Ä—è–º—É—é, –∞ –Ω–µ –º–∞–ø–ø–∏–Ω–≥, —Ç–∞–∫ –∫–∞–∫ —Ç–µ–ø–µ—Ä—å
                # –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ
                theme_name = settings_dict['theme']
                self.on_change_theme(theme_name)
            
            # –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª–∏
            if 'show_panels' in settings_dict:
                panels = settings_dict['show_panels']
                if 'file_explorer' in panels:
                    self.file_explorer.setVisible(panels['file_explorer'])
                if 'terminal' in panels:
                    self.terminal_widget.setVisible(panels['terminal'])
                if 'chat' in panels:
                    self.chat_widget.setVisible(panels['chat'])
                print("‚úÖ –í–∏–¥–∏–º–æ—Å—Ç—å –ø–∞–Ω–µ–ª–µ–π –æ–±–Ω–æ–≤–ª–µ–Ω–∞")            # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
            if 'extensions' in settings_dict:
                extensions = settings_dict['extensions']
                print(f"üîå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π: {extensions}")
                # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –≤–∫–ª—é—á–µ–Ω–∏—è/–æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π                
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")

    def _show_settings(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        try:
            settings_dialog = GopiAISettingsDialog(self.theme_manager, self)
              # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
            settings_dialog.settings_applied.connect(self._on_settings_changed)
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
            if settings_dialog.exec() == settings_dialog.DialogCode.Accepted:
                print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
                
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
            from PySide6.QtWidgets import QMessageBox
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {e}")
    
    def _apply_theme_change(self, theme_key: str):
        """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã"""
        try:
            if self.theme_manager and self.theme_manager.apply_theme(theme_key):
                print(f"üé® –¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: {theme_key}")
            else:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–µ–º—É: {theme_key}")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã: {e}")

    def _on_new_file(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞"""
        if MODULES_LOADED and hasattr(self.tab_document, 'add_new_tab'):
            self.tab_document.add_new_tab("–ù–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç", "# –ù–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç\n\n–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∑–¥–µ—Å—å...")
        else:
            print("üìù –ù–æ–≤—ã–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω (fallback —Ä–µ–∂–∏–º)")

    def _on_open_file(self):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞"""
        file_path, _ = QFileDialog.getOpenFileName(self, "–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª", "", "–í—Å–µ —Ñ–∞–π–ª—ã (*.*)")
        if file_path:
            try:
                with open(file_path, 'r', encoding='utf-8') as f:
                    content = f.read()
                filename = os.path.basename(file_path)
                if MODULES_LOADED and hasattr(self.tab_document, 'add_new_tab'):
                    self.tab_document.add_new_tab(filename, content)
                else:
                    print(f"üìÇ –§–∞–π–ª –æ—Ç–∫—Ä—ã—Ç: {filename} (fallback —Ä–µ–∂–∏–º)")
            except Exception as e:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª: {e}")

    def _on_save_file(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞"""
        if hasattr(self.tab_document, 'get_current_text'):
            content = self.tab_document.get_current_text()
            file_path, _ = QFileDialog.getSaveFileName(self, "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª", "", "–í—Å–µ —Ñ–∞–π–ª—ã (*.*)")
            if file_path:
                try:
                    with open(file_path, 'w', encoding='utf-8') as f:
                        f.write(content)
                    QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω —É—Å–ø–µ—à–Ω–æ!")
                except Exception as e:
                    QMessageBox.warning(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª: {e}")

    def _toggle_chat(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —á–∞—Ç–∞"""
        self.chat_widget.setVisible(not self.chat_widget.isVisible())

    def _toggle_terminal(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞"""
        self.terminal_widget.setVisible(not self.terminal_widget.isVisible())

    def on_change_theme(self, theme_name):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã —Ç–µ–º—ã"""
        try:
            print(f"üé® –ó–∞–ø—Ä–æ—Å —Å–º–µ–Ω—ã —Ç–µ–º—ã: {theme_name}")
            
            # –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–µ–º—É —á–µ—Ä–µ–∑ theme_manager            
            if self.theme_manager and hasattr(self.theme_manager, 'apply_theme'):
                try:
                    self.theme_manager.apply_theme(theme_name)
                    print(f"‚úÖ –¢–µ–º–∞ '{theme_name}' –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —á–µ—Ä–µ–∑ theme_manager")
                    return
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã —á–µ—Ä–µ–∑ theme_manager: {e}")
            
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–µ–º—É: {theme_name}")
                
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã —Ç–µ–º—ã: {e}")        # Fallback - –ø—Ä–∏–º–µ–Ω—è–µ–º –ø—Ä–æ—Å—Ç—É—é —Ç–µ–º—É
            try:
                # –ü—Ä–∏–º–µ–Ω—è–µ–º fallback —Å—Ç–∏–ª–∏
                self._apply_fallback_styles()
                print("‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω–∞ –ø—Ä–æ—Å—Ç–∞—è fallback —Ç–µ–º–∞")
            except Exception as fallback_error:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ fallback —Ç–µ–º—ã: {fallback_error}")

    def resizeEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞"""
        super().resizeEvent(event)
        self._update_grips()

    def showEvent(self, event):
        """–°–æ–±—ã—Ç–∏–µ –ø–æ–∫–∞–∑–∞ –æ–∫–Ω–∞"""
        super().showEvent(event)
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫–∏ –º–µ–Ω—é –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞
        try:
            menu_bar = getattr(self.titlebar_with_menu, 'menu_bar', None)
            if menu_bar and hasattr(menu_bar, 'refresh_icons'):
                menu_bar.refresh_icons()
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∫–æ–Ω–æ–∫: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –º–æ–¥—É–ª—å–Ω–æ–≥–æ GopiAI...")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    app = QApplication(sys.argv)
    app.setApplicationName("GopiAI")
    app.setApplicationVersion("0.3.0")
    app.setOrganizationName("GopiAI Team")
    
    # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π Qt
    warnings.filterwarnings("ignore", category=DeprecationWarning)
    
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø–æ–∫–∞–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        window = FramelessGopiAIStandaloneWindow()
        window.show()
        
        print("‚úÖ GopiAI v0.3.0 —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
        print("üéØ –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∞–∫—Ç–∏–≤–Ω–∞")
        print("üìä –†–∞–∑–º–µ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–º–µ–Ω—å—à–µ–Ω")
        
        # –ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        sys.exit(app.exec())
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)


if __name__ == "__main__":
    main()



