"""
OptimizedChatWidget - –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤–∏–¥–∂–µ—Ç —á–∞—Ç–∞ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –æ–±—Ä—ã–≤–∞–Ω–∏–µ–º —Å–æ–æ–±—â–µ–Ω–∏–π
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—é –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ Qt –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
"""

import logging
from typing import Optional, List
from PySide6.QtWidgets import (QPlainTextEdit, QVBoxLayout, QWidget, 
                               QScrollArea, QFrame, QHBoxLayout, QLabel)
from PySide6.QtCore import QTimer, Qt, Signal, QThread, pyqtSignal
from PySide6.QtGui import QTextCursor, QTextCharFormat, QFont, QColor, QPalette

logger = logging.getLogger(__name__)

class OptimizedChatWidget(QPlainTextEdit):
    """–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤–∏–¥–∂–µ—Ç —á–∞—Ç–∞ —Å –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏–µ–π –∏ —É–ª—É—á—à–µ–Ω–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é"""
    
    # –°–∏–≥–Ω–∞–ª—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    message_added = Signal(str)
    scroll_to_bottom_requested = Signal()
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setup_ui()
        self.setup_buffer()
        self.setup_formatting()
        
        logger.info("[OptimizedChatWidget] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —á–∞—Ç –≤–∏–¥–∂–µ—Ç")
        
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ UI –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
        # QPlainTextEdit –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤
        self.setReadOnly(True)
        self.setMaximumBlockCount(2000)  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –±—É—Ñ–µ—Ä–∞ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à—Ä–∏—Ñ—Ç–∞
        font = QFont("Consolas", 10)
        font.setStyleHint(QFont.Monospace)
        self.setFont(font)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        self.setLineWrapMode(QPlainTextEdit.WidgetWidth)
        self.setVerticalScrollBarPolicy(Qt.ScrollBarAsNeeded)
        self.setHorizontalScrollBarPolicy(Qt.ScrollBarAsNeeded)
        
        # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        self.setCenterOnScroll(False)
        self.setTabStopDistance(40)
        
        logger.debug("[OptimizedChatWidget] UI –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")
        
    def setup_buffer(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        self.text_buffer = []
        self.max_buffer_size = 20  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –±—É—Ñ–µ—Ä–∞
        self.buffer_flush_delay = 100  # –ó–∞–¥–µ—Ä–∂–∫–∞ —Å–±—Ä–æ—Å–∞ –±—É—Ñ–µ—Ä–∞ –≤ –º—Å
        
        # –¢–∞–π–º–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–±—Ä–æ—Å–∞ –±—É—Ñ–µ—Ä–∞
        self.buffer_timer = QTimer()
        self.buffer_timer.timeout.connect(self.flush_buffer)
        self.buffer_timer.setSingleShot(True)
        
        logger.debug("[OptimizedChatWidget] –°–∏—Å—Ç–µ–º–∞ –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        
    def setup_formatting(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞"""
        # –§–æ—Ä–º–∞—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
        self.user_format = QTextCharFormat()
        self.user_format.setForeground(QColor(0, 100, 200))  # –°–∏–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
        self.ai_format = QTextCharFormat()
        self.ai_format.setForeground(QColor(50, 150, 50))  # –ó–µ–ª–µ–Ω—ã–π –¥–ª—è AI
        
        self.system_format = QTextCharFormat()
        self.system_format.setForeground(QColor(150, 150, 150))  # –°–µ—Ä—ã–π –¥–ª—è —Å–∏—Å—Ç–µ–º—ã
        
        self.error_format = QTextCharFormat()
        self.error_format.setForeground(QColor(200, 50, 50))  # –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è –æ—à–∏–±–æ–∫
        
        logger.debug("[OptimizedChatWidget] –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ")
        
    def append_message(self, message: str, message_type: str = "ai", auto_scroll: bool = True):
        """
        –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏–µ–π
        
        Args:
            message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            message_type: –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è (user, ai, system, error)
            auto_scroll: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –∫–æ–Ω—Ü—É
        """
        try:
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
            formatted_message = self.format_message(message, message_type)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤ –±—É—Ñ–µ—Ä
            self.text_buffer.append({
                'text': formatted_message,
                'type': message_type,
                'auto_scroll': auto_scroll
            })
            
            logger.debug(f"[OptimizedChatWidget] –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –±—É—Ñ–µ—Ä: {len(message)} —Å–∏–º–≤–æ–ª–æ–≤")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —Å–±—Ä–æ—Å–∞ –±—É—Ñ–µ—Ä–∞
            if len(self.text_buffer) >= self.max_buffer_size:
                self.flush_buffer()
            else:
                # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞
                self.buffer_timer.start(self.buffer_flush_delay)
                
        except Exception as e:
            logger.error(f"[OptimizedChatWidget] –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            # Fallback - –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞–ø—Ä—è–º—É—é
            self.append_text_direct(str(message))
            
    def append_text_chunk(self, text_chunk: str, message_type: str = "ai"):
        """
        –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —á–∞—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–ª—è streaming)
        
        Args:
            text_chunk: –ß–∞—Å—Ç—å —Ç–µ–∫—Å—Ç–∞
            message_type: –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
        """
        try:
            # –î–ª—è streaming –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ —á–∞—Å—Ç—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            self.text_buffer.append({
                'text': text_chunk,
                'type': message_type,
                'auto_scroll': True,
                'is_chunk': True
            })
            
            # –ë–æ–ª–µ–µ —á–∞—Å—Ç—ã–π —Å–±—Ä–æ—Å –¥–ª—è streaming
            if len(self.text_buffer) >= 5:
                self.flush_buffer()
            else:
                self.buffer_timer.start(50)  # –ë–æ–ª–µ–µ –±—ã—Å—Ç—Ä—ã–π —Å–±—Ä–æ—Å –¥–ª—è streaming
                
        except Exception as e:
            logger.error(f"[OptimizedChatWidget] –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è chunk: {e}")
            
    def flush_buffer(self):
        """–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π —Å–±—Ä–æ—Å –±—É—Ñ–µ—Ä–∞ –≤ UI"""
        if not self.text_buffer:
            return
            
        try:
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä
            self.buffer_timer.stop()
            
            # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –∫—É—Ä—Å–æ—Ä –≤ –∫–æ–Ω–µ—Ü
            cursor = self.textCursor()
            cursor.movePosition(QTextCursor.End)
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω—É–∂–Ω–∞ –ª–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
            should_scroll = any(item.get('auto_scroll', True) for item in self.text_buffer)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤–µ—Å—å –±—É—Ñ–µ—Ä –∑–∞ –æ–¥–Ω—É –æ–ø–µ—Ä–∞—Ü–∏—é –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            combined_text = ""
            for item in self.text_buffer:
                text = item['text']
                if not item.get('is_chunk', False):
                    text += "\n"  # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å –¥–ª—è –ø–æ–ª–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
                combined_text += text
            
            # –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
            cursor.insertText(combined_text)
            
            # –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –µ—Å–ª–∏ –Ω—É–∂–Ω–∞
            if should_scroll:
                self.ensureCursorVisible()
                
            # –û—á–∏—â–∞–µ–º –±—É—Ñ–µ—Ä
            self.text_buffer.clear()
            
            logger.debug(f"[OptimizedChatWidget] –ë—É—Ñ–µ—Ä —Å–±—Ä–æ—à–µ–Ω: {len(combined_text)} —Å–∏–º–≤–æ–ª–æ–≤")
            
        except Exception as e:
            logger.error(f"[OptimizedChatWidget] –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –±—É—Ñ–µ—Ä–∞: {e}")
            
    def append_text_direct(self, text: str):
        """–ü—Ä—è–º–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –±–µ–∑ –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏–∏ (–¥–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤)"""
        try:
            cursor = self.textCursor()
            cursor.movePosition(QTextCursor.End)
            cursor.insertText(text + "\n")
            self.ensureCursorVisible()
            
        except Exception as e:
            logger.error(f"[OptimizedChatWidget] –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {e}")
            
    def format_message(self, message: str, message_type: str) -> str:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        
        Args:
            message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            message_type: –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
            
        Returns:
            –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        """
        try:
            from datetime import datetime
            timestamp = datetime.now().strftime("%H:%M:%S")
            
            if message_type == "user":
                return f"[{timestamp}] üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message}"
            elif message_type == "ai":
                return f"[{timestamp}] ü§ñ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç: {message}"
            elif message_type == "system":
                return f"[{timestamp}] ‚öôÔ∏è –°–∏—Å—Ç–µ–º–∞: {message}"
            elif message_type == "error":
                return f"[{timestamp}] ‚ùå –û—à–∏–±–∫–∞: {message}"
            else:
                return f"[{timestamp}] {message}"
                
        except Exception as e:
            logger.error(f"[OptimizedChatWidget] –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
            return str(message)
            
    def clear_chat(self):
        """–û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞"""
        try:
            self.clear()
            self.text_buffer.clear()
            self.buffer_timer.stop()
            logger.info("[OptimizedChatWidget] –ß–∞—Ç –æ—á–∏—â–µ–Ω")
            
        except Exception as e:
            logger.error(f"[OptimizedChatWidget] –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞: {e}")
            
    def get_chat_content(self) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —á–∞—Ç–∞"""
        try:
            # –°–Ω–∞—á–∞–ª–∞ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –±—É—Ñ–µ—Ä
            self.flush_buffer()
            return self.toPlainText()
            
        except Exception as e:
            logger.error(f"[OptimizedChatWidget] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {e}")
            return ""
            
    def save_chat_to_file(self, filename: str) -> bool:
        """
        –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–∞—Ç–∞ –≤ —Ñ–∞–π–ª —Å –æ—á–∏—Å—Ç–∫–æ–π HTML
        
        Args:
            filename: –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            
        Returns:
            True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ
        """
        try:
            content = self.get_chat_content()
            
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–∞–Ω–∏—Ç–∏–∑–∞—Ç–æ—Ä –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
            try:
                from ..gopiai_integration.html_sanitizer import sanitize_html_for_file
                clean_content = sanitize_html_for_file(content)
            except ImportError:
                # Fallback –µ—Å–ª–∏ —Å–∞–Ω–∏—Ç–∏–∑–∞—Ç–æ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
                import re
                clean_content = re.sub(r'<[^<>]*>', '', content)
            
            with open(filename, 'w', encoding='utf-8') as f:
                f.write(clean_content)
                
            logger.info(f"[OptimizedChatWidget] –ß–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {filename}")
            return True
            
        except Exception as e:
            logger.error(f"[OptimizedChatWidget] –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª: {e}")
            return False
            
    def set_max_buffer_size(self, size: int):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –±—É—Ñ–µ—Ä–∞"""
        self.max_buffer_size = max(1, size)
        logger.debug(f"[OptimizedChatWidget] –†–∞–∑–º–µ—Ä –±—É—Ñ–µ—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {size}")
        
    def set_buffer_flush_delay(self, delay_ms: int):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–±—Ä–æ—Å–∞ –±—É—Ñ–µ—Ä–∞"""
        self.buffer_flush_delay = max(10, delay_ms)
        logger.debug(f"[OptimizedChatWidget] –ó–∞–¥–µ—Ä–∂–∫–∞ —Å–±—Ä–æ—Å–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {delay_ms}–º—Å")

class ChatContainer(QWidget):
    """–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —á–∞—Ç–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setup_ui()
        
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ UI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"""
        layout = QVBoxLayout(self)
        
        # –°–æ–∑–¥–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —á–∞—Ç –≤–∏–¥–∂–µ—Ç
        self.chat_widget = OptimizedChatWidget()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ layout
        layout.addWidget(self.chat_widget)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ layout
        layout.setContentsMargins(5, 5, 5, 5)
        layout.setSpacing(0)
        
        logger.info("[ChatContainer] –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —á–∞—Ç–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
    def get_chat_widget(self) -> OptimizedChatWidget:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞ —á–∞—Ç–∞"""
        return self.chat_widget
