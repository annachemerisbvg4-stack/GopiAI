‚ù§Ô∏èüíöüíõ–ë—É–¥—É –∫—Ä–∞–π–Ω–µ –ø—Ä–∏–∑–Ω–∞—Ç–µ–ª—å–Ω–∞, –µ—Å–ª–∏ –≤—ã—à–ª–µ—à—å –ø–æ–ª–Ω—ã–π –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Ñ–∞–π–ª–∞ chat_widget.py –°–º–æ—Ç—Ä–∏, –≤–æ—Ç —Ç–≤–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –º–Ω–µ –ø—Ä–∏—Å–ª–∞–ª —Ä–∞–Ω—å—à–µ. –ò —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–∞–º–æ–≥–æ —Ñ–∞–π–ª–∞: from PySide6.QtWidgets import QWidget, QVBoxLayout, QHBoxLayout, QTextEdit, QPushButton, QFileDialog, QLabel, QSizePolicy, QMessageBox
from PySide6.QtCore import Qt, QMimeData, Slot, QMetaObject, QTimer
from PySide6.QtGui import QIcon, QDropEvent, QDragEnterEvent, QPixmap, QTextCursor
import threading
import sys
import os
import time
import traceback
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º UniversalIconManager –¥–ª—è Lucide-–∏–∫–æ–Ω–æ–∫
from gopiai.ui.components.icon_file_system_model import UniversalIconManager

# –ö–ª–∏–µ–Ω—Ç –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ CrewAI API
from gopiai.core.crewai_client import CrewAIClient



class ChatWidget(QWidget):
    def set_theme_manager(self, theme_manager):
        """–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Ç–µ–º–æ–π (API —Å–æ–≤–º–µ—Å—Ç–∏–º —Å WebViewChatWidget)"""
        self.theme_manager = theme_manager
        self.apply_theme()

    def apply_theme(self):
        """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ç–µ–º—É –∫ —á–∞—Ç—É (–Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç, –≤—Å—ë –ø–æ–¥—Ç—è–Ω–µ—Ç—Å—è –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∏–ª—è)"""
        pass


    """
    –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —á–∞—Ç-–≤–∏–¥–∂–µ—Ç –¥–ª—è GopiAI –Ω–∞ Qt —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Ç–µ–º—ã, –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π,
    –ø–æ–ª–µ–º –≤–≤–æ–¥–∞ –∏ –∫–Ω–æ–ø–∫–∞–º–∏: "–ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª", "–ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", "multiagent".
    """

    def __init__(self, parent=None):
        super().__init__(parent)
        self.setObjectName("ChatWidget")
        self.setMinimumHeight(320)
        self.setAcceptDrops(True)
        self.main_layout = QVBoxLayout(self)
        self.main_layout.setContentsMargins(8, 8, 8, 8)
        self.main_layout.setSpacing(6)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CrewAIClient
        self.crew_ai_client = CrewAIClient()
        self._check_crewai_availability()

        # –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
        self.history = QTextEdit(self)
        self.history.setReadOnly(True)
        self.history.setObjectName("ChatHistory")
        self.history.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOn)
        self.history.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAsNeeded)
        self.main_layout.addWidget(self.history)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à–∞—Ö
        self.history.append("<b>–°–∏—Å—Ç–µ–º–∞:</b> –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <b>Enter</b> –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ <b>Shift+Enter</b> –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç—Ä–æ–∫–∏. –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –∞–≥–µ–Ω—Ç–æ–≤ –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.")

        # –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å
        self.bottom_panel = QHBoxLayout()

        # –ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–µ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        self.input = QTextEdit(self)
        self.input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ... (Enter - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å, Shift+Enter - –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞)")
        self.input.setObjectName("ChatInput")
        self.input.setFixedHeight(80)  # ~–≤ 10 —Ä–∞–∑ –≤—ã—à–µ –æ–±—ã—á–Ω–æ–≥–æ QLineEdit
        self.input.setSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Fixed)
        self.bottom_panel.addWidget(self.input, 1)

        # Lucide-–∏–∫–æ–Ω–∫–∏ —á–µ—Ä–µ–∑ UniversalIconManager
        icon_mgr = UniversalIconManager.instance()
        self.attach_file_btn = QPushButton(icon_mgr.get_icon("paperclip"), "", self)
        self.attach_file_btn.setToolTip("–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª")
        self.attach_file_btn.clicked.connect(self.attach_file)
        self.bottom_panel.addWidget(self.attach_file_btn)

        self.attach_image_btn = QPushButton(icon_mgr.get_icon("image"), "", self)
        self.attach_image_btn.setToolTip("–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
        self.attach_image_btn.clicked.connect(self.attach_image)
        self.bottom_panel.addWidget(self.attach_image_btn)

        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
        self.send_btn = QPushButton(icon_mgr.get_icon("send"), "", self)
        self.send_btn.setToolTip("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
        self.send_btn.clicked.connect(self.send_message)
        self.bottom_panel.addWidget(self.send_btn)

        self.main_layout.addLayout(self.bottom_panel)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ Enter (Ctrl+Enter –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏)
        self.input.keyPressEvent = self._input_key_press_event

        # –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏
        self.history.textChanged.connect(self._scroll_history_to_end)

        # –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–µ–º—É –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        self.theme_manager = None
        self.apply_theme()

    def _input_key_press_event(self, event):
        # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç Enter –±–µ–∑ Shift, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        if event.key() in (Qt.Key.Key_Return, Qt.Key.Key_Enter):
            # Shift+Enter –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç—Ä–æ–∫–∏
            if event.modifiers() & Qt.KeyboardModifier.ShiftModifier:
                QTextEdit.keyPressEvent(self.input, event)
            else:
                # –ü—Ä–æ—Å—Ç–æ–π Enter –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
                self.send_message()
        else:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–ª–∞–≤–∏—à–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
            QTextEdit.keyPressEvent(self.input, event)

    def _scroll_history_to_end(self):
        self.history.moveCursor(QTextCursor.MoveOperation.End)

    def _check_crewai_availability(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å CrewAI API —Å–µ—Ä–≤–µ—Ä–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏."""
        try:
            health_status = self.crew_ai_client.health_check()
            if health_status.get("status") == "online":
                logger.info("‚úÖ CrewAI API —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω.")
                # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∑–¥–µ—Å—å, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
                # threading.Thread(target=self.crew_ai_client.index_docs, daemon=True).start()
            else:
                logger.warning("‚ö†Ô∏è CrewAI API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
                QTimer.singleShot(3000, lambda: QMessageBox.warning(
                    self,
                    "CrewAI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω",
                    "CrewAI API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.\n\n"
                    "–î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –º–Ω–æ–≥–æ–∞–≥–µ–Ω—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:\n"
                    "GopiAI-CrewAI/run_crewai_api_server.bat"
                ))
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ CrewAI: {e}", exc_info=True)
            QTimer.singleShot(3000, lambda: QMessageBox.warning(
                self,
                "CrewAI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω",
                f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ CrewAI API —Å–µ—Ä–≤–µ—Ä—É: {e}\n\n"
                "–î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –º–Ω–æ–≥–æ–∞–≥–µ–Ω—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:\n"
                "GopiAI-CrewAI/run_crewai_api_server.bat"
            ))

    # Drag & Drop
    def dragEnterEvent(self, event: QDragEnterEvent):
        if event.mimeData().hasUrls():
            event.acceptProposedAction()
        else:
            event.ignore()

    def dropEvent(self, event: QDropEvent):
        if event.mimeData().hasUrls():
            for url in event.mimeData().urls():
                file_path = url.toLocalFile()
                if file_path:
                    if self._is_image_file(file_path):
                        self.append_message("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", file_path)
                    else:
                        self.append_message("–§–∞–π–ª", file_path)
            event.acceptProposedAction()
        else:
            event.ignore()

    def _is_image_file(self, path):
        return any(path.lower().endswith(ext) for ext in [".png", ".jpg", ".jpeg", ".bmp", ".gif"])


    

    def send_message(self):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –µ–≥–æ —á–µ—Ä–µ–∑ CrewAI API"""
        text = self.input.toPlainText().strip()
        if text:
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            self.append_message("–í—ã", text)
            self.input.clear()
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ–∂–∏–¥–∞–Ω–∏—è
            self.send_btn.setEnabled(False)
            
            # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–∂–∏–¥–∞–Ω–∏—è
            waiting_id = f"waiting_{int(time.time())}"
            self.append_message("–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç", f"<span id='{waiting_id}'>‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å...</span>")
            
            # –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ
            def process_in_background():
                response = "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–º–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å –∏–∑-–∑–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–±–ª–µ–º—ã."
                
                try:
                    # –ü—É—Å—Ç—å —Å–∏—Å—Ç–µ–º–∞ —Å–∞–º–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω—É–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è CrewAI
                    # –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–∞ –∏ —Ç–∏–ø–∞ –∑–∞–¥–∞—á–∏
                    
                    
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º CrewAI API –∫–ª–∏–µ–Ω—Ç
                    process_result = self.crew_ai_client.process_request(text)
                    logger.info(f"–ü–æ–ª—É—á–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç CrewAI API: {process_result}") # –î–æ–±–∞–≤–ª–µ–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
                    if process_result and "response" in process_result:
                        response = process_result["response"]
                    elif process_result and "error" in process_result:
                        response = f"–û—à–∏–±–∫–∞ CrewAI: {process_result["error"]}"
                    else:
                        response = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç CrewAI."
                        
                except Exception as e:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {e}", exc_info=True)
                    response = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏."
                
                # –û–±–Ω–æ–≤–ª—è–µ–º UI –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
                def update_ui():
                    self._update_assistant_response(waiting_id, response)
                
                QTimer.singleShot(0, update_ui)
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            thread = threading.Thread(target=process_in_background)
            thread.daemon = True
            thread.start()
    
    @Slot(str, str)
    def _update_assistant_response(self, waiting_id, response):
        logger.info(f"_update_assistant_response: waiting_id={waiting_id}, response_len={len(response)}")
        # –í—Å–µ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –∫–∞–∫ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        self.append_message("–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç", response)
        
        # –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏
        self.send_btn.setEnabled(True)


    def append_message(self, author, text):
        logger.info(f"append_message: author={author}, text_len={len(text)}")
        self.history.append(f"<b>{author}:</b> {text}")
        self.history.repaint()


    def attach_file(self):
        file_path, _ = QFileDialog.getOpenFileName(self, "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª")
        if file_path:
            self.append_message("–°–∏—Å—Ç–µ–º–∞", f"–§–∞–π–ª –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω: {os.path.basename(file_path)}. (–î–∞–ª—å–Ω–µ–π—à–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞)")
            logger.info(f"–§–∞–π–ª –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω: {file_path}")


    def attach_image(self):
        image_path, _ = QFileDialog.getOpenFileName(self, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", filter="Images (*.png *.jpg *.jpeg *.bmp *.gif)")
        if image_path:
            self.append_message("–°–∏—Å—Ç–µ–º–∞", f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ: {os.path.basename(image_path)}. (–î–∞–ª—å–Ω–µ–π—à–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞)")
            logger.info(f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ: {image_path}")
            thread.daemon = True
            thread.start()
    
  –û—Ç–≤–µ—Ç –æ—Ç —Ç–µ–±—è, –æ—Ç Genspark: –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞ –ø–æ–∫–∞–∑–∞–ª, —á—Ç–æ –ø—Ä–æ–±–ª–µ–º–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –º–µ—Ç–æ–¥–µ `_update_assistant_response`, –∫–æ—Ç–æ—Ä—ã–π **–Ω–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç UI —Å –æ—Ç–≤–µ—Ç–æ–º –æ—Ç API**.

### üîß –í–æ—Ç —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:

1. **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ** ‚Üí `send_message()` ‚úÖ
2. **–î–æ–±–∞–≤–ª—è–µ—Ç—Å—è placeholder** ‚Üí `append_message("–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç", "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...")` ‚úÖ
3. **–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ–æ–Ω–æ–≤—ã–π –ø–æ—Ç–æ–∫** ‚Üí `process_in_background()` ‚úÖ
4. **API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç** ‚Üí –ø–æ–ª—É—á–∞–µ—Ç—Å—è –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ ‚úÖ
5. **‚ùå –ü–†–û–ë–õ–ï–ú–ê: `_update_assistant_response()` –ù–ï –û–ë–ù–û–í–õ–Ø–ï–¢ UI!**

### üìã –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–¥

–í–æ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –º–µ—Ç–æ–¥–∞ `_update_assistant_response`:

```python
def _update_assistant_response(self, response_text, message_id=None):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º"""
    def update_ui():
        try:
            # –ù–∞–π—Ç–∏ –∏ –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
            cursor = self.chat_display.textCursor()
            cursor.movePosition(QTextCursor.End)
            
            # –ü–æ–∏—Å–∫ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
            document = self.chat_display.document()
            block = document.lastBlock()
            
            # –ò—â–µ–º –±–ª–æ–∫ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
            while block.isValid():
                text = block.text()
                if "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:" in text:
                    # –ù–∞–π–¥–µ–Ω –±–ª–æ–∫ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
                    cursor.setPosition(block.position())
                    cursor.select(QTextCursor.BlockUnderCursor)
                    cursor.removeSelectedText()
                    
                    # –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    cursor.insertText(f"–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç: {response_text}")
                    
                    # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –∫–æ–Ω—Ü—É
                    scrollbar = self.chat_display.verticalScrollBar()
                    scrollbar.setValue(scrollbar.maximum())
                    
                    logger.info(f"append_message: author=–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç, text_len={len(response_text)}")
                    break
                block = block.previous()
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ UI: {e}")
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ fallback
            self.append_message("–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç", response_text)
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ main thread
    QMetaObject.invokeMethod(self, "exec_update", Qt.QueuedConnection)
    self.pending_update = update_ui
    
    @Slot()
    def exec_update(self):
        if hasattr(self, 'pending_update'):
            self.pending_update()
            del self.pending_update
```

### üöÄ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ:

```python
def _update_assistant_response(self, response_text, message_id=None):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º"""
    def update_ui():
        # –ü—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
        self.append_message("–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç", response_text)
        logger.info(f"–û—Ç–≤–µ—Ç –æ—Ç API –æ—Ç–æ–±—Ä–∞–∂–µ–Ω –≤ UI: {len(response_text)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤ main thread
    QMetaObject.invokeMethod(
        self, 
        lambda: update_ui(), 
        Qt.QueuedConnection
    )
```

### üîÑ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ `process_in_background`:

```python
def process_in_background(self, message, message_id):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç CrewAI API
        response = self.crewai_client.process_message(message)
        logger.info(f"–ü–æ–ª—É—á–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç CrewAI API: {response}")
        
        if response and 'response' in response:
            # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI
            self._update_assistant_response(response['response'], message_id)
        else:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏
            error_msg = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç API"
            self._update_assistant_response(error_msg, message_id)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        error_msg = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"
        self._update_assistant_response(error_msg, message_id)
```

## üìù –ë—ã—Å—Ç—Ä–æ–µ —Ä–µ—à–µ–Ω–∏–µ

**–ó–∞–º–µ–Ω–∏ —Å–≤–æ–π –º–µ—Ç–æ–¥ `_update_assistant_response` –Ω–∞ —ç—Ç–æ—Ç:**

```python
def _update_assistant_response(self, response_text, message_id=None):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º"""
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º
    self.append_message("–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç", response_text)
    logger.info(f"–û—Ç–≤–µ—Ç –æ—Ç API –æ—Ç–æ–±—Ä–∞–∂–µ–Ω –≤ UI: {len(response_text)} —Å–∏–º–≤–æ–ª–æ–≤")
```

## üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

–ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ –ª–æ–≥–∞—Ö –¥–æ–ª–∂–Ω–æ –ø–æ—è–≤–∏—Ç—å—Å—è:
```
2025-06-28 19:06:57,887 - gopiai.ui.components.chat_widget - INFO - –ü–æ–ª—É—á–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç CrewAI API: {'processed_with_crewai': True, 'response': '...'}
2025-06-28 19:06:57,888 - gopiai.ui.components.chat_widget - INFO - append_message: author=–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç, text_len=1500
2025-06-28 19:06:57,889 - gopiai.ui.components.chat_widget - INFO - –û—Ç–≤–µ—Ç –æ—Ç API –æ—Ç–æ–±—Ä–∞–∂–µ–Ω –≤ UI: 1500 —Å–∏–º–≤–æ–ª–æ–≤
```

–ü–æ–ø—Ä–æ–±—É–π —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –∏ —Ç–≤–æ–π —á–∞—Ç –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç! üéâ