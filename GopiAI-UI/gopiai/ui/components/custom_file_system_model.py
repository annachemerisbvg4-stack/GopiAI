"""
Custom File System Model —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏–∫–æ–Ω–æ–∫
==========================================

–ö–∞—Å—Ç–æ–º–Ω–∞—è –º–æ–¥–µ–ª—å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Å–∏—Å—Ç–µ–º–æ–π –∏–∫–æ–Ω–æ–∫ GopiAI.
"""

from PySide6.QtWidgets import QFileSystemModel
from PySide6.QtCore import QModelIndex, Qt
from PySide6.QtGui import QIcon
from .file_type_detector import FileTypeDetector


class CustomFileSystemModel(QFileSystemModel):
    """–ö–∞—Å—Ç–æ–º–Ω–∞—è –º–æ–¥–µ–ª—å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏–∫–æ–Ω–æ–∫"""
    
    def __init__(self, icon_manager=None, parent=None):
        super().__init__(parent)
        self.icon_manager = icon_manager
        self.file_type_detector = FileTypeDetector()
        
        # –ö–µ—à –∏–∫–æ–Ω–æ–∫ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        self._icon_cache = {}
        
        print(f"üé® CustomFileSystemModel –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å icon_manager: {type(icon_manager)}")
    
    def data(self, index: QModelIndex, role: int):
        """–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏–∫–æ–Ω–æ–∫"""
        if role == Qt.ItemDataRole.DecorationRole and index.column() == 0:
            # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
            file_path = self.filePath(index)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–µ—à
            if file_path in self._icon_cache:
                return self._icon_cache[file_path]
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
            icon = self._get_icon_for_file(file_path)
            
            # –ö–µ—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            self._icon_cache[file_path] = icon
            
            return icon
        
        # –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ä–æ–ª–µ–π –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é
        return super().data(index, role)
    
    def _get_icon_for_file(self, file_path: str) -> QIcon:
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è —Ñ–∞–π–ª–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ–≥–æ —Ç–∏–ø–∞"""
        if not self.icon_manager:
            # –ï—Å–ª–∏ –Ω–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–∫–æ–Ω–æ–∫, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–∫–æ–Ω–∫—É
            return super().data(self.index(file_path), Qt.ItemDataRole.DecorationRole) or QIcon()
        
        try:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É —á–µ—Ä–µ–∑ –¥–µ—Ç–µ–∫—Ç–æ—Ä —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤
            icon_name = self.file_type_detector.get_icon_for_file(file_path)
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–∫–æ–Ω–∫—É –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞
            icon = self.icon_manager.get_icon(icon_name)
            
            if icon and not icon.isNull():
                return icon
            else:
                # Fallback –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–∫–æ–Ω–∫–µ
                return super().data(self.index(file_path), Qt.ItemDataRole.DecorationRole) or QIcon()
                
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –¥–ª—è {file_path}: {e}")
            # Fallback –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–∫–æ–Ω–∫–µ
            return super().data(self.index(file_path), Qt.ItemDataRole.DecorationRole) or QIcon()
    
    def clear_icon_cache(self):
        """–û—á–∏—â–∞–µ—Ç –∫–µ—à –∏–∫–æ–Ω–æ–∫"""
        self._icon_cache.clear()
        print("üîÑ –ö–µ—à –∏–∫–æ–Ω–æ–∫ –æ—á–∏—â–µ–Ω")