"""
Tab Widget Component –¥–ª—è GopiAI Standalone Interface
================================================

–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å —Å –≤–∫–ª–∞–¥–∫–∞–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.
"""

from PySide6.QtWidgets import QWidget, QVBoxLayout, QTabWidget, QTextEdit
from PySide6.QtCore import Qt, QUrl
from PySide6.QtWebEngineWidgets import QWebEngineView

class TabDocumentWidget(QWidget):
    """–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å —Å –≤–∫–ª–∞–¥–∫–∞–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setObjectName("tabDocument")
        self._setup_ui()

    def _setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤–∫–ª–∞–¥–æ–∫"""
        layout = QVBoxLayout(self)
        layout.setContentsMargins(0, 0, 0, 0)
        
        # –í–∏–¥–∂–µ—Ç –≤–∫–ª–∞–¥–æ–∫ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        self.tab_widget = QTabWidget()
        self.tab_widget.setTabsClosable(True)
        self.tab_widget.setMovable(True)
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
        self.tab_widget.setTabPosition(QTabWidget.TabPosition.North)
        self.tab_widget.setUsesScrollButtons(True)  # –ö–Ω–æ–ø–∫–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –ø—Ä–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ –≤–∫–ª–∞–¥–æ–∫
        self.tab_widget.setElideMode(Qt.TextElideMode.ElideRight)  # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—É—é –≤–∫–ª–∞–¥–∫—É
        welcome_tab = QTextEdit()
        welcome_tab.setPlainText("üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GopiAI v0.3.0!")
        welcome_tab.setReadOnly(True)
        
        self.tab_widget.addTab(welcome_tab, "üè† –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å")
        layout.addWidget(self.tab_widget)

    def add_new_tab(self, title="–ù–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç", content=""):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–∏ —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–º"""
        editor = QTextEdit()
        editor.setPlainText(content)
        index = self.tab_widget.addTab(editor, title)
        self.tab_widget.setCurrentIndex(index)
        return editor

    def add_browser_tab(self, url="about:blank", title="üåê –ë—Ä–∞—É–∑–µ—Ä"):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–∏ —Å –±—Ä–∞—É–∑–µ—Ä–æ–º"""
        print(f"üîç –°–æ–∑–¥–∞–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä...")
        
        try:
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–µ–π—à–∏–π –±—Ä–∞—É–∑–µ—Ä –ø—Ä—è–º–æ —Ç—É—Ç
            browser_widget = QWidget()
            browser_layout = QVBoxLayout(browser_widget)
            browser_layout.setContentsMargins(0, 0, 0, 0)
            
            # –°–æ–∑–¥–∞–µ–º —Å–∞–º –±—Ä–∞—É–∑–µ—Ä
            web_view = QWebEngineView()
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª–∏ –∏ —Ä–∞–∑–º–µ—Ä—ã
            web_view.setMinimumSize(800, 600)
            
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
            web_view.show()
            web_view.setVisible(True)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤ –ª–µ–π–∞—É—Ç
            browser_layout.addWidget(web_view)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤–∫–ª–∞–¥–∫—É
            index = self.tab_widget.addTab(browser_widget, title)
            self.tab_widget.setCurrentIndex(index)
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º URL
            if url and url != "about:blank":
                print(f"üì° –ó–∞–≥—Ä—É–∂–∞–µ–º URL: {url}")
            else:
                # –ó–∞–≥—Ä—É–∑–∫–∞ Google
                url = "https://google.com"
                print(f"üì° –ó–∞–≥—Ä—É–∂–∞–µ–º Google")
                
            web_view.load(QUrl(url))
            
            print(f"‚úÖ –í–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {url}")
            return browser_widget
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞: {e}")
            import traceback
            traceback.print_exc()
            return self._create_fallback_browser_tab(f"–û—à–∏–±–∫–∞: {str(e)}")

    def _create_fallback_browser_tab(self, error_msg):
        """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ—à–∏–±–∫–µ"""
        fallback_tab = QTextEdit()
        fallback_tab.setPlainText(f"""‚ùå –ë—Ä–∞—É–∑–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω

{error_msg}

üîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É QWebEngineView
‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Qt –º–æ–¥—É–ª—å WebEngine –≤–∫–ª—é—á–µ–Ω
‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PySide6 —Å WebEngine: pip install PySide6[webengine]
""")
        fallback_tab.setReadOnly(True)
        index = self.tab_widget.addTab(fallback_tab, "‚ùå –ë—Ä–∞—É–∑–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        self.tab_widget.setCurrentIndex(index)
        return fallback_tab

    def close_current_tab(self):
        """–ó–∞–∫—Ä—ã—Ç–∏–µ —Ç–µ–∫—É—â–µ–π –≤–∫–ª–∞–¥–∫–∏"""
        current_index = self.tab_widget.currentIndex()
        if current_index >= 0 and self.tab_widget.count() > 1:
            self.tab_widget.removeTab(current_index)

    def get_current_editor(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞"""
        current_widget = self.tab_widget.currentWidget()
        if isinstance(current_widget, QTextEdit):
            return current_widget
        return None

    def get_current_text(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ —Ç–µ–∫—É—â–µ–π –≤–∫–ª–∞–¥–∫–∏"""
        editor = self.get_current_editor()
        if editor:
            return editor.toPlainText()
        return ""

    def set_current_text(self, text):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ —Ç–µ–∫—É—â—É—é –≤–∫–ª–∞–¥–∫—É"""
        editor = self.get_current_editor()
        if editor:
            editor.setPlainText(text)
