#!/usr/bin/env python3
"""
üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã bridge –≤ GopiAI
=======================================

–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞: –≤ webview_chat_widget.py —Å–æ–∑–¥–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω—ã–π WebViewChatBridge,
–≤–º–µ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è JavaScriptBridge –∏–∑ js_bridge.py, —á—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—é
–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º.

–≠—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:
1. –£–¥–∞–ª—è–µ—Ç –¥—É–±–ª–∏—Ä—É—é—â–∏–π WebViewChatBridge
2. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç JavaScriptBridge –∏–∑ js_bridge.py
3. –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å–≤—è–∑—å –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
"""

import os
import shutil
from pathlib import Path

def fix_bridge_issue():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ–º bridge"""
    
    print("üîß Fixing bridge duplication issue...")
    
    # –ü—É—Ç—å –∫ –ø—Ä–æ–±–ª–µ–º–Ω–æ–º—É —Ñ–∞–π–ª—É
    widget_file = Path("GopiAI-UI/gopiai/ui/components/webview_chat_widget.py")
    
    if not widget_file.exists():
        print(f"‚ùå File not found: {widget_file}")
        return False
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_file = widget_file.with_suffix('.py.backup')
    shutil.copy2(widget_file, backup_file)
    print(f"üìÇ Backup created: {backup_file}")
    
    # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    with open(widget_file, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ó–∞–º–µ–Ω—è–µ–º –∏–º–ø–æ—Ä—Ç –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π JavaScriptBridge
    new_content = content.replace(
        "class WebViewChatBridge(QObject):",
        "# WebViewChatBridge —É–¥–∞–ª–µ–Ω - –∏—Å–ø–æ–ª—å–∑—É–µ–º JavaScriptBridge\n# from gopiai.webview.js_bridge import JavaScriptBridge"
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞
    import_section = """
# –ò–º–ø–æ—Ä—Ç JavaScriptBridge
try:
    import sys
    webview_path = Path(__file__).parent.parent.parent.parent / "GopiAI-WebView"
    if webview_path.exists():
        sys.path.insert(0, str(webview_path))
    from gopiai.webview.js_bridge import JavaScriptBridge
    JAVASCRIPT_BRIDGE_AVAILABLE = True
    print("‚úÖ JavaScriptBridge imported successfully")
except ImportError as e:
    JAVASCRIPT_BRIDGE_AVAILABLE = False
    print(f"‚ö†Ô∏è JavaScriptBridge not available: {e}")
"""
    
    # –í—Å—Ç–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç –ø–æ—Å–ª–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
    lines = new_content.split('\n')
    import_end_index = 0
    for i, line in enumerate(lines):
        if line.startswith('import ') or line.startswith('from '):
            import_end_index = i
    
    lines.insert(import_end_index + 1, import_section)
    
    # –ó–∞–º–µ–Ω—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ WebViewChatBridge –Ω–∞ JavaScriptBridge
    new_content = '\n'.join(lines)
    new_content = new_content.replace(
        "self.bridge = WebViewChatBridge(self)",
        "self.bridge = JavaScriptBridge(self) if JAVASCRIPT_BRIDGE_AVAILABLE else None"
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open(widget_file, 'w', encoding='utf-8') as f:
        f.write(new_content)
    
    print(f"‚úÖ Fixed: {widget_file}")
    return True

def fix_imports_in_diagnostic_files():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—É—Ç–∏ –∏–º–ø–æ—Ä—Ç–∞ –≤ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–∞—Ö"""
    
    files_to_fix = [
        "analyze_problems.py",
        "diagnostic.py", 
        "interaction_debug_logger.py"
    ]
    
    for file_path in files_to_fix:
        if not Path(file_path).exists():
            continue
            
        print(f"üîß Fixing imports in {file_path}...")
        
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏
        content = content.replace(
            'GopiAI-WebView/gopiai/webview/webview_bridge.py',
            'GopiAI-WebView/gopiai/webview/js_bridge.py'
        )
        content = content.replace(
            'GopiAI-Extensions/claude_tools/claude_tools_handler.py',
            'GopiAI-UI/gopiai/ui/components/claude_tools_handler.py'
        )
        content = content.replace(
            'GopiAI.GopiAI-WebView.gopiai.webview.webview_bridge',
            'gopiai.webview.js_bridge'
        )
        content = content.replace(
            'GopiAI.GopiAI-Extensions.claude_tools.claude_tools_handler',
            'gopiai.ui.components.claude_tools_handler'
        )
        content = content.replace(
            'from GopiAI.GopiAI-WebView.gopiai.webview.webview_bridge import WebViewBridge',
            'from gopiai.webview.js_bridge import JavaScriptBridge'
        )
        content = content.replace(
            'from GopiAI.GopiAI-Extensions.claude_tools.claude_tools_handler import ClaudeToolsHandler',
            'from gopiai.ui.components.claude_tools_handler import ClaudeToolsHandler'
        )
        
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(content)
        
        print(f"‚úÖ Fixed imports in {file_path}")

def create_fixed_diagnostic():
    """–°–æ–∑–¥–∞–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π diagnostic.py"""
    
    content = '''#!/usr/bin/env python3
"""
ü©∫ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ GopiAI
==================================

–î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—É—Ç—è–º–∏ –∫ —Ñ–∞–π–ª–∞–º.
"""

import sys
import os
from pathlib import Path

def main():
    print("ü©∫ GopiAI System Diagnostic (Fixed)")
    print("=" * 60)
    
    # 1. Python paths
    print("üìÇ Python paths:")
    for path in sys.path:
        print(f"  {path}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—É—Ç—è–º–∏
    modules_to_check = [
        'gopiai.webview.js_bridge',  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
        'gopiai.ui.components.claude_tools_handler',  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
        'PySide6.QtCore',
        'PySide6.QtWebEngineWidgets',
        'PySide6.QtWebChannel'
    ]
    
    print("\\nüì¶ Module imports:")
    for module in modules_to_check:
        try:
            __import__(module)
            print(f"  ‚úÖ {module}")
        except ImportError as e:
            print(f"  ‚ùå {module}: {e}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—É—Ç—è–º–∏
    files_to_check = [
        'GopiAI-UI/gopiai/ui/main.py',
        'GopiAI-WebView/gopiai/webview/js_bridge.py',  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
        'GopiAI-WebView/gopiai/webview/assets/chat.js',
        'GopiAI-UI/gopiai/ui/components/claude_tools_handler.py'  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
    ]
    
    print("\\nüìÑ File existence:")
    for file_path in files_to_check:
        if Path(file_path).exists():
            print(f"  ‚úÖ {file_path}")
        else:
            print(f"  ‚ùå {file_path}")
    
    # 4. Environment variables
    print("\\nüåç Environment variables:")
    env_vars = ['PYTHONPATH', 'QT_LOGGING_RULES', 'PATH']
    for var in env_vars:
        value = os.environ.get(var, 'Not set')
        print(f"  {var}: {value}")
    
    # 5. Qt components
    print("\\nüîß Qt Components:")
    try:
        from PySide6.QtWebEngineWidgets import QWebEngineView
        print("  üåê QtWebEngine: ‚úÖ Available")
    except ImportError:
        print("  üåê QtWebEngine: ‚ùå Not available")
    
    try:
        from PySide6.QtWebChannel import QWebChannel
        print("  üåâ WebChannel: ‚úÖ Available")
    except ImportError:
        print("  üåâ WebChannel: ‚ùå Not available")

if __name__ == "__main__":
    main()
'''
    
    with open("diagnostic_fixed.py", 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ Created: diagnostic_fixed.py")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    
    print("üöÄ GopiAI Bridge Fix Utility")
    print("=" * 60)
    
    try:
        # 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ–º bridge
        if fix_bridge_issue():
            print("‚úÖ Bridge issue fixed")
        
        # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã –≤ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–∞—Ö 
        fix_imports_in_diagnostic_files()
        
        # 3. –°–æ–∑–¥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
        create_fixed_diagnostic()
        
        print("\\nüéâ ALL FIXES APPLIED!")
        print("\\nüìã NEXT STEPS:")
        print("1. Run: python diagnostic_fixed.py")
        print("2. Run: python GopiAI-UI/gopiai/ui/main.py")
        print("3. Test chat functionality")
        
    except Exception as e:
        print(f"‚ùå Error during fix: {e}")
        return False
    
    return True

if __name__ == "__main__":
    main()
'''