"""
–ü—Ä–∏–º–µ—Ä —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è GopiAI Standalone Interface
================================================

–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç, –∫–∞–∫ –ª–µ–≥–∫–æ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.

–≠—Ç–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª—è–µ—Ç:
- –ü–∞–Ω–µ–ª—å –±—ã—Å—Ç—Ä—ã—Ö –∑–∞–º–µ—Ç–æ–∫
- –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
- –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
"""

from PySide6.QtWidgets import (
    QWidget, QVBoxLayout, QHBoxLayout, QTextEdit, 
    QPushButton, QLabel, QListWidget, QLineEdit,
    QListWidgetItem, QMessageBox
)
from PySide6.QtCore import Qt


class QuickNotesWidget(QWidget):
    """–í–∏–¥–∂–µ—Ç –±—ã—Å—Ç—Ä—ã—Ö –∑–∞–º–µ—Ç–æ–∫"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setObjectName("quickNotes")
        self._setup_ui()

    def _setup_ui(self):
        layout = QVBoxLayout(self)
        layout.setContentsMargins(5, 5, 5, 5)
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        header = QLabel("üìù –ë—ã—Å—Ç—Ä—ã–µ –∑–∞–º–µ—Ç–∫–∏")
        header.setObjectName("panelHeader")
        header.setFixedHeight(30)
        layout.addWidget(header)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞ –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
        self.setWindowTitle("üìù –ó–∞–º–µ—Ç–∫–∏")
        
        # –û–±–ª–∞—Å—Ç—å –∑–∞–º–µ—Ç–æ–∫
        self.notes_area = QTextEdit()
        self.notes_area.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –∑–∞–º–µ—Ç–∫–∏ –∑–¥–µ—Å—å...")
        layout.addWidget(self.notes_area, 1)
        
        # –ö–Ω–æ–ø–∫–∏
        buttons_layout = QHBoxLayout()
        save_btn = QPushButton("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
        clear_btn = QPushButton("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å")
        
        save_btn.clicked.connect(self._save_notes)
        clear_btn.clicked.connect(self._clear_notes)
        
        buttons_layout.addWidget(save_btn)
        buttons_layout.addWidget(clear_btn)
        layout.addLayout(buttons_layout)

    def _save_notes(self):
        notes = self.notes_area.toPlainText()
        try:
            with open("quick_notes.txt", "w", encoding="utf-8") as f:
                f.write(notes)
            QMessageBox.information(self, "–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ", "–ó–∞–º–µ—Ç–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ quick_notes.txt")
        except Exception as e:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å: {e}")

    def _clear_notes(self):
        self.notes_area.clear()


class SimpleCalculatorWidget(QWidget):
    """–ü—Ä–æ—Å—Ç–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setObjectName("calculator")
        self._setup_ui()

    def _setup_ui(self):
        layout = QVBoxLayout(self)
        layout.setContentsMargins(5, 5, 5, 5)
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        header = QLabel("üî¢ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä")
        header.setObjectName("panelHeader")
        header.setFixedHeight(30)
        layout.addWidget(header)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞ –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
        self.setWindowTitle("üî¢ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä")
        
        # –ü–æ–ª–µ –≤–≤–æ–¥–∞
        self.expression_input = QLineEdit()
        self.expression_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2+2*3)")
        self.expression_input.returnPressed.connect(self._calculate)
        layout.addWidget(self.expression_input)
        
        # –†–µ–∑—É–ª—å—Ç–∞—Ç
        self.result_label = QLabel("–†–µ–∑—É–ª—å—Ç–∞—Ç: ")
        self.result_label.setStyleSheet("color: #00ff00; font-weight: bold;")
        layout.addWidget(self.result_label)
        
        # –ö–Ω–æ–ø–∫–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è
        calc_btn = QPushButton("= –í—ã—á–∏—Å–ª–∏—Ç—å")
        calc_btn.clicked.connect(self._calculate)
        layout.addWidget(calc_btn)
        
        # –ó–∞–ø–æ–ª–Ω–∏—Ç–µ–ª—å
        layout.addStretch()

    def _calculate(self):
        expression = self.expression_input.text().strip()
        if not expression:
            return
            
        try:
            # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ (—Ç–æ–ª—å–∫–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏)
            allowed_chars = set("0123456789+-*/().^ ")
            if all(c in allowed_chars for c in expression):
                expression = expression.replace("^", "**")  # –°—Ç–µ–ø–µ–Ω—å
                result = eval(expression)
                self.result_label.setText(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            else:
                self.result_label.setText("–û—à–∏–±–∫–∞: –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã")
        except Exception as e:
            self.result_label.setText(f"–û—à–∏–±–∫–∞: {e}")


class TaskListWidget(QWidget):
    """–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setObjectName("taskList")
        self._setup_ui()

    def _setup_ui(self):
        layout = QVBoxLayout(self)
        layout.setContentsMargins(5, 5, 5, 5)
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        header = QLabel("‚úÖ –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á")
        header.setObjectName("panelHeader")
        header.setFixedHeight(30)
        layout.addWidget(header)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞ –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
        self.setWindowTitle("‚úÖ –ó–∞–¥–∞—á–∏")
        
        # –ü–æ–ª–µ –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏
        input_layout = QHBoxLayout()
        self.task_input = QLineEdit()
        self.task_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É...")
        self.task_input.returnPressed.connect(self._add_task)
        
        add_btn = QPushButton("‚ûï")
        add_btn.setFixedSize(30, 30)
        add_btn.clicked.connect(self._add_task)
        
        input_layout.addWidget(self.task_input)
        input_layout.addWidget(add_btn)
        layout.addLayout(input_layout)
        
        # –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
        self.task_list = QListWidget()
        self.task_list.itemDoubleClicked.connect(self._toggle_task)
        layout.addWidget(self.task_list, 1)
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        buttons_layout = QHBoxLayout()
        complete_btn = QPushButton("‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ")
        delete_btn = QPushButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å")
        clear_btn = QPushButton("üßπ –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ")
        
        complete_btn.clicked.connect(self._complete_task)
        delete_btn.clicked.connect(self._delete_task)
        clear_btn.clicked.connect(self._clear_all)
        
        buttons_layout.addWidget(complete_btn)
        buttons_layout.addWidget(delete_btn)
        buttons_layout.addWidget(clear_btn)
        layout.addLayout(buttons_layout)

    def _add_task(self):
        task_text = self.task_input.text().strip()
        if task_text:
            item = QListWidgetItem(f"‚è≥ {task_text}")
            item.setData(Qt.ItemDataRole.UserRole, False)  # –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
            self.task_list.addItem(item)
            self.task_input.clear()

    def _toggle_task(self, item):
        completed = item.data(Qt.ItemDataRole.UserRole)
        task_text = item.text()[2:]  # –£–±–∏—Ä–∞–µ–º –∏–∫–æ–Ω–∫—É
        
        if completed:
            item.setText(f"‚è≥ {task_text}")
            item.setData(Qt.ItemDataRole.UserRole, False)
        else:
            item.setText(f"‚úÖ {task_text}")
            item.setData(Qt.ItemDataRole.UserRole, True)

    def _complete_task(self):
        current_item = self.task_list.currentItem()
        if current_item:
            self._toggle_task(current_item)

    def _delete_task(self):
        current_row = self.task_list.currentRow()
        if current_row >= 0:
            self.task_list.takeItem(current_row)

    def _clear_all(self):
        self.task_list.clear()


def init_productivity_extension(main_window):
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    
    –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–µ –ø–∞–Ω–µ–ª–∏ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:
    - –ë—ã—Å—Ç—Ä—ã–µ –∑–∞–º–µ—Ç–∫–∏
    - –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä  
    - –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
    """
    try:
        # –°–æ–∑–¥–∞–µ–º –≤–∏–¥–∂–µ—Ç—ã
        notes_widget = QuickNotesWidget()
        calc_widget = SimpleCalculatorWidget() 
        tasks_widget = TaskListWidget()
        # –î–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–∞–∫ –≤–∫–ª–∞–¥–∫–∏ –≤ –Ω–∏–∂–Ω–µ–π –ø–∞–Ω–µ–ª–∏
        if hasattr(main_window, 'add_dock_widget'):
            main_window.add_dock_widget("quick_notes", notes_widget, "bottom")
            main_window.add_dock_widget("calculator", calc_widget, "bottom")
            main_window.add_dock_widget("tasks", tasks_widget, "bottom")
            
        print("‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!")
        print("   üìù –ë—ã—Å—Ç—Ä—ã–µ –∑–∞–º–µ—Ç–∫–∏")
        print("   üî¢ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä")
        print("   ‚úÖ –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {e}")
        return False


# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
def auto_init(main_window):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è"""
    return init_productivity_extension(main_window)
