–ø–æ—Å–º–æ—Ç—Ä–∏,#!/usr/bin/env python
# -*- coding: utf-8 -*-
# üìÖ TODO_STUB_SEARCH: –Ω–∞–π—Ç–∏ –∫–æ–º–∞–Ω–¥–æ–π grep -r 'TODO_STUB' .

###############################################################
#                                                           #
#   –í–ù–ò–ú–ê–ù–ò–ï!                                               #
#   –≠—Ç–æ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π main window –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è GopiAI!           #
#   –ù–ï –î–û–ë–ê–í–õ–Ø–¢–¨ —Å—é–¥–∞ –Ω–∏–∫–∞–∫–∏–µ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã,            #
#   –¥–µ–∫–æ—Ä–∞—Ü–∏–∏, —Ä–∞–º–∫–∏, –∞–Ω–∏–º–∞—Ü–∏–∏, –ø–ª–∞–≤–∞—é—â–∏–µ –æ–∫–Ω–∞ –∏ —Ç.–¥.!       #
#   –í—Å—ë –∫—Ä–∞—Å–∏–≤–æ–µ ‚Äî —Ç–æ–ª—å–∫–æ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏!                #
#   –ó–¥–µ—Å—å ‚Äî —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –∏ –º–∏–Ω–∏–º—É–º UI!              #
#                                                           #
#   –ï—Å–ª–∏ —Ö–æ—á–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –∫—Ä–∞—Å–æ—Ç—É ‚Äî —Å–º. assets/decorative_layers.py #
#                                                           #
#   –ù–∞—Ä—É—à–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –ø—Ä–∞–≤–∏–ª–∞ = üê∞ –±—É–¥–µ—Ç –≥—Ä—É—Å—Ç–∏—Ç—å!              #
###############################################################

"""
–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è GopiAI.
–°–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ, —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –∏ –º–µ–Ω—é –§–∞–π–ª —Å –ø—É–Ω–∫—Ç–∞–º–∏ –û—Ç–∫—Ä—ã—Ç—å –∏ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç frameless –æ–∫–Ω–æ —Å–æ —Å–≤–æ–µ–π –ø–∞–Ω–µ–ª—å—é –∑–∞–≥–æ–ª–æ–≤–∫–∞.

–ú–æ–¥—É–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –∏–º–ø–æ—Ä—Ç–∞–º–∏ –¥–ª—è GopiAI-Core.
"""

from gopiai.core.logging import get_logger
logger = get_logger().logger
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –¥—Ä—É–≥–∏–º –º–æ–¥—É–ª—è–º GopiAI
current_dir = os.path.dirname(os.path.abspath(__file__))
gopi_modules_dir = os.path.join(current_dir, "..", "..", "..", "..")
assets_path = os.path.join(gopi_modules_dir, "GopiAI-Assets")
widgets_path = os.path.join(gopi_modules_dir, "GopiAI-Widgets")

if os.path.exists(assets_path) and assets_path not in sys.path:
    sys.path.insert(0, assets_path)
if os.path.exists(widgets_path) and widgets_path not in sys.path:
    sys.path.insert(0, widgets_path)

from PySide6.QtCore import Qt, QEvent, Signal
from PySide6.QtGui import QPixmap, QIcon
from PySide6.QtWidgets import (
    QApplication,
    QMainWindow,
    QVBoxLayout,
    QWidget,
    QFileDialog,
    QMessageBox,
    QMenu,
    QSizePolicy,
    QDialog,
    QColorDialog,
    QTabWidget,
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —É–∂–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ unified logging system
logger = get_logger().logger

# üöß –ó–ê–ì–õ–£–®–ö–ê! TODO_STUB: –¢—Ä–µ–±—É–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
# –§—É–Ω–∫—Ü–∏—è-–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∏–∫–æ–Ω–æ–∫
def get_icon_placeholder(icon_name):
    # üöß –ó–ê–ì–õ–£–®–ö–ê! TODO_STUB: –î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞
    """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∫–æ–Ω–æ–∫."""
    logger.info(f"–ó–∞–ø—Ä–æ—à–µ–Ω–∞ –∏–∫–æ–Ω–∫–∞: {icon_name}")
    return QIcon()

ICONS_AVAILABLE = False
get_icon = get_icon_placeholder

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ç–µ–º —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –º–æ–¥—É–ª—å–Ω—ã–º–∏ –ø—É—Ç—è–º–∏
try:
    from gopiai.core.simple_theme_manager import (
        choose_theme_dialog,
        apply_theme,
        load_theme,
        _is_light,
    )
    logger.info("–ó–∞–≥—Ä—É–∂–µ–Ω ThemeManager –∏–∑ gopiai.core.simple_theme_manager")
except ImportError as e:
    logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å ThemeManager: {e}")
    # –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π —Ç–µ–º
    def choose_theme_dialog(app):
        return None
    def apply_theme(app):
        pass
    def load_theme():
        return {}
    def _is_light(color):
        return True

try:
    # –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑ –º–æ–¥—É–ª—è assets
    sys.path.insert(0, os.path.join(gopi_modules_dir, "GopiAI-Assets"))
    from gopiai.assets.titlebar_with_menu import TitlebarWithMenu
    logger.info("–ó–∞–≥—Ä—É–∂–µ–Ω TitlebarWithMenu –∏–∑ gopiai.assets")
except ImportError as e:
    logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å TitlebarWithMenu: {e}")
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –∑–∞–≥–ª—É—à–∫—É –¥–ª—è titlebar
    from PySide6.QtWidgets import QWidget, QHBoxLayout, QLabel, QPushButton, QMenuBar
    
    class TitlebarWithMenu(QWidget):
        def __init__(self, parent=None):
            super().__init__(parent)
            # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è titlebar
            layout = QHBoxLayout()
            title_label = QLabel("GopiAI v0.2.0")
            layout.addWidget(title_label)
            layout.addStretch()
            self.setLayout(layout)
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π menubar
            self.menubar = QMenuBar(self)
            
        def set_window(self, window):
            # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è set_window
            pass

try:
    from gopiai.widgets.custom_grips.custom_grips import CustomGrip
    logger.info("–ó–∞–≥—Ä—É–∂–µ–Ω—ã CustomGrip –∏–∑ gopiai.widgets")
except ImportError as e:
    logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å CustomGrip: {e}")
    # üöß –ó–ê–ì–õ–£–®–ö–ê! TODO_STUB: –¢—Ä–µ–±—É–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
    # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –≥—Ä–∏–ø–æ–≤
    class CustomGrip:
        def __init__(self, parent, edge):
            pass
        def setGeometry(self, x, y, w, h):
            pass
        def raise_(self):
            pass

try:
    from gopiai.widgets.core.text_editor import TextEditorWidget
    logger.info("–ó–∞–≥—Ä—É–∂–µ–Ω TextEditorWidget –∏–∑ gopiai.widgets")
except ImportError as e:
    logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å TextEditorWidget: {e}")
    raise

try:
    from gopiai.core.icon_adapter import IconAdapter
    logger.info("–ó–∞–≥—Ä—É–∂–µ–Ω IconAdapter –∏–∑ gopiai.core")
except ImportError as e:
    logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å IconAdapter: {e}")
    # üöß –ó–ê–ì–õ–£–®–ö–ê! TODO_STUB: –¢—Ä–µ–±—É–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
    # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è IconAdapter
    class IconAdapter:
        @staticmethod
        def instance():
            return None


# --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è base64 -> QPixmap ---
def base64_to_pixmap(base64_str):
    try:
        cleaned_base64 = (
            base64_str.replace("\n", "")
            .replace("\r", "")
            .replace(" ", "")
            .replace("\t", "")
        )
        if not cleaned_base64:
            logger.error("–ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ base64 –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏")
            return QPixmap()
        import base64

        image_data = base64.b64decode(cleaned_base64)
        pixmap = QPixmap()
        success = pixmap.loadFromData(image_data)
        if not success or pixmap.isNull():
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ QPixmap")
            return QPixmap()
        return pixmap
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ base64 –≤ QPixmap: {e}")
        return QPixmap()


# --- FramelessMainWindow ---
class FramelessMainWindow(QMainWindow):
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–º–µ–Ω–µ —Ç–µ–º—ã
    theme_changed = Signal(dict)  # –°–∏–≥–Ω–∞–ª –ø–µ—Ä–µ–¥–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ —Ç–µ–º—ã

    def __init__(self):
        super().__init__(None, Qt.WindowType.FramelessWindowHint)
        self.setObjectName("framelessMainWindow")
        self.setMinimumSize(700, 520)  # –µ—â—ë –±–æ–ª—å—à–µ
        self.resize(1200, 800)  # –µ—â—ë –±–æ–ª—å—à–µ
        self.setSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Expanding)
        
        # –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è IconAdapter
        try:
            self.icon_manager = IconAdapter.instance()
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å IconAdapter: {e}")
            self.icon_manager = None
            
        self.TITLEBAR_HEIGHT = 40  # –í—ã—Å–æ—Ç–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö

        # --- –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≥–ª–∞–≤–Ω—ã–π –≤–∏–¥–∂–µ—Ç-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤—Å–µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ ---
        self.main_container = QWidget(self)
        self.main_container.setObjectName("mainContainer")
        self.main_layout = QVBoxLayout(self.main_container)
        self.main_layout.setContentsMargins(
            24, 0, 24, 24
        )  # —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ –≤–Ω–µ—à–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã
        self.main_layout.setSpacing(0)
        self.setCentralWidget(self.main_container)

        # --- Titlebar –≤–≤–µ—Ä—Ö—É —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º –ø–æ–≤–µ—Ä—Ö –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ ---
        self.titlebar_with_menu = TitlebarWithMenu(self)
        self.titlebar_with_menu.set_window(self)
        self.titlebar_with_menu.setFixedHeight(self.TITLEBAR_HEIGHT)
        self.titlebar_with_menu.setObjectName("titlebarWithMenu")

        # --- –î–µ–ª–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–º –≤–∏–¥–∂–µ—Ç–æ–º –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏—è ---
        # –û–Ω –Ω–µ –±—É–¥–µ—Ç —á–∞—Å—Ç—å—é –≥–ª–∞–≤–Ω–æ–≥–æ layout, –∞ –±—É–¥–µ—Ç –≤—Å–µ–≥–¥–∞ –ø–æ–≤–µ—Ä—Ö —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        self.titlebar_with_menu.setParent(self)
        self.titlebar_with_menu.move(0, 0)
        self.titlebar_with_menu.resize(self.width(), self.TITLEBAR_HEIGHT)
        self.titlebar_with_menu.show()
        self.titlebar_with_menu.raise_()  # –ü–æ–¥–Ω–∏–º–∞–µ–º –ø–æ–≤–µ—Ä—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –≤–∏–¥–∂–µ—Ç–æ–≤

        # --- –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–∑–∞–Ω–∏–º–∞–µ—Ç –≤—Å–µ –º–µ—Å—Ç–æ, –Ω–∞—á–∏–Ω–∞—è —Å –æ—Ç—Å—Ç—É–ø–∞ –ø–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º) ---
        self.content_widget = QWidget(self.main_container)
        self.content_widget.setObjectName("contentWidget")
        self.content_layout = QVBoxLayout(self.content_widget)
        self.content_layout.setContentsMargins(0, 0, 0, 0)
        self.content_layout.setSpacing(0)
        self.main_layout.addWidget(self.content_widget, 1)  # –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ä–∞—Å—Ç—è–∂–µ–Ω–∏—è 1

        # --- Tab workspace (—Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç) ---
        self.tab_widget = QTabWidget(self.content_widget)
        self.tab_widget.setTabsClosable(True)
        self.tab_widget.tabCloseRequested.connect(self.close_tab)
        self.tab_widget.tabBar().setMovable(True)
        self.content_layout.addWidget(self.tab_widget)

        # --- –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ –¥–æ–∫-–≤–∏–¥–∂–µ—Ç–æ–≤ –∫–∞–∫ –≤ VS Code ---
        self.setDockOptions(
            QMainWindow.DockOption.AnimatedDocks
            | QMainWindow.DockOption.AllowNestedDocks
            | QMainWindow.DockOption.AllowTabbedDocks
            | QMainWindow.DockOption.GroupedDragging
        )
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –¥–æ–∫–æ–≤ –∫ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–º—É –≤–∏–¥–∂–µ—Ç—É
        # –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –æ–∫–æ–Ω –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –æ–∫–Ω—É —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        self.setDockNestingEnabled(True)
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∞—Ä–∂—É –¥–ª—è –≤—Å–µ—Ö –≤–∏–¥–∂–µ—Ç–æ–≤ –≤ –≥–ª–∞–≤–Ω–æ–º –æ–∫–Ω–µ, —á—Ç–æ–±—ã –æ–Ω–∏ –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫
        self.setContentsMargins(
            20, self.TITLEBAR_HEIGHT + 8, 20, 20
        )  # —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ –≤–Ω–µ—à–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã –¥–ª—è –≤—Å–µ–≥–æ –æ–∫–Ω–∞
        
        # --- –û—Ç–∫—Ä—ã—Ç—å –ø–µ—Ä–≤—É—é –≤–∫–ª–∞–¥–∫—É ---
        self.open_text_editor()
        
        # --- Drag support ---
        self._drag_active = False
        self._drag_pos = None
        
        # --- –ú–µ–Ω—é: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã ---
        self._connect_theme_menu()
        self._apply_tab_theme()
        
        # --- –§–∞–π–ª: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ ---
        self._connect_file_menu()
        
        # --- –ü—Ä–∞–≤–∫–∞: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ ---
        self._connect_edit_menu()
        
        # --- Resize grips ---
        self._init_grips()
        
        # --- –ù–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã –º–µ–Ω—é '–í–∏–¥' ---
        self._connect_view_menu()

    def _connect_file_menu(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ –º–µ–Ω—é '–§–∞–π–ª'."""
        try:
            menubar = self.titlebar_with_menu.menubar
            menubar.newFileRequested.connect(self._menu_new_file)
            menubar.openFileRequested.connect(self._menu_open_file)
            menubar.openFolderRequested.connect(self._menu_open_folder)
            menubar.saveRequested.connect(self._menu_save)
            menubar.saveAsRequested.connect(self._menu_save_as)
            menubar.exitRequested.connect(self.close)
            menubar.openTextEditorRequested.connect(self.open_text_editor)
            logger.info("–ü–æ–¥–∫–ª—é—á–µ–Ω—ã —Å–∏–≥–Ω–∞–ª—ã –º–µ–Ω—é '–§–∞–π–ª'")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –º–µ–Ω—é '–§–∞–π–ª': {e}")

    def _connect_edit_menu(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ –º–µ–Ω—é '–ü—Ä–∞–≤–∫–∞'."""
        try:
            menubar = self.titlebar_with_menu.menubar
            menubar.undo_action.triggered.connect(self._menu_undo)
            menubar.redo_action.triggered.connect(self._menu_redo)
            menubar.cut_action.triggered.connect(self._menu_cut)
            menubar.copy_action.triggered.connect(self._menu_copy)
            menubar.paste_action.triggered.connect(self._menu_paste)
            menubar.delete_action.triggered.connect(self._menu_delete)
            menubar.select_all_action.triggered.connect(self._menu_select_all)
            logger.info("–ü–æ–¥–∫–ª—é—á–µ–Ω—ã —Å–∏–≥–Ω–∞–ª—ã –º–µ–Ω—é '–ü—Ä–∞–≤–∫–∞'")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –º–µ–Ω—é '–ü—Ä–∞–≤–∫–∞': {e}")

    def _connect_view_menu(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ –º–µ–Ω—é '–í–∏–¥'."""
        try:
            menubar = self.titlebar_with_menu.menubar
            menubar.openProjectExplorerRequested.connect(self._menu_open_project_explorer)
            menubar.openChatRequested.connect(self._menu_open_chat)
            menubar.openBrowserRequested.connect(self._menu_open_browser)
            menubar.openTerminalRequested.connect(self._menu_open_terminal)
            logger.info("–ü–æ–¥–∫–ª—é—á–µ–Ω—ã —Å–∏–≥–Ω–∞–ª—ã –º–µ–Ω—é '–í–∏–¥'")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –º–µ–Ω—é '–í–∏–¥': {e}")

    def _connect_theme_menu(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã."""
        try:
            # –ù–∞—Ö–æ–¥–∏–º –ø—É–Ω–∫—Ç '–¢–µ–º–∞' –≤ –º–µ–Ω—é '–í–∏–¥' –∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º –∫ –Ω–µ–º—É choose_theme_dialog
            menubar = self.titlebar_with_menu.menubar
            for action in menubar.actions():
                menu = action.menu()
                if menu and isinstance(menu, QMenu) and menu.title() == "–í–∏–¥":
                    for subaction in menu.actions():
                        if subaction.text() == "–¢–µ–º–∞":
                            subaction.triggered.connect(self._show_theme_dialog)
                            logger.info("–ü–æ–¥–∫–ª—é—á–µ–Ω –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã")
                            return
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –¥–∏–∞–ª–æ–≥–∞ —Ç–µ–º—ã: {e}")

    def _apply_tab_theme(self):
        """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã –∫ –≤–∫–ª–∞–¥–∫–∞–º."""
        try:
            theme = load_theme() or {}
            tab_color = theme.get("control_color") or theme.get("header_color") or "#cccccc"
            active_color = theme.get("accent_color") or tab_color
            border_color = theme.get("border_color") or tab_color

            def get_tab_text_color(bg):
                try:
                    return "#222" if _is_light(bg) else "#fff"
                except Exception:
                    return "#222"

            text_color = get_tab_text_color(tab_color)
            active_text_color = get_tab_text_color(active_color)
            
            self.tab_widget.setStyleSheet(
                f"""
                QTabBar::tab {{
                    background: {tab_color};
                    color: {text_color};
                    border: 1px solid {border_color};
                    padding: 6px 16px;
                    border-top-left-radius: 8px;
                    border-top-right-radius: 8px;
                    margin-right: 2px;
                }}
                QTabBar::tab:selected {{
                    background: {active_color};
                    color: {active_text_color};
                    border: 1px solid {border_color};
                }}
                QTabWidget::pane {{
                    border: 1px solid {border_color};
                    border-radius: 8px;
                    top: -1px;
                }}
            """
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ —Ç–µ–º—ã –∫ –≤–∫–ª–∞–¥–∫–∞–º: {e}")

    def _show_theme_dialog(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã."""
        try:
            app = QApplication.instance()
            theme_data = choose_theme_dialog(app)
            self._apply_tab_theme()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç–µ–º—ã –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º
            if theme_data:
                self.theme_changed.emit(theme_data)
            else:
                # –ï—Å–ª–∏ theme_data –Ω–µ –±—ã–ª–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞, –∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â—É—é —Ç–µ–º—É
                current_theme = load_theme() or {}
                self.theme_changed.emit(current_theme)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –¥–∏–∞–ª–æ–≥–∞ —Ç–µ–º—ã: {e}")

    def open_text_editor(self, filename=None):
        """–û—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ."""
        try:
            editor = TextEditorWidget(self)
            idx = self.tab_widget.addTab(editor, filename or "–ù–æ–≤—ã–π —Ñ–∞–π–ª")
            self.tab_widget.setCurrentIndex(idx)

            def update_tab_name(name):
                self.tab_widget.setTabText(idx, name)

            editor.file_name_changed.connect(update_tab_name)
            logger.info(f"–û—Ç–∫—Ä—ã—Ç –Ω–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä: {filename or '–ù–æ–≤—ã–π —Ñ–∞–π–ª'}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä:\n{e}")

    def close_tab(self, index):
        """–ó–∞–∫—Ä—ã—Ç—å –≤–∫–ª–∞–¥–∫—É –ø–æ –∏–Ω–¥–µ–∫—Å—É."""
        try:
            widget = self.tab_widget.widget(index)
            self.tab_widget.removeTab(index)
            if widget:
                widget.deleteLater()
            logger.info(f"–ó–∞–∫—Ä—ã—Ç–∞ –≤–∫–ª–∞–¥–∫–∞ —Å –∏–Ω–¥–µ–∫—Å–æ–º: {index}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –≤–∫–ª–∞–¥–∫–∏: {e}")

    def update_title(self, filename=None):
        """–û–±–Ω–æ–≤–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞."""
        try:
            if filename:
                self.titlebar_with_menu.update_title(filename)
            else:
                self.titlebar_with_menu.update_title("GopiAI - –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞: {e}")

    def maximize_window(self):
        """–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –æ–∫–Ω–æ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω."""
        self.titlebar_with_menu.maximize_window()

    def restore_window(self):
        """–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞."""
        self.titlebar_with_menu.restore_window()

    def _init_grips(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∏–ø–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞."""
        try:
            self._grip_top = CustomGrip(self, Qt.Edge.TopEdge)
            self._grip_bottom = CustomGrip(self, Qt.Edge.BottomEdge)
            self._grip_left = CustomGrip(self, Qt.Edge.LeftEdge)
            self._grip_right = CustomGrip(self, Qt.Edge.RightEdge)
            self._update_grips()
            logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –≥—Ä–∏–ø—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞")
        except Exception as e:
            logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≥—Ä–∏–ø–æ–≤: {e}")

    def _update_grips(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –≥—Ä–∏–ø–æ–≤."""
        try:
            GRIP_SIZE = 10
            w, h = self.width(), self.height()
            
            self._grip_top.setGeometry(0, 0, w, GRIP_SIZE)
            self._grip_bottom.setGeometry(0, h - GRIP_SIZE, w, GRIP_SIZE)
            self._grip_left.setGeometry(0, 0, GRIP_SIZE, h)
            self._grip_right.setGeometry(w - GRIP_SIZE, 0, GRIP_SIZE, h)  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—à–∏–±–∫–∞
            
            self._grip_top.raise_()
            self._grip_bottom.raise_()
            self._grip_left.raise_()
            self._grip_right.raise_()
        except Exception as e:
            logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≥—Ä–∏–ø–æ–≤: {e}")

    def changeEvent(self, event):
        if event.type() == QEvent.Type.WindowStateChange:
            if self.isMaximized():
                self.titlebar_with_menu.maximize_window()
            else:
                self.titlebar_with_menu.restore_window()
            # –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–∫–Ω–∞ —É–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Å—Ç–∞—ë—Ç—Å—è –ø–æ–≤–µ—Ä—Ö —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
            self.titlebar_with_menu.raise_()
        super().changeEvent(event)

    def showEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –ø–æ–∫–∞–∑–∞ –æ–∫–Ω–∞."""
        super().showEvent(event)
        # –ü—Ä–∏ –∫–∞–∂–¥–æ–º –ø–æ–∫–∞–∑–µ –æ–∫–Ω–∞ –ø–æ–¥–Ω–∏–º–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ–≤–µ—Ä—Ö –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –≤–∏–¥–∂–µ—Ç–æ–≤
        self.titlebar_with_menu.raise_()

    def addDockWidget(self, area, dock_widget, orientation=Qt.Orientation.Horizontal):
        """–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è dock-–≤–∏–¥–∂–µ—Ç–æ–≤."""
        # –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
        super().addDockWidget(area, dock_widget, orientation)

        # –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤–∏–¥–∂–µ—Ç –≤ –≤–µ—Ä—Ö–Ω—é—é –æ–±–ª–∞—Å—Ç—å, —É–±–µ–¥–∏–º—Å—è, —á—Ç–æ –æ–Ω –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫
        if area == Qt.DockWidgetArea.TopDockWidgetArea:
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É –¥–ª—è dock-–≤–∏–¥–∂–µ—Ç–∞, —á—Ç–æ–±—ã –æ–Ω –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–ª –∑–∞–≥–æ–ª–æ–≤–æ–∫
            dock_widget.setContentsMargins(0, self.TITLEBAR_HEIGHT, 0, 0)

        # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Å—Ç–∞—ë—Ç—Å—è –ø–æ–≤–µ—Ä—Ö
        self.titlebar_with_menu.raise_()

    def _menu_new_file(self):
        """–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ñ–∞–π–ª."""
        self.open_text_editor()

    def _menu_open_file(self):
        """–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª."""
        try:
            editor = self._get_current_editor()
            if editor:
                editor.open_file()
            else:
                QMessageBox.warning(
                    self, "–û—à–∏–±–∫–∞", "–¢–µ–∫—É—â–∞—è –≤–∫–ª–∞–¥–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞."
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–∞–π–ª–∞: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–∞–π–ª–∞:\n{e}")

    def _menu_open_folder(self):
        """–û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É."""
        try:
            folder = QFileDialog.getExistingDirectory(self, "–û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É")
            if folder:
                QMessageBox.information(
                    self, "–ü–∞–ø–∫–∞ –≤—ã–±—Ä–∞–Ω–∞", f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–∞–ø–∫—É:\n{folder}"
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–∞–ø–∫–∏: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–∞–ø–∫–∏:\n{e}")

    def _menu_save(self):
        """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª."""
        try:
            editor = self._get_current_editor()
            if editor:
                editor.save_file()
            else:
                QMessageBox.warning(
                    self, "–û—à–∏–±–∫–∞", "–¢–µ–∫—É—â–∞—è –≤–∫–ª–∞–¥–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞."
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞:\n{e}")

    def _menu_save_as(self):
        """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª –∫–∞–∫."""
        try:
            editor = self._get_current_editor()
            if editor:
                editor.save_file_as()
            else:
                QMessageBox.warning(
                    self, "–û—à–∏–±–∫–∞", "–¢–µ–∫—É—â–∞—è –≤–∫–ª–∞–¥–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–∞–∫."
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –∫–∞–∫: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –∫–∞–∫:\n{e}")

    def _get_current_editor(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ä–µ–¥–∞–∫—Ç–æ—Ä.

        Returns:
            TextEditorWidget or None: –¢–µ–∫—É—â–∏–π —Ä–µ–¥–∞–∫—Ç–æ—Ä, –µ—Å–ª–∏ –æ–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–µ—Ç–æ–¥—ã.
        """
        widget = self.tab_widget.currentWidget()
        if widget is not None and isinstance(widget, TextEditorWidget):
            return widget
        return None

    def resizeEvent(self, event):
        super().resizeEvent(event)
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–µ grip-–≤–∏–¥–∂–µ—Ç–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        self._update_grips()

        # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä –∏ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        self.titlebar_with_menu.resize(self.width(), self.TITLEBAR_HEIGHT)
        self.titlebar_with_menu.move(0, 0)

        # –ü–æ–¥–Ω–∏–º–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ–≤–µ—Ä—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –≤–∏–¥–∂–µ—Ç–æ–≤
        self.titlebar_with_menu.raise_()

    def _menu_undo(self):
        """–û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ."""
        try:
            editor = self._get_current_editor()
            if editor:
                editor.undo()
            else:
                QMessageBox.warning(
                    self, "–û—à–∏–±–∫–∞", "–¢–µ–∫—É—â–∞—è –≤–∫–ª–∞–¥–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ—Ç–º–µ–Ω—É –¥–µ–π—Å—Ç–≤–∏—è."
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –¥–µ–π—Å—Ç–≤–∏—è: {e}")

    def _menu_redo(self):
        """–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ."""
        try:
            editor = self._get_current_editor()
            if editor:
                editor.redo()
            else:
                QMessageBox.warning(
                    self, "–û—à–∏–±–∫–∞", "–¢–µ–∫—É—â–∞—è –≤–∫–ª–∞–¥–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è."
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–µ –¥–µ–π—Å—Ç–≤–∏—è: {e}")

    def _menu_cut(self):
        """–í—ã—Ä–µ–∑–∞—Ç—å."""
        try:
            editor = self._get_current_editor()
            if editor:
                editor.cut()
            else:
                QMessageBox.warning(
                    self, "–û—à–∏–±–∫–∞", "–¢–µ–∫—É—â–∞—è –≤–∫–ª–∞–¥–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—ã—Ä–µ–∑–∞–Ω–∏–µ."
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ä–µ–∑–∞–Ω–∏–∏: {e}")

    def _menu_copy(self):
        """–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å."""
        try:
            editor = self._get_current_editor()
            if editor:
                editor.copy()
            else:
                QMessageBox.warning(
                    self, "–û—à–∏–±–∫–∞", "–¢–µ–∫—É—â–∞—è –≤–∫–ª–∞–¥–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ."
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")

    def _menu_paste(self):
        """–í—Å—Ç–∞–≤–∏—Ç—å."""
        try:
            editor = self._get_current_editor()
            if editor:
                editor.paste()
            else:
                QMessageBox.warning(
                    self, "–û—à–∏–±–∫–∞", "–¢–µ–∫—É—â–∞—è –≤–∫–ª–∞–¥–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å—Ç–∞–≤–∫—É."
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ: {e}")

    def _menu_delete(self):
        """–£–¥–∞–ª–∏—Ç—å."""
        try:
            editor = self._get_current_editor()
            if editor:
                editor.delete()
            else:
                QMessageBox.warning(
                    self, "–û—à–∏–±–∫–∞", "–¢–µ–∫—É—â–∞—è –≤–∫–ª–∞–¥–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ."
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {e}")

    def _menu_select_all(self):
        """–í—ã–¥–µ–ª–∏—Ç—å –≤—Å—ë."""
        try:
            editor = self._get_current_editor()
            if editor:
                editor.select_all()
            else:
                QMessageBox.warning(
                    self,
                    "–û—à–∏–±–∫–∞",
                    "–¢–µ–∫—É—â–∞—è –≤–∫–ª–∞–¥–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—ã–¥–µ–ª–µ–Ω–∏–µ –≤—Å–µ–≥–æ —Ç–µ–∫—Å—Ç–∞.",
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–µ–ª–µ–Ω–∏–∏ –≤—Å–µ–≥–æ: {e}")

    def _menu_open_project_explorer(self):
        """–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–µ–∫—Ç-—ç–∫—Å–ø–ª–æ—Ä–µ—Ä."""
        try:
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç-—ç–∫—Å–ø–ª–æ—Ä–µ—Ä —Å –º–æ–¥—É–ª—å–Ω—ã–º –ø—É—Ç–µ–º
            from gopiai.extensions.project_explorer_integration import (
                add_project_explorer_dock,
            )
            add_project_explorer_dock(self)
        except ImportError as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ–µ–∫—Ç-—ç–∫—Å–ø–ª–æ—Ä–µ—Ä: {e}")
            QMessageBox.warning(
                self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ–µ–∫—Ç-—ç–∫—Å–ø–ª–æ—Ä–µ—Ä: {str(e)}"
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø—Ä–æ–µ–∫—Ç-—ç–∫—Å–ø–ª–æ—Ä–µ—Ä–∞: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø—Ä–æ–µ–∫—Ç-—ç–∫—Å–ø–ª–æ—Ä–µ—Ä–∞:\n{e}")

    def _menu_open_chat(self):
        """–û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç."""
        try:
            from gopiai.extensions import init_chat_extension
            init_chat_extension(self)
        except ImportError as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —á–∞—Ç-—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ: {e}")
            QMessageBox.warning(
                self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —á–∞—Ç-—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ: {str(e)}"
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —á–∞—Ç–∞: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —á–∞—Ç–∞:\n{e}")

    def _menu_open_browser(self):
        """–û—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä."""
        try:
            from gopiai.extensions import connect_browser_menu
            connect_browser_menu(self)
        except ImportError as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞: {e}")
            QMessageBox.warning(
                self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞: {str(e)}"
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞:\n{e}")

    def _menu_open_terminal(self):
        """–û—Ç–∫—Ä—ã—Ç—å —Ç–µ—Ä–º–∏–Ω–∞–ª."""
        try:
            from gopiai.extensions import init_terminal_extension
            init_terminal_extension(self)
        except ImportError as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞: {e}")
            QMessageBox.warning(
                self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞: {str(e)}"
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞:\n{e}")


# --- UI –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã –∏ –∞–∫—Ü–µ–Ω—Ç–∞ ---
class FramelessColorDialog(QColorDialog):
    def __init__(self, initial, parent=None):
        super().__init__(initial, parent)
        self.setWindowFlags(self.windowFlags() | Qt.WindowType.FramelessWindowHint)
        self._drag_active = False
        self._drag_pos = None

    def mousePressEvent(self, event):
        if event.button() == Qt.MouseButton.LeftButton:
            self._drag_active = True
            self._drag_pos = (
                event.globalPosition().toPoint() - self.frameGeometry().topLeft()
            )
            event.accept()
        super().mousePressEvent(event)

    def mouseMoveEvent(self, event):
        if self._drag_active and event.buttons() & Qt.MouseButton.LeftButton:
            self.move(event.globalPosition().toPoint() - self._drag_pos)
            event.accept()
        super().mouseMoveEvent(event)

    def mouseReleaseEvent(self, event):
        if event.button() == Qt.MouseButton.LeftButton:
            self._drag_active = False
        super().mouseReleaseEvent(event)


def get_frameless_color_dialog(initial, parent, title):
    """–°–æ–∑–¥–∞—Ç—å –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞ –±–µ–∑ —Ä–∞–º–∫–∏."""
    dlg = FramelessColorDialog(initial, parent)
    dlg.setWindowTitle(title)
    dlg.setOption(QColorDialog.ColorDialogOption.ShowAlphaChannel, False)
    if dlg.exec() == QDialog.DialogCode.Accepted:
        return dlg.selectedColor()
    return initial


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã."""
    app = QApplication(sys.argv)
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    try:
        apply_theme(app)
        logger.info("–ü—Ä–∏–º–µ–Ω–µ–Ω–∞ —Ç–µ–º–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ")
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–µ–º—É –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
    
    # –°–æ–∑–¥–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
    main_window = FramelessMainWindow()
    main_window.show()
    
    # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
    try:
        from gopiai.extensions import init_all_extensions
        init_all_extensions(main_window)
        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –≤—Å–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è")
    except ImportError as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è: {str(e)}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π: {e}")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–µ—Ä–µ–¥ –±–ª–æ–∫–æ–º try
    exec_result = 1
    try:
        exec_result = app.exec()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ —Å–æ–±—ã—Ç–∏–π: {e}")
        exec_result = 1
    finally:
        sys.exit(exec_result)


if __name__ == "__main__":
    try:
        main()
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)