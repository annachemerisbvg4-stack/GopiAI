#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç RAG —Å–∏—Å—Ç–µ–º—ã GopiAI
"""
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ RAG —Å–∏—Å—Ç–µ–º–µ
current_dir = Path(__file__).parent
rag_path = current_dir / "rag_memory_system"
sys.path.insert(0, str(rag_path))

def test_imports():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ RAG —Å–∏—Å—Ç–µ–º—ã"""
    try:
        print("üîç Testing imports...")
        from models import ConversationSession, MessageRole, SearchResult
        print("‚úÖ Models imported successfully")
        
        from memory_manager import RAGMemoryManager
        print("‚úÖ RAGMemoryManager imported successfully")
        
        from api import start_server, app
        print("‚úÖ API imported successfully")
        
        return True
    except Exception as e:
        print(f"‚ùå Import error: {e}")
        return False

def test_memory_manager():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è memory manager"""
    try:
        print("\nüß† Testing memory manager...")
        from memory_manager import RAGMemoryManager
        
        manager = RAGMemoryManager()
        print("‚úÖ RAGMemoryManager created successfully")
        
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏
        session = manager.create_session("Test Session", "GopiAI-Test", ["test", "integration"])
        print(f"‚úÖ Session created: {session.session_id}")
        
        # –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
        from models import MessageRole
        message = manager.add_message(session.session_id, MessageRole.USER, "Hello RAG system")
        print(f"‚úÖ Message added: {message.id}")
        
        # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞
        results = manager.search_conversations("RAG system", 3)
        print(f"‚úÖ Search completed: {len(results)} results")
        
        return True
    except Exception as e:
        print(f"‚ùå Memory manager error: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_server_start():
    """–¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
    try:
        print("\nüöÄ Testing server start...")
        from api import app
        print("‚úÖ FastAPI app created successfully")
        
        # –ù–µ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä, —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω
        print("‚úÖ Server ready to start")
        return True
    except Exception as e:
        print(f"‚ùå Server error: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üß™ GopiAI RAG System Test")
    print("=" * 40)
    
    success = True
    
    # –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤
    if not test_imports():
        success = False
    
    # –¢–µ—Å—Ç memory manager
    if not test_memory_manager():
        success = False
    
    # –¢–µ—Å—Ç —Å–µ—Ä–≤–µ—Ä–∞
    if not test_server_start():
        success = False
    
    print("\n" + "=" * 40)
    if success:
        print("üéâ All tests passed! RAG system is ready.")
        print("üí° To start the server: python start_rag_server.py")
    else:
        print("‚ùå Some tests failed. Check the errors above.")
    
    print("üîö Test completed.")