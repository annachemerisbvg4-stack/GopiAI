{
  "projectName": "ModelSwitchRefactor",
  "projectDescription": "Refactor backend and frontend to support stable provider switching between Gemini and OpenRouter",
  "lastTaskId": 4,
  "tasks": [
    {
      "id": 1,
      "title": "Project Setup: ModelSwitchRefactor",
      "description": "Refactor backend and frontend to support stable provider switching between Gemini and OpenRouter",
      "status": "todo",
      "priority": 700,
      "priorityDisplay": "high",
      "dependsOn": [],
      "createdAt": "2025-07-28T18:30:08.813Z",
      "updatedAt": "2025-07-28T18:30:08.813Z",
      "subtasks": [],
      "relatedFiles": [],
      "activityLog": [],
      "lastSubtaskIndex": 0
    },
    {
      "id": 2,
      "title": "Refactor backend llm_rotation_config.py to support OpenRouter and remove duplicates",
      "description": "Add OpenRouter provider support with models list, unify key_map, remove duplicated helper functions, consolidate usage/blacklist structures. Ensure get_api_key_for_provider works.",
      "status": "inprogress",
      "priority": 701,
      "priorityDisplay": "high",
      "dependsOn": [],
      "createdAt": "2025-07-28T18:30:33.136Z",
      "updatedAt": "2025-07-28T18:32:13.486Z",
      "subtasks": [
        {
          "id": "2.1",
          "title": "Introduce PROVIDERS dict with Gemini and OpenRouter models",
          "status": "done",
          "createdAt": "2025-07-28T18:30:46.771Z",
          "updatedAt": "2025-07-28T18:32:07.791Z",
          "activityLog": [
            {
              "timestamp": "2025-07-28T18:30:46.771Z",
              "type": "log",
              "message": "Subtask created with title: \"Introduce PROVIDERS dict with Gemini and OpenRouter models\""
            },
            {
              "timestamp": "2025-07-28T18:32:07.791Z",
              "type": "log",
              "message": "Status changed from \"todo\" to \"done\". Message: Implemented PROVIDERS dict and models list with OpenRouter support"
            }
          ]
        },
        {
          "id": "2.2",
          "title": "Create UsageTracker class and replace scattered usage dicts",
          "status": "todo",
          "createdAt": "2025-07-28T18:30:56.048Z",
          "updatedAt": "2025-07-28T18:30:56.048Z",
          "activityLog": [
            {
              "timestamp": "2025-07-28T18:30:56.048Z",
              "type": "log",
              "message": "Subtask created with title: \"Create UsageTracker class and replace scattered usage dicts\""
            }
          ]
        }
      ],
      "lastSubtaskIndex": 2,
      "relatedFiles": [
        "GopiAI-CrewAI/llm_rotation_config.py"
      ],
      "activityLog": [
        {
          "timestamp": "2025-07-28T18:30:33.136Z",
          "type": "log",
          "message": "Task created with title: \"Refactor backend llm_rotation_config.py to support OpenRouter and remove duplicates\""
        },
        {
          "timestamp": "2025-07-28T18:32:13.486Z",
          "type": "log",
          "message": "Status changed from \"todo\" to \"inprogress\". Message: Backend refactor main part committed"
        }
      ]
    },
    {
      "id": 3,
      "title": "Refactor model_selector_widget.py to single-provider dropdown and remove duplicate signals",
      "description": "Frontend widget should:\n- Present providers in QComboBox based on PROVIDER_KEY_ENV\n- Load models dynamically via llm_rotation_config.get_available_models\n- Single set of widgets, no duplicated signals.\n- Correctly save API keys to .env using unified map.\n- Remove duplicate button connections causing double calls.",
      "status": "todo",
      "priority": 699,
      "priorityDisplay": "high",
      "dependsOn": [],
      "createdAt": "2025-07-28T18:40:36.541Z",
      "updatedAt": "2025-07-28T18:40:36.542Z",
      "subtasks": [
        {
          "id": "3.1",
          "title": "Replace two provider buttons with QComboBox",
          "status": "todo",
          "createdAt": "2025-07-28T18:40:46.690Z",
          "updatedAt": "2025-07-28T18:40:46.690Z",
          "activityLog": [
            {
              "timestamp": "2025-07-28T18:40:46.690Z",
              "type": "log",
              "message": "Subtask created with title: \"Replace two provider buttons with QComboBox\""
            }
          ]
        },
        {
          "id": "3.2",
          "title": "Refactor model loading to use get_available_models",
          "status": "todo",
          "createdAt": "2025-07-28T18:40:52.115Z",
          "updatedAt": "2025-07-28T18:40:52.115Z",
          "activityLog": [
            {
              "timestamp": "2025-07-28T18:40:52.115Z",
              "type": "log",
              "message": "Subtask created with title: \"Refactor model loading to use get_available_models\""
            }
          ]
        },
        {
          "id": "3.3",
          "title": "Unify API key handling and save to .env",
          "status": "todo",
          "createdAt": "2025-07-28T18:41:00.204Z",
          "updatedAt": "2025-07-28T18:41:00.204Z",
          "activityLog": [
            {
              "timestamp": "2025-07-28T18:41:00.204Z",
              "type": "log",
              "message": "Subtask created with title: \"Unify API key handling and save to .env\""
            }
          ]
        }
      ],
      "lastSubtaskIndex": 3,
      "relatedFiles": [
        "GopiAI-UI/gopiai/ui/components/model_selector_widget.py"
      ],
      "activityLog": [
        {
          "timestamp": "2025-07-28T18:40:36.542Z",
          "type": "log",
          "message": "Task created with title: \"Refactor model_selector_widget.py to single-provider dropdown and remove duplicate signals\""
        }
      ]
    },
    {
      "id": 4,
      "title": "Implement provider/model state file synchronization",
      "description": "Create ~/.gopiai_state.json storing current provider and model.\nBackend reads on startup; UI writes whenever user changes selection.",
      "status": "todo",
      "priority": 702,
      "priorityDisplay": "high",
      "dependsOn": [],
      "createdAt": "2025-07-28T20:22:41.855Z",
      "updatedAt": "2025-07-28T20:22:41.855Z",
      "subtasks": [],
      "lastSubtaskIndex": 0,
      "relatedFiles": [
        "GopiAI-CrewAI backend",
        "GopiAI-UI widget"
      ],
      "activityLog": [
        {
          "timestamp": "2025-07-28T20:22:41.855Z",
          "type": "log",
          "message": "Task created with title: \"Implement provider/model state file synchronization\""
        }
      ]
    }
  ]
}