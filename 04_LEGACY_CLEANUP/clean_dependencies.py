#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –Ω–µ–Ω—É–∂–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ pyproject.toml —Ñ–∞–π–ª–∞—Ö
"""
import os
import re
from pathlib import Path

def clean_pyproject_dependencies():
    """–û—á–∏—â–∞–µ—Ç –Ω–µ–Ω—É–∂–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ –≤—Å–µ—Ö pyproject.toml —Ñ–∞–π–ª–æ–≤"""
    
    # –ù–µ–Ω—É–∂–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    deps_to_remove = [
        "gopiai-assets",
        "autogen",
        "pyautogen",
    ]
    
    # –ù–∞–π—Ç–∏ –≤—Å–µ pyproject.toml —Ñ–∞–π–ª—ã
    modules = [
        "GopiAI",
        "GopiAI-Core",
        "GopiAI-UI", 
        "GopiAI-WebView",
        "GopiAI-Extensions",
        "GopiAI-Widgets",
    ]
    
    for module in modules:
        pyproject_path = Path(module) / "pyproject.toml"
        
        if pyproject_path.exists():
            print(f"üîß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º {pyproject_path}")
            
            # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
            with open(pyproject_path, 'r', encoding='utf-8') as f:
                content = f.read()
            
            # –£–¥–∞–ª—è–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
            for dep in deps_to_remove:
                # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å—é
                pattern = rf'\s*"{dep}[^"]*",?\n?'
                content = re.sub(pattern, '', content)
                
                # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –±–µ–∑ –∫–∞–≤—ã—á–µ–∫
                pattern = rf'\s*{dep}[^,\n]*,?\n?'
                content = re.sub(pattern, '', content)
            
            # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –∑–∞–ø—è—Ç—ã–µ
            content = re.sub(r',(\s*\])', r'\1', content)
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
            with open(pyproject_path, 'w', encoding='utf-8') as f:
                f.write(content)
                
            print(f"‚úÖ –û—á–∏—â–µ–Ω {pyproject_path}")
        else:
            print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω {pyproject_path}")

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    modules = [
        "GopiAI",
        "GopiAI-Core",
        "GopiAI-UI", 
        "GopiAI-WebView", 
        "GopiAI-Extensions",
        "GopiAI-Widgets",
    ]
    
    print("üìã –¢–µ–∫—É—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
    print("=" * 50)
    
    for module in modules:
        pyproject_path = Path(module) / "pyproject.toml"
        
        if pyproject_path.exists():
            print(f"\nüì¶ {module}:")
            
            with open(pyproject_path, 'r', encoding='utf-8') as f:
                content = f.read()
            
            # –ù–∞–π—Ç–∏ —Å–µ–∫—Ü–∏—é dependencies
            deps_match = re.search(r'dependencies = \[(.*?)\]', content, re.DOTALL)
            if deps_match:
                deps_str = deps_match.group(1)
                deps = [dep.strip().strip('"').strip("'") for dep in deps_str.split(',') if dep.strip()]
                for dep in deps:
                    if dep:
                        print(f"  - {dep}")
            else:
                print("  –ù–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")

if __name__ == "__main__":
    print("üßπ GopiAI Dependency Cleaner")
    print("=" * 50)
    
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
    check_dependencies()
    
    print("\n2. –û—á–∏—Å—Ç–∫–∞ –Ω–µ–Ω—É–∂–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
    clean_pyproject_dependencies()
    
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:")
    check_dependencies()
    
    print(f"\n‚úÖ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:")
    print("cd GopiAI-UI && pip install -e .")