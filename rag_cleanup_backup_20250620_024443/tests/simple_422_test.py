"""
–ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ 422
"""
import requests
import json
import time

def check_rag_server():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ RAG —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω"""
    try:
        response = requests.get("http://127.0.0.1:8080/health", timeout=3)
        print(f"‚úÖ RAG —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω (—Å—Ç–∞—Ç—É—Å: {response.status_code})")
        return True
    except requests.ConnectionError:
        print("‚ùå RAG —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def test_session_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏"""
    print("\nüß™ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏:")
    print("-" * 40)
    
    # –î–∞–Ω–Ω—ã–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ —Å–æ–≥–ª–∞—Å–Ω–æ CreateSessionRequest
    data = {
        "title": "Test Session",
        "project_context": "GopiAI-WebView",
        "tags": ["test", "webview"]
    }
    
    print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST /sessions")
    print(f"üì¶ –î–∞–Ω–Ω—ã–µ: {json.dumps(data, indent=2, ensure_ascii=False)}")
    
    try:
        response = requests.post(
            "http://127.0.0.1:8080/sessions",
            json=data,
            timeout=10
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"üìÑ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.text}")
        
        if response.status_code == 200:
            print("‚úÖ –£–°–ü–ï–•! –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞ –±–µ–∑ –æ—à–∏–±–∫–∏ 422")
            return response.json().get("session_id")
        elif response.status_code == 422:
            print("‚ùå –û–®–ò–ë–ö–ê 422! –ü—Ä–æ–±–ª–µ–º–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –¥–∞–Ω–Ω—ã—Ö")
            print("üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON")
            print("   - –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π")
            print("   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö")
            return None
        else:
            print(f"‚ùå –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞: {response.status_code}")
            return None
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return None

def test_message_creation(session_id):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    if not session_id:
        print("\n‚ùå –ù–µ—Ç session_id –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π")
        return False
        
    print(f"\nüß™ –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–µ—Å—Å–∏—é {session_id}:")
    print("-" * 60)
    
    # –î–∞–Ω–Ω—ã–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ —Å–æ–≥–ª–∞—Å–Ω–æ AddMessageRequest
    data = {
        "content": "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API",
        "role": "user",
        "metadata": {"test": True, "source": "api_test"}
    }
    
    print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST /sessions/{session_id}/messages")
    print(f"üì¶ –î–∞–Ω–Ω—ã–µ: {json.dumps(data, indent=2, ensure_ascii=False)}")
    
    try:
        response = requests.post(
            f"http://127.0.0.1:8080/sessions/{session_id}/messages",
            json=data,
            timeout=10
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"üìÑ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.text}")
        
        if response.status_code == 200:
            print("‚úÖ –£–°–ü–ï–•! –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –±–µ–∑ –æ—à–∏–±–∫–∏ 422")
            return True
        elif response.status_code == 422:
            print("‚ùå –û–®–ò–ë–ö–ê 422! –ü—Ä–æ–±–ª–µ–º–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –¥–∞–Ω–Ω—ã—Ö")
            return False
        else:
            print(f"‚ùå –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

def explain_fix():
    """–û–±—ä—è—Å–Ω—è–µ–º —á—Ç–æ –±—ã–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ"""
    print("\n" + "="*60)
    print("üîß –ß–¢–û –ë–´–õ–û –ò–°–ü–†–ê–í–õ–ï–ù–û –í API:")
    print("="*60)
    
    print("\n‚ùå –î–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    print("   - –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã –ø—Ä–∏–Ω–∏–º–∞–ª–∏ '—Å—ã—Ä–æ–π' JSON")
    print("   - –û—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö")
    print("   - FastAPI –Ω–µ –∑–Ω–∞–ª —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∑–∞–ø—Ä–æ—Å–æ–≤")
    print("   - –†–µ–∑—É–ª—å—Ç–∞—Ç: –æ—à–∏–±–∫–∞ 422 (Unprocessable Entity)")
    
    print("\n‚úÖ –ü–û–°–õ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    print("   - –î–æ–±–∞–≤–ª–µ–Ω—ã Pydantic –º–æ–¥–µ–ª–∏:")
    print("     ‚Ä¢ CreateSessionRequest (title, project_context, tags)")
    print("     ‚Ä¢ AddMessageRequest (content, role, metadata)")
    print("   - –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ç–µ–ø–µ—Ä—å –ø—Ä–∏–Ω–∏–º–∞—é—Ç —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏")
    print("   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    print("   - –ß–µ—Ç–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API –≤ /docs")
    
    print("\nüîç –û–®–ò–ë–ö–ê 422 –û–ó–ù–ê–ß–ê–ï–¢:")
    print("   'Unprocessable Entity' - —Å–µ—Ä–≤–µ—Ä –ø–æ–Ω–∏–º–∞–µ—Ç –∑–∞–ø—Ä–æ—Å,")
    print("   –Ω–æ –Ω–µ –º–æ–∂–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏")
    
    print("\nüìù –ü–†–ê–í–ò–õ–¨–ù–´–ï –§–û–†–ú–ê–¢–´ –ó–ê–ü–†–û–°–û–í:")
    print("\n   –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏:")
    print(json.dumps({
        "title": "–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞",
        "project_context": "GopiAI-WebView",
        "tags": ["webview", "chat"]
    }, indent=6, ensure_ascii=False))
    
    print("\n   –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è:")
    print(json.dumps({
        "content": "–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è",
        "role": "user",
        "metadata": {"extra": "info"}
    }, indent=6, ensure_ascii=False))

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –û–®–ò–ë–ö–ò 422 –í RAG API")
    print("="*60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä
    if not check_rag_server():
        print("\nüí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print("   cd rag_memory_system")
        print("   python api.py")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    session_id = test_session_creation()
    message_ok = test_message_creation(session_id)
    
    # –û–±—ä—è—Å–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    explain_fix()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "="*60)
    print("üìã –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print("="*60)
    
    if session_id and message_ok:
        print("üéâ –û–¢–õ–ò–ß–ù–û! –û—à–∏–±–∫–∞ 422 –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ –°–µ—Å—Å–∏–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –±–µ–∑ –ø—Ä–æ–±–ª–µ–º")
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —É—Å–ø–µ—à–Ω–æ")
        print(f"\nüåê –î–∞—à–±–æ—Ä–¥: http://127.0.0.1:8080")
        print(f"üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://127.0.0.1:8080/docs")
    else:
        print("‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞")

if __name__ == "__main__":
    main()