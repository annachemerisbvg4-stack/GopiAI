#!/usr/bin/env python3
"""
üîß –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å CrewAI —Å–µ—Ä–≤–µ—Ä–æ–º
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å
"""

import subprocess
import sys
import os
from pathlib import Path

def run_command(command, description):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"üîÑ {description}...")
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úÖ {description} - —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print(f"‚ùå {description} - –æ—à–∏–±–∫–∞:")
            print(result.stderr)
            return False
    except Exception as e:
        print(f"‚ùå {description} - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

def check_import(module_name, description):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª—è"""
    try:
        __import__(module_name)
        print(f"‚úÖ {description} - –¥–æ—Å—Ç—É–ø–µ–Ω")
        return True
    except ImportError as e:
        print(f"‚ùå {description} - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return False

def main():
    print("üöÄ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å CrewAI —Å–µ—Ä–≤–µ—Ä–æ–º")
    print("=" * 50)
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    crewai_dir = Path(__file__).parent / "GopiAI-CrewAI"
    if crewai_dir.exists():
        os.chdir(crewai_dir)
        print(f"üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {crewai_dir}")
    else:
        print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è GopiAI-CrewAI –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
    dependencies = [
        ("flask", "Flask"),
        ("crewai", "CrewAI"),
        ("pydantic", "Pydantic"),
        ("requests", "Requests")
    ]
    
    missing_deps = []
    for module, name in dependencies:
        if not check_import(module, name):
            missing_deps.append(module)
    
    # 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if missing_deps:
        print(f"\n2Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {', '.join(missing_deps)}")
        for dep in missing_deps:
            if not run_command(f"pip install {dep}", f"–£—Å—Ç–∞–Ω–æ–≤–∫–∞ {dep}"):
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å {dep}")
    else:
        print("\n2Ô∏è‚É£ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç –∫–ª—é—á–µ–≤—ã—Ö –º–æ–¥—É–ª–µ–π
    print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –º–æ–¥—É–ª–µ–π GopiAI:")
    key_modules = [
        ("tools.gopiai_integration.filesystem_tools", "FileSystem Tools"),
        ("tools.gopiai_integration.crewai_tools_integrator", "CrewAI Tools Integrator"),
        ("rag_system", "RAG System"),
        ("llm_rotation_config", "LLM Rotation Config")
    ]
    
    for module, name in key_modules:
        check_import(module, name)
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–ª –æ—à–∏–±–∫—É
    print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞:")
    try:
        from tools.gopiai_integration.crewai_tools_integrator import get_crewai_tools_integrator
        integrator = get_crewai_tools_integrator()
        print("‚úÖ get_crewai_tools_integrator - —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∏ —Å–æ–∑–¥–∞–Ω")
        print(f"   –ù–∞–π–¥–µ–Ω–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: {len(integrator.available_tools)}")
    except Exception as e:
        print(f"‚ùå get_crewai_tools_integrator - –æ—à–∏–±–∫–∞: {e}")
    
    # 5. –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞)
    print("\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞:")
    if run_command("python -m py_compile crewai_api_server.py", "–ö–æ–º–ø–∏–ª—è—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞"):
        print("‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å —Å–µ—Ä–≤–µ—Ä–∞ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
    
    # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    print("\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:")
    config_files = [
        "requirements.txt",
        "tools/model_configurations.json",
        "memory/chats.json"
    ]
    
    for config_file in config_files:
        if os.path.exists(config_file):
            print(f"‚úÖ {config_file} - –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"‚ö†Ô∏è {config_file} - –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print("\n" + "=" * 50)
    print("üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("1. –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
    print("   pip install -r requirements.txt")
    print("2. –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("   python crewai_api_server.py")
    print("3. –°–µ—Ä–≤–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:5051")
    
    return True

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\nüëã –°–∫—Ä–∏–ø—Ç –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()