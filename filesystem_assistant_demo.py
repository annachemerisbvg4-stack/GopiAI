#!/usr/bin/env python3
"""
ü§ñ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—É –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ
"""

import sys
import os
import json
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º GopiAI
sys.path.append('GopiAI/GopiAI-CrewAI')

from crewai import Agent, Task, Crew
from tools.gopiai_integration import (
    GopiAIFileSystemTool, 
    TerminalTool, 
    GopiAIWebSearchTool,
    GopiAIWebViewerTool
)

def create_filesystem_assistant():
    """–°–æ–∑–¥–∞–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å –ø–æ–ª–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ"""
    
    # –°–æ–∑–¥–∞–µ–º –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    tools = [
        GopiAIFileSystemTool(),  # –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
        TerminalTool(),          # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥
        GopiAIWebSearchTool(),   # –ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ
        GopiAIWebViewerTool(),   # –ü—Ä–æ—Å–º–æ—Ç—Ä –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü
    ]
    
    assistant = Agent(
        role='File System Assistant',
        goal='–ü–æ–º–æ—á—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —Ñ–∞–π–ª–∞–º–∏, –∞–Ω–∞–ª–∏–∑–æ–º –¥–∞–Ω–Ω—ã—Ö –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π –ø—Ä–æ–µ–∫—Ç–æ–≤',
        backstory="""–Ø - —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å –ø–æ–ª–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ.
        
        –ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
        üìÅ –§–ê–ô–õ–û–í–ê–Ø –°–ò–°–¢–ï–ú–ê:
        - –ß—Ç–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å —Ñ–∞–π–ª–æ–≤ –ª—é–±—ã—Ö —Ç–∏–ø–æ–≤
        - –°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫
        - –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ –ø–æ —à–∞–±–ª–æ–Ω–∞–º
        - –†–∞–±–æ—Ç–∞ —Å JSON, CSV, –∞—Ä—Ö–∏–≤–∞–º–∏
        - –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
        - –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–æ–≤
        
        üíª –¢–ï–†–ú–ò–ù–ê–õ:
        - –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
        - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
        - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏
        - –†–∞–±–æ—Ç–∞ —Å Git
        
        üåê –ò–ù–¢–ï–†–ù–ï–¢:
        - –ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        - –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
        - –ê–Ω–∞–ª–∏–∑ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü
        
        –Ø –≤—Å–µ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞—é –±–µ–∑–æ–ø–∞—Å–Ω–æ –∏ —Å–ø—Ä–∞—à–∏–≤–∞—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –æ–ø–∞—Å–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.""",
        tools=tools,
        verbose=True,
        allow_delegation=False
    )
    
    return assistant

def demo_file_operations():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å —Ñ–∞–π–ª–∞–º–∏"""
    print("\nüîß –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å —Ñ–∞–π–ª–∞–º–∏")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
    assistant = create_filesystem_assistant()
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    tasks = [
        Task(
            description="""–í—ã–ø–æ–ª–Ω–∏ —Å–ª–µ–¥—É—é—â–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π:
            1. –°–æ–∑–¥–∞–π –ø–∞–ø–∫—É 'demo_project' –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            2. –°–æ–∑–¥–∞–π –≤ –Ω–µ–π —Ñ–∞–π–ª 'README.md' —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–æ–µ–∫—Ç–∞
            3. –°–æ–∑–¥–∞–π —Ñ–∞–π–ª 'config.json' —Å –±–∞–∑–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
            4. –°–æ–∑–¥–∞–π —Ñ–∞–π–ª 'data.csv' —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            5. –ü–æ–∫–∞–∂–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
            6. –°–æ–∑–¥–∞–π —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
            """,
            agent=assistant,
            expected_output="–û—Ç—á–µ—Ç –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö —Å —Ñ–∞–π–ª–∞–º–∏"
        ),
        
        Task(
            description="""–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞:
            1. –ù–∞–π–¥–∏ –≤—Å–µ Python —Ñ–∞–π–ª—ã
            2. –ü–æ–¥—Å—á–∏—Ç–∞–π –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞
            3. –ù–∞–π–¥–∏ —Ñ–∞–π–ª—ã –±–æ–ª—å—à–µ 1KB
            4. –°–æ–∑–¥–∞–π –æ—Ç—á–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
            """,
            agent=assistant,
            expected_output="JSON –æ—Ç—á–µ—Ç –æ–± –∞–Ω–∞–ª–∏–∑–µ –ø—Ä–æ–µ–∫—Ç–∞"
        )
    ]
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—É
    crew = Crew(
        agents=[assistant],
        tasks=tasks,
        verbose=True
    )
    
    print("üöÄ –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏...")
    result = crew.kickoff()
    
    print("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")

def interactive_assistant():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º"""
    print("\nü§ñ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã")
    print("=" * 50)
    print("–í–≤–µ–¥–∏—Ç–µ 'help' –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ –∏–ª–∏ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞")
    
    assistant = create_filesystem_assistant()
    
    while True:
        try:
            user_input = input("\nüë§ –í—ã: ").strip()
            
            if user_input.lower() in ['exit', 'quit', '–≤—ã—Ö–æ–¥']:
                print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            
            if user_input.lower() == 'help':
                print("""
üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
- list [–ø—É—Ç—å] - –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏
- read [—Ñ–∞–π–ª] - –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª
- write [—Ñ–∞–π–ª] [—Ç–µ–∫—Å—Ç] - –∑–∞–ø–∏—Å–∞—Ç—å –≤ —Ñ–∞–π–ª
- find [—à–∞–±–ª–æ–Ω] - –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª—ã
- info [—Ñ–∞–π–ª] - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ
- backup [—Ñ–∞–π–ª] - —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
- search [—Ñ–∞–π–ª] [—Ç–µ–∫—Å—Ç] - –Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç –≤ —Ñ–∞–π–ª–µ
- tree [–ø—É—Ç—å] - –ø–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ä–µ–≤–æ –ø–∞–ø–æ–∫
- help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
- exit - –≤—ã—Ö–æ–¥
                """)
                continue
            
            if not user_input:
                continue
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É –¥–ª—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
            task = Task(
                description=f"–í—ã–ø–æ–ª–Ω–∏ –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_input}",
                agent=assistant,
                expected_output="–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞"
            )
            
            crew = Crew(
                agents=[assistant],
                tasks=[task],
                verbose=False
            )
            
            print("ü§ñ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç...")
            result = crew.kickoff()
            print(f"ü§ñ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç: {result}")
            
        except KeyboardInterrupt:
            print("\n\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_specific_operations():
    """–¢–µ—Å—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("\nüß™ –¢–µ—Å—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π")
    print("=" * 50)
    
    # –ü—Ä—è–º–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
    fs_tool = GopiAIFileSystemTool()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_data = {
        "project": "GopiAI Demo",
        "version": "1.0.0",
        "features": ["filesystem", "terminal", "web_search"],
        "config": {
            "debug": True,
            "max_files": 1000
        }
    }
    
    print("1. –°–æ–∑–¥–∞–Ω–∏–µ JSON —Ñ–∞–π–ª–∞...")
    result = fs_tool._run(
        action="write_json", 
        path="test_config.json",
        json_data=test_data
    )
    print(f"   {result}")
    
    print("2. –ß—Ç–µ–Ω–∏–µ JSON —Ñ–∞–π–ª–∞...")
    result = fs_tool._run(action="read_json", path="/workspace/project/test_config.json")
    print(f"   {json.dumps(result, indent=2, ensure_ascii=False)}")
    
    print("3. –°–æ–∑–¥–∞–Ω–∏–µ CSV —Ñ–∞–π–ª–∞...")
    csv_data = [
        {"name": "file1.txt", "size": 1024, "type": "text"},
        {"name": "file2.py", "size": 2048, "type": "python"},
        {"name": "file3.json", "size": 512, "type": "json"}
    ]
    result = fs_tool._run(
        action="write_csv",
        path="/workspace/project/test_files.csv",
        csv_data=csv_data,
        fieldnames=["name", "size", "type"]
    )
    print(f"   {result}")
    
    print("4. –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤...")
    result = fs_tool._run(
        action="find",
        path="/workspace/project",
        pattern="*.py",
        recursive=True
    )
    print(f"   –ù–∞–π–¥–µ–Ω–æ Python —Ñ–∞–π–ª–æ–≤: {len(result)}")
    
    print("5. –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞...")
    files_to_zip = [
        "/workspace/project/test_config.json",
        "/workspace/project/test_files.csv"
    ]
    result = fs_tool._run(
        action="create_zip",
        path="/workspace/project/test_archive.zip",
        files=files_to_zip
    )
    print(f"   {result}")
    
    print("6. –•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞...")
    result = fs_tool._run(
        action="hash",
        path="/workspace/project/test_config.json",
        algorithm="sha256"
    )
    print(f"   SHA256: {result[:16]}...")
    
    # –û—á–∏—Å—Ç–∫–∞
    for file in ["test_config.json", "test_files.csv", "test_archive.zip"]:
        try:
            os.remove(f"/workspace/project/{file}")
        except OSError as e:
            print(f"   –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª {file}: {e}")
    
    print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ GopiAI - –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ")
    print("=" * 60)
    
    print("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:")
    print("1. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å —Ñ–∞–π–ª–∞–º–∏")
    print("2. –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç")
    print("3. –¢–µ—Å—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π")
    print("4. –ü–æ–∫–∞–∑–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤")
    
    choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): ").strip()
    
    if choice == "1":
        demo_file_operations()
    elif choice == "2":
        interactive_assistant()
    elif choice == "3":
        test_specific_operations()
    elif choice == "4":
        show_tool_capabilities()
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

def show_tool_capabilities():
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"""
    print("\nüîß –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ GopiAI")
    print("=" * 50)
    
    fs_tool = GopiAIFileSystemTool()
    
    print("üìÅ GopiAI FileSystem Tool:")
    print("   –û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:")
    print("   - read, write, append - —Ä–∞–±–æ—Ç–∞ —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º —Ñ–∞–π–ª–æ–≤")
    print("   - list, exists, mkdir, remove - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏ –∏ –ø–∞–ø–∫–∞–º–∏")
    print("   - copy, move - –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ")
    print("   - find - –ø–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ –ø–æ —à–∞–±–ª–æ–Ω–∞–º")
    print("   - info - –ø–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤")
    print("   - hash - –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ö–µ—à–µ–π")
    print("   - backup - —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π")
    print("   - tree - –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫")
    
    print("\n   –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:")
    print("   - read_json, write_json - —Ä–∞–±–æ—Ç–∞ —Å JSON")
    print("   - read_csv, write_csv - —Ä–∞–±–æ—Ç–∞ —Å CSV")
    print("   - create_zip, extract_zip, list_zip - –∞—Ä—Ö–∏–≤—ã")
    
    print("\n   –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞:")
    print("   - search_text - –ø–æ–∏—Å–∫ —Ç–µ–∫—Å—Ç–∞ –≤ —Ñ–∞–π–ª–∞—Ö")
    print("   - replace_text - –∑–∞–º–µ–Ω–∞ —Ç–µ–∫—Å—Ç–∞")
    print("   - count_lines - –ø–æ–¥—Å—á–µ—Ç —Å—Ç—Ä–æ–∫")
    print("   - compare - —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤")
    
    print("\nüíª Terminal Tool:")
    print("   - –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∫–æ–º–∞–Ω–¥")
    print("   - –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã")
    print("   - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ UI")
    
    print("\nüåê Web Tools:")
    print("   - –ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ (DuckDuckGo, Google)")
    print("   - –ü—Ä–æ—Å–º–æ—Ç—Ä –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü")
    print("   - –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
    
    print("\n‚úÖ –í—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\nüëã –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()