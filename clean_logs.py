#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤ GopiAI
=============================================

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ GopiAI,
–æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ —Å–∞–º—ã–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤.

–ê–≤—Ç–æ—Ä: Kiro AI Assistant
–î–∞—Ç–∞: 2025-07-28
"""

import os
import glob
import shutil
from pathlib import Path

def clean_logs():
    """–û—á–∏—â–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤"""
    
    print("üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤...")
    
    # –°–ø–∏—Å–æ–∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∏ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
    log_patterns = [
        # GopiAI-UI –ª–æ–≥–∏
        "GopiAI-UI/logs/*.log",
        "GopiAI-UI/chat_debug.log",
        "GopiAI-UI/chat_widget_debug.log", 
        "GopiAI-UI/crewai_client_debug.log",
        "GopiAI-UI/gopiai/ui/logs/*.log",
        "GopiAI-UI/gopiai/ui/components/logs/*.log",
        
        # GopiAI-CrewAI –ª–æ–≥–∏
        "GopiAI-CrewAI/logs/*.log",
        
        # –û–±—â–∏–µ –ª–æ–≥–∏
        "logs/*.log",
        "*.log"
    ]
    
    # –§–∞–π–ª—ã –∫–æ—Ç–æ—Ä—ã–µ –ù–ï –Ω—É–∂–Ω–æ —É–¥–∞–ª—è—Ç—å (—Ç–µ–∫—É—â–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ª–æ–≥–∏)
    keep_files = [
        "ui_debug.log",
        "crewai_api_server_debug.log"
    ]
    
    total_deleted = 0
    total_size_freed = 0
    
    for pattern in log_patterns:
        files = glob.glob(pattern)
        for file_path in files:
            file_name = os.path.basename(file_path)
            
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–ª—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å
            if file_name in keep_files:
                continue
                
            try:
                # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
                file_size = os.path.getsize(file_path)
                
                # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
                os.remove(file_path)
                
                total_deleted += 1
                total_size_freed += file_size
                
                print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω: {file_path} ({file_size} –±–∞–π—Ç)")
                
            except PermissionError:
                print(f"  ‚ö†Ô∏è –§–∞–π–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ): {file_path}")
            except OSError as e:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {file_path}: {e}")
    
    # –û—á–∏—â–∞–µ–º –ø—É—Å—Ç—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ª–æ–≥–æ–≤
    empty_dirs = [
        "GopiAI-UI/logs",
        "GopiAI-UI/gopiai/ui/logs", 
        "GopiAI-UI/gopiai/ui/components/logs",
        "GopiAI-CrewAI/logs",
        "logs"
    ]
    
    for dir_path in empty_dirs:
        if os.path.exists(dir_path) and os.path.isdir(dir_path):
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—É—Å—Ç–∞ –ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
                if not os.listdir(dir_path):
                    os.rmdir(dir_path)
                    print(f"  üóÇÔ∏è –£–¥–∞–ª–µ–Ω–∞ –ø—É—Å—Ç–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {dir_path}")
            except OSError:
                pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–∞
    if total_size_freed < 1024:
        size_str = f"{total_size_freed} –±–∞–π—Ç"
    elif total_size_freed < 1024 * 1024:
        size_str = f"{total_size_freed / 1024:.1f} –ö–ë"
    else:
        size_str = f"{total_size_freed / (1024 * 1024):.1f} –ú–ë"
    
    print(f"\n‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print(f"üìä –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {total_deleted}")
    print(f"üíæ –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ –º–µ—Å—Ç–∞: {size_str}")
    
    if total_deleted == 0:
        print("‚ÑπÔ∏è –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("GopiAI - –£—Ç–∏–ª–∏—Ç–∞ –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤")
    print("=" * 40)
    
    try:
        clean_logs()
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()