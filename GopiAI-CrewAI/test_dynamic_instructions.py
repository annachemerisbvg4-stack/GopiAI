"""
üß™ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è CrewAI
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ ToolsInstructionManager —Å CrewAI workflow
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
current_dir = Path(__file__).parent
sys.path.append(str(current_dir))
sys.path.append(str(current_dir / 'tools'))

from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def test_tools_instruction_manager():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ToolsInstructionManager"""
    print("[TEST] === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TOOLS INSTRUCTION MANAGER ===")
    
    try:
        from tools.gopiai_integration.tools_instruction_manager import get_tools_instruction_manager
        
        manager = get_tools_instruction_manager()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫—Ä–∞—Ç–∫–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        tools_summary = manager.get_tools_summary()
        print(f"[INFO] –î–æ—Å—Ç—É–ø–Ω–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: {len(tools_summary)}")
        for tool_name, description in tools_summary.items():
            print(f"  ‚Ä¢ {tool_name}: {description[:50]}...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
        print("\n[INFO] –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π:")
        for tool_name in tools_summary.keys():
            instructions = manager.get_tool_detailed_instructions(tool_name)
            if instructions:
                print(f"  [OK] {tool_name}: {len(instructions)} —Å–∏–º–≤–æ–ª–æ–≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π")
            else:
                print(f"  [ERROR] {tool_name}: –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        return True
        
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ ToolsInstructionManager: {e}")
        import traceback
        traceback.print_exc()
        return False


def test_crewai_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å CrewAI"""
    print("\n[TEST] === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° CREWAI ===")
    
    try:
        from crewai import Agent, LLM
        from tools.gopiai_integration.crewai_tools_integration import (
            enhance_agent_with_instructions,
            get_tools_integrator
        )
        from tools.gopiai_integration.filesystem_tools import GopiAIFileSystemTool
        from tools.gopiai_integration.browser_tools import GopiAIBrowserTool
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π LLM
        llm = LLM(
            model="gemini/gemini-1.5-flash",
            temperature=0.1
        )
        
        # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞ —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏
        agent = Agent(
            role='Test Agent',
            goal='–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',
            backstory='–¢–µ—Å—Ç–æ–≤—ã–π –∞–≥–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π',
            tools=[GopiAIFileSystemTool(), GopiAIBrowserTool()],
            llm=llm,
            verbose=True
        )
        
        print(f"[INFO] –°–æ–∑–¥–∞–Ω –∞–≥–µ–Ω—Ç —Å {len(agent.tools)} –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏")
        
        # –£–ª—É—á—à–∞–µ–º –∞–≥–µ–Ω—Ç–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
        enhanced_agent = enhance_agent_with_instructions(agent)
        
        print(f"[OK] –ê–≥–µ–Ω—Ç —É–ª—É—á—à–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏")
        print(f"[INFO] –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: {len(enhanced_agent.tools)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä
        integrator = get_tools_integrator()
        print(f"[INFO] –ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω: {integrator is not None}")
        
        return True
        
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å CrewAI: {e}")
        import traceback
        traceback.print_exc()
        return False


def test_system_prompts_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å system_prompts"""
    print("\n[TEST] === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° SYSTEM PROMPTS ===")
    
    try:
        from tools.gopiai_integration.system_prompts import SystemPrompts
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä SystemPrompts
        prompts = SystemPrompts()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫—Ä–∞—Ç–∫–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–º–ø—Ç–∞
        tools_for_prompt = prompts.get_tools_summary_for_prompt()
        print(f"[INFO] –ü–æ–ª—É—á–µ–Ω —Å–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–º–ø—Ç–∞: {len(tools_for_prompt)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"–ù–∞—á–∞–ª–æ: {tools_for_prompt[:100]}...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
        detailed_instructions = prompts.get_tool_detailed_instructions('filesystem_tools')
        if detailed_instructions:
            print(f"[OK] –ü–æ–ª—É—á–µ–Ω—ã –¥–µ—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è filesystem_tools: {len(detailed_instructions)} —Å–∏–º–≤–æ–ª–æ–≤")
        else:
            print("[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏")
        
        return True
        
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å system_prompts: {e}")
        import traceback
        traceback.print_exc()
        return False


def run_all_tests():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("=== –ó–ê–ü–£–°–ö –í–°–ï–• –¢–ï–°–¢–û–í –°–ò–°–¢–ï–ú–´ –î–ò–ù–ê–ú–ò–ß–ï–°–ö–ò–• –ò–ù–°–¢–†–£–ö–¶–ò–ô ===\n")
    
    results = []
    
    # –¢–µ—Å—Ç 1: ToolsInstructionManager
    results.append(test_tools_instruction_manager())
    
    # –¢–µ—Å—Ç 2: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CrewAI
    results.append(test_crewai_integration())
    
    # –¢–µ—Å—Ç 3: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å SystemPrompts
    results.append(test_system_prompts_integration())
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "="*60)
    print("[RESULT] === –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø ===")
    
    passed = sum(results)
    total = len(results)
    
    print(f"[OK] –ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {passed}/{total}")
    
    if passed == total:
        print("[SUCCESS] –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("–°–∏—Å—Ç–µ–º–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    else:
        print(f"[WARNING] –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞.")
    
    return passed == total


if __name__ == "__main__":
    success = run_all_tests()
    sys.exit(0 if success else 1)
