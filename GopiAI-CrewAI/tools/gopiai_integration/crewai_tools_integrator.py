"""
üõ†Ô∏è CrewAI Tools Integrator
–ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –∏–∑ CrewAI Toolkit
"""

import logging
import importlib
from typing import Dict, List, Optional, Any, Type
from pathlib import Path
import sys
import os

logger = logging.getLogger(__name__)

class CrewAIToolsIntegrator:
    """
    –ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ CrewAI Toolkit
    
    –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
    - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    - –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é
    - –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –ø–æ —Ç–∏–ø–∞–º
    - Fallback –º–µ–∂–¥—É —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏
    """
    
    def __init__(self):
        self.logger = logging.getLogger(__name__)
        self.available_tools = {}
        self.loaded_tools = {}
        self.tool_categories = {}
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ crewai_toolkit
        toolkit_path = os.path.join(os.path.dirname(os.path.dirname(__file__)), "crewai_toolkit")
        if toolkit_path not in sys.path:
            sys.path.insert(0, toolkit_path)
        
        self._discover_tools()
        self.logger.info(f"‚úÖ CrewAI Tools Integrator –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ù–∞–π–¥–µ–Ω–æ {len(self.available_tools)} –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤")
    
    def _discover_tools(self):
        """–û–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ CrewAI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã"""
        
        # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –∏—Å—Ö–æ–¥—è –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–ª—é—á–µ–π –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏
        has_brave = bool(os.environ.get("BRAVE_API_KEY"))
        has_tavily = bool(os.environ.get("TAVILY_API_KEY"))
        has_firecrawl = bool(os.environ.get("FIRECRAWL_API_KEY"))
        has_github = bool(os.environ.get("GITHUB_TOKEN"))
        has_exa = bool(os.environ.get("EXA_API_KEY"))
        has_jina = bool(os.environ.get("JINA_API_KEY"))
        has_apify = bool(os.environ.get("APIFY_API_TOKEN"))
        has_composio = bool(os.environ.get("COMPOSIO_API_KEY"))
        has_patronus = bool(os.environ.get("PATRONUS_API_KEY"))
        has_qdrant = bool(os.environ.get("QDRANT_API_KEY"))

        # –ë–∞–∑–æ–≤—ã–π –Ω–∞–±–æ—Ä (–Ω–µ —Ç—Ä–µ–±—É—é—Ç –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π)
        priority_tools = {
            # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞
            'code_interpreter': {
                'module': 'tools.crewai_toolkit.tools.code_interpreter_tool.code_interpreter_tool',
                'class': 'CodeInterpreterTool',
                'category': 'code_execution',
                'description': '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ Python –∫–æ–¥–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Å—Ä–µ–¥–µ'
            },

            # –í–µ–±-—Å–∫—Ä–∞–ø–∏–Ω–≥ (—É–ª—É—á—à–µ–Ω–Ω—ã–π)
            'selenium_scraping': {
                'module': 'tools.crewai_toolkit.tools.selenium_scraping_tool.selenium_scraping_tool',
                'class': 'SeleniumScrapingTool',
                'category': 'web_scraping',
                'description': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –≤–µ–±-—Å–∫—Ä–∞–ø–∏–Ω–≥ —Å Selenium'
            },

            # –§–∞–π–ª–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (—É–ª—É—á—à–µ–Ω–Ω—ã–µ)
            'file_read': {
                'module': 'tools.crewai_toolkit.tools.file_read_tool.file_read_tool',
                'class': 'FileReadTool',
                'category': 'file_operations',
                'description': '–ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤'
            },

            'file_writer': {
                'module': 'tools.crewai_toolkit.tools.file_writer_tool.file_writer_tool',
                'class': 'FileWriterTool',
                'category': 'file_operations',
                'description': '–ó–∞–ø–∏—Å—å —Ñ–∞–π–ª–æ–≤ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤'
            },

            'directory_read': {
                'module': 'tools.crewai_toolkit.tools.directory_read_tool.directory_read_tool',
                'class': 'DirectoryReadTool',
                'category': 'file_operations',
                'description': '–ß—Ç–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π'
            },

            # –ü–æ–∏—Å–∫ –≤ —Ñ–∞–π–ª–∞—Ö
            'csv_search': {
                'module': 'tools.crewai_toolkit.tools.csv_search_tool.csv_search_tool',
                'class': 'CSVSearchTool',
                'category': 'file_operations',
                'description': '–ü–æ–∏—Å–∫ –¥–∞–Ω–Ω—ã—Ö –≤ CSV —Ñ–∞–π–ª–∞—Ö'
            },

            # API –∫–ª–∏–µ–Ω—Ç—ã
            'brave_search': {
                'module': 'tools.crewai_toolkit.tools.brave_search_tool.brave_search_tool',
                'class': 'BraveSearchTool',
                'category': 'web_search',
                'description': '–ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º API Brave',
                'enabled': has_brave
            },

            'tavily_search': {
                'module': 'tools.crewai_toolkit.tools.tavily_search_tool.tavily_search_tool',
                'class': 'TavilySearchTool',
                'category': 'web_search',
                'description': '–ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º API Tavily',
                'enabled': has_tavily
            },

            'firecrawl_search': {
                'module': 'tools.crewai_toolkit.tools.firecrawl_search_tool.firecrawl_search_tool',
                'class': 'FirecrawlSearchTool',
                'category': 'web_search',
                'description': '–ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º API Firecrawl',
                'enabled': has_firecrawl
            },

            # GitHub –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
            'github_client': {
                'module': 'tools.crewai_toolkit.tools.github_client_tool.github_client_tool',
                'class': 'GitHubClientTool',
                'category': 'code_integration',
                'description': '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å GitHub –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è–º–∏',
                'enabled': has_github
            },

            # –î—Ä—É–≥–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
            'exa_client': {
                'module': 'tools.crewai_toolkit.tools.exa_client_tool.exa_client_tool',
                'class': 'ExaClientTool',
                'category': 'data_processing',
                'description': '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Exa –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö',
                'enabled': has_exa
            },

            'jina_client': {
                'module': 'tools.crewai_toolkit.tools.jina_client_tool.jina_client_tool',
                'class': 'JinaClientTool',
                'category': 'data_processing',
                'description': '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Jina –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö',
                'enabled': has_jina
            },

            'apify_client': {
                'module': 'tools.crewai_toolkit.tools.apify_client_tool.apify_client_tool',
                'class': 'ApifyClientTool',
                'category': 'web_scraping',
                'description': '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Apify –¥–ª—è –≤–µ–±-—Å–∫—Ä–∞–ø–∏–Ω–≥–∞',
                'enabled': has_apify
            },

            'composio_client': {
                'module': 'tools.crewai_toolkit.tools.composio_client_tool.composio_client_tool',
                'class': 'ComposioClientTool',
                'category': 'data_storage',
                'description': '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Composio –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö',
                'enabled': has_composio
            },

            'patronus_client': {
                'module': 'tools.crewai_toolkit.tools.patronus_client_tool.patronus_client_tool',
                'class': 'PatronusClientTool',
                'category': 'security',
                'description': '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Patronus –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
                'enabled': has_patronus
            },

            'qdrant_client': {
                'module': 'tools.crewai_toolkit.tools.qdrant_client_tool.qdrant_client_tool',
                'class': 'QdrantClientTool',
                'category': 'data_storage',
                'description': '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Qdrant –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö',
                'enabled': has_qdrant
            }
        }

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –≤ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö
        for tool_name, tool_info in priority_tools.items():
            if tool_info.get('enabled', True):
                self.available_tools[tool_name] = tool_info
                self.tool_categories.setdefault(tool_info['category'], []).append(tool_name)

    def get_tool(self, tool_name: str) -> Optional[Type[Any]]:
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ –∏–º–µ–Ω–∏"""
        if tool_name in self.loaded_tools:
            return self.loaded_tools[tool_name]

        if tool_name in self.available_tools:
            tool_info = self.available_tools[tool_name]
            module_path = tool_info['module']
            class_name = tool_info['class']

            try:
                module = importlib.import_module(module_path)
                tool_class = getattr(module, class_name)
                self.loaded_tools[tool_name] = tool_class
                self.logger.info(f"‚úÖ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç {tool_name} –∑–∞–≥—Ä—É–∂–µ–Ω")
                return tool_class
            except (ImportError, AttributeError) as e:
                self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ {tool_name}: {e}")
                return None

        self.logger.warning(f"‚ö†Ô∏è –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç {tool_name} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None

    def get_tools_by_category(self, category: str) -> List[str]:
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        return self.tool_categories.get(category, [])

    def get_all_tools(self) -> Dict[str, Dict[str, Any]]:
        """–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã"""
        return self.available_tools
