#!/usr/bin/env python3
"""
üöÄ –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ GopiAI —Å CrewAI
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
"""

import os
import sys
from crewai import Agent, Task, Crew

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
from filesystem_tools import GopiAIFileSystemTool
from terminal_tool import TerminalTool
from web_search_tool import GopiAIWebSearchTool
from web_viewer_tool import GopiAIWebViewerTool

def create_research_agent():
    """–°–æ–∑–¥–∞–µ—Ç –∞–≥–µ–Ω—Ç–∞-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏"""
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    tools = [
        GopiAIFileSystemTool(),
        TerminalTool(),
        GopiAIWebSearchTool(),
        GopiAIWebViewerTool(),
    ]
    
    agent = Agent(
        role='Research Assistant',
        goal='–ü–æ–º–æ—á—å —Å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è–º–∏, –ø–æ–∏—Å–∫–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ —Ä–∞–±–æ—Ç–æ–π —Å —Ñ–∞–π–ª–∞–º–∏',
        backstory="""–Ø - –ø–æ–º–æ—â–Ω–∏–∫-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –æ—Å–Ω–æ–≤–Ω—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º:
        - –§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞: —á—Ç–µ–Ω–∏–µ, –∑–∞–ø–∏—Å—å, –ø–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤
        - –¢–µ—Ä–º–∏–Ω–∞–ª: –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥
        - –ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ: –ø–æ–∏—Å–∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        - –ü—Ä–æ—Å–º–æ—Ç—Ä –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü: –∞–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å–∞–π—Ç–æ–≤
        
        –Ø –ø–æ–º–æ–≥–∞—é –Ω–∞—Ö–æ–¥–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ—Ç—á–µ—Ç—ã.""",
        tools=tools,
        verbose=True,
        allow_delegation=False
    )
    
    return agent

def test_tools_directly():
    """–ü—Ä—è–º–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –±–µ–∑ CrewAI"""
    
    print("\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã...")
    fs_tool = GopiAIFileSystemTool()
    result = fs_tool._run(action="write", path="test.txt", data="–¢–µ—Å—Ç GopiAI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤")
    print(f"   {result}")
    
    result = fs_tool._run(action="read", path="test.txt")
    print(f"   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {result}")
    
    print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞...")
    terminal_tool = TerminalTool()
    result = terminal_tool._run(command="pwd")
    print(f"   {result}")
    
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞...")
    search_tool = GopiAIWebSearchTool()
    result = search_tool._run(query="OpenAI GPT", num_results=2)
    print(f"   {result[:200]}...")
    
    print("\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü...")
    viewer_tool = GopiAIWebViewerTool()
    result = viewer_tool._run(action="get_title", url="https://www.python.org")
    print(f"   {result}")
    
    # –û—á–∏—Å—Ç–∫–∞
    fs_tool._run(action="delete", path="test.txt")
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")

def run_example():
    """–ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
    
    print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ GopiAI")
    print("=" * 50)
    
    # –í—ã–±–∏—Ä–∞–µ–º –ø—Ä–∏–º–µ—Ä –¥–ª—è –∑–∞–ø—É—Å–∫–∞
    print("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–º–µ—Ä –¥–ª—è –∑–∞–ø—É—Å–∫–∞:")
    print("1. –°–æ–∑–¥–∞—Ç—å –∞–≥–µ–Ω—Ç–∞-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è")
    print("2. –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤")
    
    choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-2): ").strip()
    
    if choice == "1":
        print("\nü§ñ –°–æ–∑–¥–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è...")
        agent = create_research_agent()
        print(f"‚úÖ –ê–≥–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω: {agent.role}")
        print(f"   –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: {len(agent.tools)}")
        for tool in agent.tools:
            print(f"   - {tool.__class__.__name__}")
        
    elif choice == "2":
        print("\nüß™ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤...")
        test_tools_directly()
        
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

if __name__ == "__main__":
    try:
        run_example()
    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
