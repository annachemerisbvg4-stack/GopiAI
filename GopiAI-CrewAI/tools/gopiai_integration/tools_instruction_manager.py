"""
üõ†Ô∏è Tools Instruction Manager
–°–∏—Å—Ç–µ–º–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –ø–æ–¥–≥—Ä—É–∑–∫–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ GopiAI
"""

import logging
import json
import os
from typing import Dict, List, Optional, Any
from datetime import datetime

logger = logging.getLogger(__name__)

class ToolsInstructionManager:
    """
    –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤.
    –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é –ø–æ–¥–≥—Ä—É–∑–∫—É –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.
    """
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π"""
        self.logger = logging.getLogger(__name__)
        self._tools_cache = {}
        self._last_update = None
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
        self.base_dir = os.path.dirname(os.path.abspath(__file__))
        self.instructions_dir = os.path.join(self.base_dir, "tool_instructions")
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        os.makedirs(self.instructions_dir, exist_ok=True)
        
        self.logger.info("‚úÖ ToolsInstructionManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    def get_tools_summary(self) -> Dict[str, str]:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—Ä–∞—Ç–∫–∏–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞.
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è –ò–ò —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏.
        
        Returns:
            Dict[str, str]: –°–ª–æ–≤–∞—Ä—å {tool_name: brief_description}
        """
        return {
            "filesystem_tools": "–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: —á—Ç–µ–Ω–∏–µ, –∑–∞–ø–∏—Å—å, –ø–æ–∏—Å–∫, –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ, —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤",
            "local_mcp_tools": "–í–µ–±-—Å–∫—Ä–∞–ø–∏–Ω–≥ –∏ API –∫–ª–∏–µ–Ω—Ç: –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å –≤–µ–±-—Å–∞–π—Ç–æ–≤, HTTP –∑–∞–ø—Ä–æ—Å—ã, –∞–Ω–∞–ª–∏–∑ URL",
            "browser_tools": "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –±—Ä–∞—É–∑–µ—Ä–∞: –Ω–∞–≤–∏–≥–∞—Ü–∏—è, –∫–ª–∏–∫–∏, –≤–≤–æ–¥, —Å–∫—Ä–∏–Ω—à–æ—Ç—ã, JavaScript, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Selenium/Playwright",
            "web_search": "–ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ: Google, Bing, DuckDuckGo, Yandex —Å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏",
            "page_analyzer": "–ê–Ω–∞–ª–∏–∑ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü: SEO, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –∫–æ–Ω—Ç–µ–Ω—Ç"
        }
    
    def get_tool_detailed_instructions(self, tool_name: str) -> Optional[str]:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
        –ü–æ–¥–≥—Ä—É–∂–∞–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –ò–ò.
        
        Args:
            tool_name (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
            
        Returns:
            Optional[str]: –î–µ—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏–ª–∏ None –µ—Å–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
        """
        instructions = {
            "filesystem_tools": self._get_filesystem_instructions(),
            "local_mcp_tools": self._get_local_mcp_instructions(),
            "browser_tools": self._get_browser_instructions(),
            "web_search": self._get_web_search_instructions(),
            "page_analyzer": self._get_page_analyzer_instructions()
        }
        
        if tool_name in instructions:
            self.logger.info(f"üìñ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–µ—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è {tool_name}")
            return instructions[tool_name]
        
        self.logger.warning(f"‚ö†Ô∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è {tool_name} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return None
    
    def _get_filesystem_instructions(self) -> str:
        """–î–µ—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è filesystem_tools"""
        return """
# üìÅ Filesystem Tools - –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏

## –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- **–ß—Ç–µ–Ω–∏–µ/–∑–∞–ø–∏—Å—å —Ñ–∞–π–ª–æ–≤**: read_file(), write_file(), append_file()
- **JSON/CSV –æ–ø–µ—Ä–∞—Ü–∏–∏**: read_json(), write_json(), read_csv(), write_csv()
- **–ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤**: find_files(), search_in_files()
- **–ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ**: create_zip(), extract_zip()
- **–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ**: backup_file(), restore_backup()
- **–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤**: compare_files(), get_file_diff()
- **–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ**: get_file_info(), get_directory_tree()
- **–•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ**: calculate_file_hash()

## –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

### –ß—Ç–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å —Ñ–∞–π–ª–æ–≤:
```python
# –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
content = filesystem_tools.read_file("/path/to/file.txt")

# –ó–∞–ø–∏—Å—å —Ñ–∞–π–ª–∞
filesystem_tools.write_file("/path/to/output.txt", "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞")

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫ —Ñ–∞–π–ª—É
filesystem_tools.append_file("/path/to/log.txt", "–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å")
```

### –†–∞–±–æ—Ç–∞ —Å JSON:
```python
# –ß—Ç–µ–Ω–∏–µ JSON
data = filesystem_tools.read_json("/path/to/data.json")

# –ó–∞–ø–∏—Å—å JSON
filesystem_tools.write_json("/path/to/output.json", {"key": "value"})
```

### –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤:
```python
# –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ –ø–æ –º–∞—Å–∫–µ
files = filesystem_tools.find_files("/directory", "*.py")

# –ü–æ–∏—Å–∫ —Ç–µ–∫—Å—Ç–∞ –≤ —Ñ–∞–π–ª–∞—Ö
results = filesystem_tools.search_in_files("/directory", "search_pattern")
```

### –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ:
```python
# –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
filesystem_tools.create_zip("/path/to/archive.zip", ["/file1.txt", "/file2.txt"])

# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
filesystem_tools.extract_zip("/path/to/archive.zip", "/extract/to/")
```

## ‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è:
- –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—É—Ç–∏
- –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º
- –î–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ—Ç–æ–∫–æ–≤–æ–µ —á—Ç–µ–Ω–∏–µ
- –î–µ–ª–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø–µ—Ä–µ–¥ –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º
"""
    
    def _get_local_mcp_instructions(self) -> str:
        """–î–µ—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è local_mcp_tools"""
        return """
# üåê Local MCP Tools - –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏

## –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- **Web Scraping**: –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞, —Å—Å—ã–ª–æ–∫, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, —Ç–∞–±–ª–∏—Ü, —Ñ–æ—Ä–º
- **HTTP API Client**: GET, POST, PUT, DELETE, PATCH –∑–∞–ø—Ä–æ—Å—ã
- **URL Analyzer**: –∞–Ω–∞–ª–∏–∑ —Å—Ç–∞—Ç—É—Å–∞, –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, robots.txt, sitemap

## Web Scraper - –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

### –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:
```python
# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤—Å–µ–≥–æ —Ç–µ–∫—Å—Ç–∞
text = local_mcp_tools.call_tool("web_scraper", {
    "action": "extract_text",
    "url": "https://example.com"
})

# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–æ CSS —Å–µ–ª–µ–∫—Ç–æ—Ä—É
content = local_mcp_tools.call_tool("web_scraper", {
    "action": "extract_custom",
    "url": "https://example.com",
    "selector": "h1, .content"
})
```

### –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:
```python
# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫
links = local_mcp_tools.call_tool("web_scraper", {
    "action": "extract_links",
    "url": "https://example.com"
})

# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
tables = local_mcp_tools.call_tool("web_scraper", {
    "action": "extract_tables",
    "url": "https://example.com"
})
```

## API Client - –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

### HTTP –∑–∞–ø—Ä–æ—Å—ã:
```python
# GET –∑–∞–ø—Ä–æ—Å
response = local_mcp_tools.call_tool("api_client", {
    "method": "GET",
    "url": "https://api.example.com/data",
    "headers": {"Authorization": "Bearer token"}
})

# POST –∑–∞–ø—Ä–æ—Å
response = local_mcp_tools.call_tool("api_client", {
    "method": "POST",
    "url": "https://api.example.com/create",
    "data": {"name": "test", "value": 123},
    "headers": {"Content-Type": "application/json"}
})
```

## URL Analyzer - –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

### –ê–Ω–∞–ª–∏–∑ URL:
```python
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
status = local_mcp_tools.call_tool("url_analyzer", {
    "action": "check_status",
    "url": "https://example.com"
})

# –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
performance = local_mcp_tools.call_tool("url_analyzer", {
    "action": "analyze_performance",
    "url": "https://example.com"
})
```

## ‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è:
- –°–æ–±–ª—é–¥–∞–π—Ç–µ robots.txt –∏ —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∞–π—Ç–æ–≤
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑—É–º–Ω—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
- –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –æ—à–∏–±–∫–∏ —Å–µ—Ç–∏ –∏ —Ç–∞–π–º–∞—É—Ç—ã
- –î–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤ –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∫–æ–¥—ã –æ—Ç–≤–µ—Ç–æ–≤
"""
    
    def _get_browser_instructions(self) -> str:
        """–î–µ—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è browser_tools"""
        return """
# üåê Browser Tools - –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏

## –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –¥–≤–∏–∂–∫–∞**: Playwright ‚Üí Selenium ‚Üí requests
- **–ù–∞–≤–∏–≥–∞—Ü–∏—è –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ**: –∫–ª–∏–∫–∏, –≤–≤–æ–¥, –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
- **–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö**: —Ç–µ–∫—Å—Ç, —ç–ª–µ–º–µ–Ω—Ç—ã, —Å–∫—Ä–∏–Ω—à–æ—Ç—ã
- **JavaScript –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ**: custom —Å–∫—Ä–∏–ø—Ç—ã
- **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ cookies**: –ø–æ–ª—É—á–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞

## GopiAIBrowserTool - –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

### –ë–∞–∑–æ–≤–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è:
```python
# –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
browser_tools._run("navigate", "https://example.com")

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
browser_tools._run("wait", "", "", 3)
```

### –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏:
```python
# –ö–ª–∏–∫ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É
browser_tools._run("click", "button.submit")

# –í–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞
browser_tools._run("type", "input[name='search']", "–ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å")

# –ü—Ä–æ–∫—Ä—É—Ç–∫–∞
browser_tools._run("scroll", "down")  # –∏–ª–∏ "up", "top", "bottom"
```

### –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö:
```python
# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
text = browser_tools._run("extract", "page")

# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É
content = browser_tools._run("extract", "h1, .content")

# –°–∫—Ä–∏–Ω—à–æ—Ç
browser_tools._run("screenshot", "screenshot.png")
```

### JavaScript –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ:
```python
# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ JavaScript
result = browser_tools._run("execute_js", "", "return document.title")

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ JS
data = browser_tools._run("execute_js", "", "return {title: document.title, url: window.location.href}")
```

## Web Search Tool - –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

### –ü–æ–∏—Å–∫ –≤ —Ä–∞–∑–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö:
```python
# –ü–æ–∏—Å–∫ –≤ Google
results = web_search._run("search", "google", "CrewAI documentation")

# –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –≤ Bing
results = web_search._run("quick_search", "bing", "Python tutorials")
```

## Page Analyzer - –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

### –†–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –∞–Ω–∞–ª–∏–∑–∞:
```python
# –û–±—â–∏–π –∞–Ω–∞–ª–∏–∑
summary = page_analyzer._run("summary", "https://example.com")

# SEO –∞–Ω–∞–ª–∏–∑
seo = page_analyzer._run("seo", "https://example.com")

# –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
performance = page_analyzer._run("performance", "https://example.com")

# –ê–Ω–∞–ª–∏–∑ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
accessibility = page_analyzer._run("accessibility", "https://example.com")
```

## ‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è:
- **–í—ã–±–æ—Ä –¥–≤–∏–∂–∫–∞**: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ browser_type="auto" –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–±–æ—Ä–∞
- **Headless —Ä–µ–∂–∏–º**: –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω, –æ—Ç–∫–ª—é—á–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
- **–û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤**: –±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—á–∏—â–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
- **–°–µ–ª–µ–∫—Ç–æ—Ä—ã**: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ CSS —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –∏–ª–∏ XPath
- **–¢–∞–π–º–∞—É—Ç—ã**: —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ —Ä–∞–∑—É–º–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –æ–∂–∏–¥–∞–Ω–∏—è
"""
    
    def _get_web_search_instructions(self) -> str:
        """–î–µ—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è web_search"""
        return """
# üîç Web Search - –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏

## –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–æ–∏—Å–∫–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã:
- **Google** - –Ω–∞–∏–±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
- **Bing** - —Ö–æ—Ä–æ—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –±—ã—Å—Ç—Ä–∞—è —Ä–∞–±–æ—Ç–∞
- **DuckDuckGo** - –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –ø–æ–∏—Å–∫
- **Yandex** - –ª—É—á—à–µ –¥–ª—è —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞

## –¢–∏–ø—ã –ø–æ–∏—Å–∫–∞:

### –ü–æ–ª–Ω—ã–π –ø–æ–∏—Å–∫ (—á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä):
```python
# –î–µ—Ç–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ —Å –ø–æ–ª–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
results = web_search._run("search", "google", "machine learning tutorials")
```

### –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ (—á–µ—Ä–µ–∑ requests):
```python
# –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞
results = web_search._run("quick_search", "bing", "Python documentation")
```

## –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:
- **Google**: –ª—É—á—à–∏–π –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
- **Bing**: —Ö–æ—Ä–æ—à –¥–ª—è –æ–±—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
- **DuckDuckGo**: –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å
- **Yandex**: –¥–ª—è —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞

## ‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è:
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
- –î–ª—è –±—ã—Å—Ç—Ä—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–π—Ç–µ quick_search
- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ
"""
    
    def _get_page_analyzer_instructions(self) -> str:
        """–î–µ—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è page_analyzer"""
        return """
# üìä Page Analyzer - –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏

## –¢–∏–ø—ã –∞–Ω–∞–ª–∏–∑–∞:

### summary - –û–±—â–∏–π –∞–Ω–∞–ª–∏–∑:
```python
analyzer._run("summary", "https://example.com")
```
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –∑–∞–≥–æ–ª–æ–≤–æ–∫, –æ–ø–∏—Å–∞–Ω–∏–µ, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Å—ã–ª–æ–∫ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

### seo - SEO –∞–Ω–∞–ª–∏–∑:
```python
analyzer._run("seo", "https://example.com")
```
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –∞–Ω–∞–ª–∏–∑ title, meta description, H1, alt –∞—Ç—Ä–∏–±—É—Ç–æ–≤

### performance - –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:
```python
analyzer._run("performance", "https://example.com")
```
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Å—É—Ä—Å–æ–≤, DOM —ç–ª–µ–º–µ–Ω—Ç–æ–≤

### accessibility - –ê–Ω–∞–ª–∏–∑ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:
```python
analyzer._run("accessibility", "https://example.com")
```
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –ø—Ä–æ–±–ª–µ–º—ã —Å alt, labels, —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤

### security - –ê–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:
```python
analyzer._run("security", "https://example.com")
```
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –ø—Ä–æ–≤–µ—Ä–∫–∞ HTTPS, CSRF –∑–∞—â–∏—Ç—ã, –≤–Ω–µ—à–Ω–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤

### links - –ê–Ω–∞–ª–∏–∑ —Å—Å—ã–ª–æ–∫:
```python
analyzer._run("links", "https://example.com")
```
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∏ –≤–Ω–µ—à–Ω–∏–µ —Å—Å—ã–ª–∫–∏

### forms - –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ä–º:
```python
analyzer._run("forms", "https://example.com")
```
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ä–º–∞—Ö –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ

### images - –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:
```python
analyzer._run("images", "https://example.com")
```
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: —Å–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏

### metadata - –ê–Ω–∞–ª–∏–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö:
```python
analyzer._run("metadata", "https://example.com")
```
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –≤—Å–µ meta —Ç–µ–≥–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã

## ‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è:
- –ê–Ω–∞–ª–∏–∑ –º–æ–∂–µ—Ç –∑–∞–Ω–∏–º–∞—Ç—å –≤—Ä–µ–º—è –¥–ª—è –±–æ–ª—å—à–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
- –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–µ—Ç—Ä–∏–∫–∏ —Ç—Ä–µ–±—É—é—Ç –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–≤–∏—Å—è—Ç –æ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ JavaScript –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
"""
    
    def get_tools_for_prompt(self, include_detailed: bool = False) -> str:
        """
        –§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤ –ø—Ä–æ–º–ø—Ç.
        
        Args:
            include_detailed (bool): –í–∫–ª—é—á–∞—Ç—å –ª–∏ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
            
        Returns:
            str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –æ–± –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö
        """
        tools_summary = self.get_tools_summary()
        
        prompt_text = "\n## üõ†Ô∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:\n\n"
        
        for tool_name, description in tools_summary.items():
            prompt_text += f"**{tool_name}**: {description}\n"
        
        prompt_text += "\nüí° **–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å**: –ö–æ–≥–¥–∞ –≤—ã–±–∏—Ä–∞–µ—à—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, —è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂—É –¥–µ—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.\n"
        
        return prompt_text
    
    def save_tools_cache(self) -> bool:
        """
        –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–µ—à –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –≤ —Ñ–∞–π–ª –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞.
        
        Returns:
            bool: –£—Å–ø–µ—à–Ω–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        """
        try:
            cache_file = os.path.join(self.instructions_dir, "tools_cache.json")
            cache_data = {
                "tools_summary": self.get_tools_summary(),
                "last_update": datetime.now().isoformat(),
                "version": "1.0"
            }
            
            with open(cache_file, 'w', encoding='utf-8') as f:
                json.dump(cache_data, f, ensure_ascii=False, indent=2)
            
            self.logger.info(f"üíæ –ö–µ—à –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ {cache_file}")
            return True
            
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–µ—à–∞: {e}")
            return False

# –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
tools_instruction_manager = ToolsInstructionManager()

def get_tools_instruction_manager() -> ToolsInstructionManager:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä ToolsInstructionManager.
    
    Returns:
        ToolsInstructionManager: –≠–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
    """
    return tools_instruction_manager
