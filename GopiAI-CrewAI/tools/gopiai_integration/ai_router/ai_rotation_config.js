/**
 * üîß –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø AI –ü–†–û–í–ê–ô–î–ï–†–û–í
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Å–µ—Ö –≤–∞—à–∏—Ö –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã—Ö free tier –∫–ª—é—á–µ–π
 * –û–±–Ω–æ–≤–∏—Ç–µ API –∫–ª—é—á–∏ –Ω–∞ —Å–≤–æ–∏ —Ä–µ–∞–ª—å–Ω—ã–µ!
 */

const AI_PROVIDERS_CONFIG = {
    providers: [
        // ü•á TIER 1 - –°–ê–ú–´–ï –ú–û–©–ù–´–ï
        {
            name: 'Novita-Qwen',
            type: 'openai-compatible',
            endpoint: 'https://api.novita.ai/v3/openai/chat/completions',
            apiKey: 'YOUR_NOVITA_API_KEY_HERE', // üîë –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –∫–ª—é—á
            model: 'qwen/qwen-2.5-coder-32b-instruct',
            priority: 1, // –í—ã—Å—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
            status: 'active',
            limits: {
                rpm: 1000,        // 1000 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É
                tpm: 50000000,    // 50–ú —Ç–æ–∫–µ–Ω–æ–≤ –≤ –º–∏–Ω—É—Ç—É
                daily: 1440000    // ~1.4–ú –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å
            },
            headers: {
                'User-Agent': 'GopiAI/1.0'
            },
            features: ['chat', 'code', 'reasoning'],
            description: 'üß† –ú–æ—â–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –∫–æ–¥–∞ –∏ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏–π'
        },

        {
            name: 'Groq-Lightning',
            type: 'openai-compatible', 
            endpoint: 'https://api.groq.com/openai/v1/chat/completions',
            apiKey: 'YOUR_GROQ_API_KEY_HERE', // üîë –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –∫–ª—é—á
            model: 'llama-3.3-70b-versatile', // ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ! (llama-3.1 —É—Å—Ç–∞—Ä–µ–ª —Å 24.01.2025)
            priority: 2,
            status: 'active',
            limits: {
                rpm: 30,          // 30 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É
                tpm: 6000,        // 6K —Ç–æ–∫–µ–Ω–æ–≤ –≤ –º–∏–Ω—É—Ç—É
                daily: 43200      // ~43K –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å
            },
            features: ['chat', 'fast-response'],
            description: '‚ö° –°–≤–µ—Ä—Ö–±—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞'
        },

        // ü•à TIER 2 - –ù–ê–î–ï–ñ–ù–´–ï –†–ï–ó–ï–†–í–´
        {
            name: 'Google-Gemini',
            type: 'gemini',
            endpoint: 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent',
            apiKey: 'YOUR_GEMINI_API_KEY_HERE', // üîë –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –∫–ª—é—á
            model: 'gemini-1.5-flash',
            priority: 3,
            status: 'active',
            limits: {
                rpm: 15,          // 15 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É
                tpm: 1000000,     // 1–ú —Ç–æ–∫–µ–Ω–æ–≤ –≤ –º–∏–Ω—É—Ç—É
                daily: 21600      // ~21K –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å
            },
            headers: {
                'Content-Type': 'application/json'
            },
            features: ['chat', 'multimodal', 'long-context'],
            description: 'üß† –£–º–Ω—ã–π Google AI —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π'
        },

        {
            name: 'Cohere-Command',
            type: 'cohere',
            endpoint: 'https://api.cohere.ai/v1/chat',
            apiKey: 'YOUR_COHERE_API_KEY_HERE', // üîë –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –∫–ª—é—á
            model: 'command-r-plus',
            priority: 4,
            status: 'active',
            limits: {
                rpm: 20,          // 20 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É (–ø—Ä–∏–º–µ—Ä–Ω–æ)
                tpm: 40000,       // 40K —Ç–æ–∫–µ–Ω–æ–≤ –≤ –º–∏–Ω—É—Ç—É
                daily: 28800      // ~28K –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å
            },
            features: ['chat', 'rag', 'multilingual'],
            description: 'üí¨ –û—Ç–ª–∏—á–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –¥–∏–∞–ª–æ–≥–æ–≤ –∏ RAG'
        },

        {
            name: 'Cerebras-Llama',
            type: 'openai-compatible',
            endpoint: 'https://api.cerebras.ai/v1/chat/completions',
            apiKey: 'YOUR_CEREBRAS_API_KEY_HERE', // üîë –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –∫–ª—é—á
            model: 'llama-3.3-70b', // ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ! (—Ç–µ–ø–µ—Ä—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è 3.3)
            priority: 5,
            status: 'active',
            limits: {
                rpm: 30,          // 30 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É (–ø—Ä–∏–º–µ—Ä–Ω–æ)
                tpm: 60000,       // 60K —Ç–æ–∫–µ–Ω–æ–≤ –≤ –º–∏–Ω—É—Ç—É
                daily: 43200      // ~43K –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å
            },
            features: ['chat', 'reasoning'],
            description: 'ü¶ô –ú–æ—â–Ω–∞—è Llama –º–æ–¥–µ–ª—å –æ—Ç Cerebras'
        },

        // ü•â TIER 3 - –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –ò –†–ï–ó–ï–†–í–ù–´–ï
        {
            name: 'HuggingFace-Mistral',
            type: 'openai-compatible',
            endpoint: 'https://api-inference.huggingface.co/models/mistralai/Mistral-7B-Instruct-v0.1',
            apiKey: 'YOUR_HF_API_KEY_HERE', // üîë –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –∫–ª—é—á
            model: 'mistralai/Mistral-7B-Instruct-v0.1',
            priority: 6,
            status: 'backup', // –†–µ–∑–µ—Ä–≤–Ω—ã–π
            limits: {
                rpm: 10,          // 10 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É
                tpm: 20000,       // 20K —Ç–æ–∫–µ–Ω–æ–≤ –≤ –º–∏–Ω—É—Ç—É
                daily: 14400      // ~14K –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å
            },
            features: ['chat', 'instruct'],
            description: 'ü§ñ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –º–æ–¥–µ–ª—å Mistral —á–µ—Ä–µ–∑ HuggingFace'
        }
    ],

    // üéØ –ù–ê–°–¢–†–û–ô–ö–ò –†–û–£–¢–ò–ù–ì–ê
    routing: {
        // –°—Ç—Ä–∞—Ç–µ–≥–∏—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
        strategy: 'priority-based', // 'priority-based', 'round-robin', 'least-used'
        
        // –ë—É—Ñ–µ—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (% –æ—Ç –ª–∏–º–∏—Ç–∞)
        safetyBuffers: {
            rpm: 20,  // –û—Å—Ç–∞–≤–ª—è–µ–º 20% –±—É—Ñ–µ—Ä –¥–ª—è RPM
            tpm: 20   // –û—Å—Ç–∞–≤–ª—è–µ–º 20% –±—É—Ñ–µ—Ä –¥–ª—è TPM
        },
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ retry
        retrySettings: {
            maxRetries: 3,
            retryDelay: 1000, // –º—Å
            backoffMultiplier: 2
        },
        
        // Timeouts
        timeouts: {
            requestTimeout: 30000,  // 30 —Å–µ–∫—É–Ω–¥
            providerTimeout: 5000   // 5 —Å–µ–∫—É–Ω–¥ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
        }
    },

    // üéõÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò –ü–û –¢–ò–ü–ê–ú –ó–ê–î–ê–ß
    taskProfiles: {
        'chat': {
            preferredProviders: ['Groq-Lightning', 'Novita-Qwen'],
            maxTokens: 1000,
            temperature: 0.7
        },
        'code': {
            preferredProviders: ['Novita-Qwen', 'Cerebras-Llama'],
            maxTokens: 2000,
            temperature: 0.3
        },
        'creative': {
            preferredProviders: ['Google-Gemini', 'Cohere-Command'],
            maxTokens: 1500,
            temperature: 0.9
        },
        'analysis': {
            preferredProviders: ['Google-Gemini', 'Novita-Qwen'],
            maxTokens: 2500,
            temperature: 0.4
        }
    },

    // üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì
    monitoring: {
        enableLogging: true,
        logLevel: 'info', // 'debug', 'info', 'warn', 'error'
        statsUpdateInterval: 60000, // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
        
        // –ê–ª–µ—Ä—Ç—ã
        alerts: {
            usageThreshold: 80, // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ 80% –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            errorThreshold: 5,  // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ 5 –æ—à–∏–±–∫–∞—Ö –ø–æ–¥—Ä—è–¥
            enableNotifications: true
        }
    }
};

// üéØ –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° –ö–û–ù–§–ò–ì–û–ú
const ConfigManager = {
    /**
     * üîë –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ API –∫–ª—é—á–µ–π
     */
    updateApiKeys(keyMapping) {
        AI_PROVIDERS_CONFIG.providers.forEach(provider => {
            if (keyMapping[provider.name]) {
                provider.apiKey = keyMapping[provider.name];
                console.log(`üîë –û–±–Ω–æ–≤–ª–µ–Ω –∫–ª—é—á –¥–ª—è ${provider.name}`);
            }
        });
    },

    /**
     * ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
     */
    validateConfig() {
        const issues = [];
        
        AI_PROVIDERS_CONFIG.providers.forEach(provider => {
            if (!provider.apiKey || provider.apiKey.includes('YOUR_')) {
                issues.push(`‚ùå ${provider.name}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω API –∫–ª—é—á`);
            }
            
            if (!provider.endpoint) {
                issues.push(`‚ùå ${provider.name}: –Ω–µ —É–∫–∞–∑–∞–Ω endpoint`);
            }
        });
        
        if (issues.length > 0) {
            console.warn('‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:');
            issues.forEach(issue => console.warn(issue));
            return false;
        }
        
        console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞');
        return true;
    },

    /**
     * üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
     */
    getActiveProviders() {
        return AI_PROVIDERS_CONFIG.providers.filter(p => p.status === 'active');
    },

    /**
     * üéØ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –¥–ª—è –∑–∞–¥–∞—á–∏
     */
    getProvidersForTask(taskType) {
        const profile = AI_PROVIDERS_CONFIG.taskProfiles[taskType];
        if (!profile) return this.getActiveProviders();
        
        const preferred = profile.preferredProviders;
        return AI_PROVIDERS_CONFIG.providers.filter(p => 
            preferred.includes(p.name) && p.status === 'active'
        );
    }
};

// üé® –ë–´–°–¢–†–´–ï –ù–ê–°–¢–†–û–ô–ö–ò
const QUICK_CONFIGS = {
    // üöÄ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    'high-performance': {
        strategy: 'priority-based',
        safetyBuffers: { rpm: 10, tpm: 10 }, // –ú–µ–Ω—å—à–µ –±—É—Ñ–µ—Ä—ã
        preferProviders: ['Novita-Qwen', 'Groq-Lightning']
    },
    
    // üõ°Ô∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å  
    'high-reliability': {
        strategy: 'round-robin',
        safetyBuffers: { rpm: 30, tpm: 30 }, // –ë–æ–ª—å—à–µ –±—É—Ñ–µ—Ä—ã
        enableAllBackups: true
    },
    
    // üí∞ –≠–∫–æ–Ω–æ–º–∏—è –ª–∏–º–∏—Ç–æ–≤
    'conservative': {
        strategy: 'least-used',
        safetyBuffers: { rpm: 40, tpm: 40 },
        preferFreeProviders: true
    }
};

// üìù –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ù–ê–°–¢–†–û–ô–ö–ï
const SETUP_INSTRUCTIONS = `
üöÄ –ë–´–°–¢–†–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê AI ROUTER:

1Ô∏è‚É£ –û–±–Ω–æ–≤–∏—Ç–µ API –∫–ª—é—á–∏:
   - –û—Ç–∫—Ä–æ–π—Ç–µ ai_rotation_config.js
   - –ó–∞–º–µ–Ω–∏—Ç–µ YOUR_*_API_KEY_HERE –Ω–∞ –≤–∞—à–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏
   
2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:
   - high-performance: –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
   - high-reliability: –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏  
   - conservative: –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –ª–∏–º–∏—Ç–æ–≤

3Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:
   const config = AI_PROVIDERS_CONFIG;
   const router = new AIRouter(config);
   
4Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
   const result = await router.chat("–ü—Ä–∏–≤–µ—Ç!");
   console.log(result.response);

üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–æ—Ç–æ–≤—ã! –û—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –≤—Å—Ç–∞–≤–∏—Ç—å –≤–∞—à–∏ –∫–ª—é—á–∏!
`;

// üéØ –≠–ö–°–ü–û–†–¢ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
if (typeof module !== 'undefined' && module.exports) {
    module.exports = { 
        AI_PROVIDERS_CONFIG, 
        ConfigManager, 
        QUICK_CONFIGS,
        SETUP_INSTRUCTIONS 
    };
} else if (typeof window !== 'undefined') {
    window.AI_PROVIDERS_CONFIG = AI_PROVIDERS_CONFIG;
    window.ConfigManager = ConfigManager;
    window.QUICK_CONFIGS = QUICK_CONFIGS;
    window.SETUP_INSTRUCTIONS = SETUP_INSTRUCTIONS;
}

console.log('üîß AI Router Config –∑–∞–≥—Ä—É–∂–µ–Ω!');
console.log(SETUP_INSTRUCTIONS);