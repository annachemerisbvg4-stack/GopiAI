import sys
import os
import subprocess
import logging

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

print("=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –í–´–ü–û–õ–ù–ï–ù–ò–Ø –ö–û–ú–ê–ù–î ===")

# –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–π subprocess
print("\n1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π subprocess...")
try:
    result = subprocess.run(
        "mkdir C:\\Users\\crazy\\GOPI_AI_MODULES\\TEST_SUBPROCESS",
        shell=True,
        capture_output=True,
        text=True,
        timeout=30,
        cwd=os.getcwd()
    )
    print(f"–ö–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞: {result.returncode}")
    print(f"Stdout: '{result.stdout}'")
    print(f"Stderr: '{result.stderr}'")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    test_path = r"C:\Users\crazy\GOPI_AI_MODULES\TEST_SUBPROCESS"
    if os.path.exists(test_path):
        print("‚úÖ –ü–∞–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ subprocess!")
    else:
        print("‚ùå –ü–∞–ø–∫–∞ –ù–ï —Å–æ–∑–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ subprocess!")
        
except Exception as e:
    print(f"–û—à–∏–±–∫–∞ subprocess: {e}")

# –¢–µ—Å—Ç 2: –¢–µ—Å—Ç–∏—Ä—É–µ–º CommandExecutor —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –ª–æ–≥–∞–º–∏
print("\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º CommandExecutor...")
sys.path.append('.')

try:
    from tools.gopiai_integration.command_executor import CommandExecutor
    
    ce = CommandExecutor()
    print("CommandExecutor —Å–æ–∑–¥–∞–Ω")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É
    command_data = {
        'tool': 'terminal', 
        'params': {'command': 'mkdir C:\\Users\\crazy\\GOPI_AI_MODULES\\TEST_COMMANDEXECUTOR'}
    }
    
    print(f"–í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É: {command_data}")
    result = ce.execute_command(command_data)
    
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç CommandExecutor:")
    print(f"  success: {result.get('success')}")
    print(f"  output: '{result.get('output')}'")
    print(f"  error: '{result.get('error')}'")
    print(f"  return_code: {result.get('return_code')}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    test_path2 = r"C:\Users\crazy\GOPI_AI_MODULES\TEST_COMMANDEXECUTOR"
    if os.path.exists(test_path2):
        print("‚úÖ –ü–∞–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ CommandExecutor!")
    else:
        print("‚ùå –ü–∞–ø–∫–∞ –ù–ï —Å–æ–∑–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ CommandExecutor!")
        
except Exception as e:
    print(f"–û—à–∏–±–∫–∞ CommandExecutor: {e}")
    import traceback
    traceback.print_exc()

# –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
print(f"\n3. –¢–µ–∫—É—â–∞—è —Ä–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")

# –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å
print("\n4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å...")
test_write_path = r"C:\Users\crazy\GOPI_AI_MODULES\test_write.txt"
try:
    with open(test_write_path, 'w') as f:
        f.write("test")
    if os.path.exists(test_write_path):
        print("‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –µ—Å—Ç—å!")
        os.remove(test_write_path)
    else:
        print("‚ùå –§–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–ª—Å—è!")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏: {e}")

# –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–∞–ø–∫–∏
print("\n5. –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ü–µ–ª–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:")
target_dir = r"C:\Users\crazy\GOPI_AI_MODULES"
try:
    items = os.listdir(target_dir)
    for item in items:
        if item.startswith('TEST'):
            print(f"  üìÅ {item}")
except Exception as e:
    print(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {e}")

print("\n=== –ö–û–ù–ï–¶ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò ===")
