#!/usr/bin/env python3
"""
–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ —É–ª—É—á—à–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ LLM.
"""
import os
import sys
from pathlib import Path

def print_migration_guide():
    """–í—ã–≤–æ–¥ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –ø–æ –º–∏–≥—Ä–∞—Ü–∏–∏."""
    print("üîÑ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ —É–ª—É—á—à–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ LLM")
    print("=" * 80)
    print()
    
    print("üöÄ –ù–û–í–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:")
    print("   ‚úÖ –°—Ç–∞–±–∏–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É UI –∏ Backend")
    print("   ‚úÖ –ú—è–≥–∫–∏–π —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –º–æ–¥–µ–ª–µ–π —Å –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ–º –ª–∏–º–∏—Ç–æ–≤")
    print("   ‚úÖ –ù–∞–¥–µ–∂–Ω—ã–π —Ü–∏–∫–ª API –∫–ª—é—á–µ–π –±–µ–∑ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤")
    print("   ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ä–µ–≥—Ä–µ—Å—Å–∏–π")
    print()
    
    print("üìã –®–ê–ì–ò –î–õ–Ø –ú–ò–ì–†–ê–¶–ò–ò:")
    print()
    print("1. –ó–ê–ú–ï–ù–ê –ò–ú–ü–û–†–¢–û–í:")
    print("   –ë—ã–ª–æ:")
    print("   >>> from llm_rotation_config import ...")
    print()
    print("   –°—Ç–∞–ª–æ:")
    print("   >>> from llm_rotation_config_fixed import ...")
    print()
    
    print("2. –ù–ê–°–¢–†–û–ô–ö–ê API –ö–õ–Æ–ß–ï–ô:")
    print("   –î–æ–±–∞–≤—å—Ç–µ –≤ –≤–∞—à .env —Ñ–∞–π–ª:")
    print("   >>> GEMINI_API_KEY=–≤–∞—à_–∫–ª—é—á_gemini")
    print("   >>> OPENROUTER_API_KEY=–≤–∞—à_–∫–ª—é—á_openrouter")
    print()
    
    print("3. –ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´:")
    print("   Windows:")
    print("   >>> start_model_switching_system.bat")
    print()
    print("   Linux/Mac:")
    print("   >>> python start_model_switching_system.py")
    print()
    
    print("4. –ü–†–û–í–ï–†–ö–ê –†–ê–ë–û–¢–´:")
    print("   >>> python run_all_tests.py")
    print()
    
    print("üìö –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø:")
    print("   - MODEL_SWITCHING_README.md - –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã")
    print("   - MODEL_SWITCHING_FINAL_REPORT.md - —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç")
    print()
    
    print("üîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï:")
    print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:")
    print("   >>> cd GopiAI-CrewAI")
    print("   >>> python test_model_switching.py")
    print("   >>> python test_api_endpoints.py")
    print()

def check_current_setup():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    required_files = [
        "llm_rotation_config_fixed.py",
        "crewai_api_server.py", 
        "state_manager.py",
        "model_selector_widget.py"
    ]
    
    crewai_dir = Path(__file__).parent
    missing_files = []
    
    for file_name in required_files:
        file_path = crewai_dir / file_name
        if file_path.exists():
            print(f"‚úÖ {file_name} - –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"‚ùå {file_name} - –ù–ï –ù–ê–ô–î–ï–ù")
            missing_files.append(file_name)
    
    print()
    if missing_files:
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–æ–ª–Ω—É—é –≤–µ—Ä—Å–∏—é —Å–∏—Å—Ç–µ–º—ã.")
        return False
    else:
        print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã.")
        return True

def check_api_keys():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è API –∫–ª—é—á–µ–π."""
    print("üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–µ–π...")
    print()
    
    env_file = Path(__file__).parent.parent / ".env"
    if not env_file.exists():
        print("‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞.")
        return False
    
    try:
        with open(env_file, 'r', encoding='utf-8') as f:
            content = f.read()
        
        keys_found = []
        if "GEMINI_API_KEY" in content:
            keys_found.append("GEMINI_API_KEY")
        if "OPENROUTER_API_KEY" in content:
            keys_found.append("OPENROUTER_API_KEY")
        
        if keys_found:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω—ã API –∫–ª—é—á–∏: {', '.join(keys_found)}")
            return True
        else:
            print("‚ö†Ô∏è  API –∫–ª—é—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ .env —Ñ–∞–π–ª–µ.")
            print("   –î–æ–±–∞–≤—å—Ç–µ —Å—Ç—Ä–æ–∫–∏:")
            print("   GEMINI_API_KEY=–≤–∞—à_–∫–ª—é—á_gemini")
            print("   OPENROUTER_API_KEY=–≤–∞—à_–∫–ª—é—á_openrouter")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è .env —Ñ–∞–π–ª–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üåü –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ —É–ª—É—á—à–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ LLM")
    print("=" * 70)
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if not check_current_setup():
        print("\n‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤.")
        return 1
    
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á–∏
    check_api_keys()
    
    print()
    print("-" * 70)
    
    # –í—ã–≤–æ–¥–∏–º —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –º–∏–≥—Ä–∞—Ü–∏–∏
    print_migration_guide()
    
    print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.")
    print("   –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ start_model_switching_system.bat (Windows)")
    print("   –∏–ª–∏ start_model_switching_system.py (Linux/Mac)")
    
    return 0

if __name__ == "__main__":
    sys.exit(main())
