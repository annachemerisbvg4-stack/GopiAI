#!/usr/bin/env python3
"""
üöÄ –ü—Ä–æ—Å—Ç–µ–π—à–∏–π —Ç–µ—Å—Ç CrewAI –±–µ–∑ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö LLM
–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
current_dir = Path(__file__).parent
sys.path.append(str(current_dir.parent))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
from dotenv import load_dotenv
load_dotenv(current_dir.parent / '.env')

def test_minimal_crew():
    """–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –±–µ–∑ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    print("üß™ –¢–µ—Å—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ crew...")
    
    try:
        from crewai import Agent, Task, Crew
        
        # –ê–≥–µ–Ω—Ç –ë–ï–ó –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ LLM - –ø—É—Å—Ç—å CrewAI —Å–∞–º –≤—ã–±–µ—Ä–µ—Ç
        agent = Agent(
            role="–ü–æ–º–æ—â–Ω–∏–∫",
            goal="–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å",
            backstory="–¢—ã –ø–æ–º–æ—â–Ω–∏–∫.",
            verbose=True
        )
        
        # –ü—Ä–æ—Å—Ç–∞—è –∑–∞–¥–∞—á–∞
        task = Task(
            description="–°–∫–∞–∂–∏ –ø—Ä–æ—Å—Ç–æ '–ü—Ä–∏–≤–µ—Ç!'",
            expected_output="–°–ª–æ–≤–æ '–ü—Ä–∏–≤–µ—Ç!'",
            agent=agent
        )
        
        # Crew
        crew = Crew(
            agents=[agent],
            tasks=[task],
            verbose=True
        )
        
        print("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ crew...")
        result = crew.kickoff()
        
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_with_openai():
    """–¢–µ—Å—Ç —Å OpenAI (–µ—Å–ª–∏ –µ—Å—Ç—å –∫–ª—é—á)"""
    print("üß™ –¢–µ—Å—Ç —Å OpenAI...")
    
    try:
        from crewai import Agent, Task, Crew
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á OpenAI
        openai_key = os.getenv("OPENAI_API_KEY")
        if not openai_key or "your_" in openai_key:
            print("‚ö†Ô∏è OpenAI –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç")
            return True
            
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è CrewAI
        os.environ["OPENAI_API_KEY"] = openai_key
        
        agent = Agent(
            role="–ü–æ–º–æ—â–Ω–∏–∫",
            goal="–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å",
            backstory="–¢—ã —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫.",
            verbose=True
        )
        
        task = Task(
            description="–°–∫–∞–∂–∏ '–ü—Ä–∏–≤–µ—Ç –æ—Ç OpenAI!'",
            expected_output="–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ",
            agent=agent
        )
        
        crew = Crew(
            agents=[agent],
            tasks=[task],
            verbose=True
        )
        
        print("üöÄ –ó–∞–ø—É—Å–∫ OpenAI crew...")
        result = crew.kickoff()
        
        print(f"‚úÖ OpenAI —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ OpenAI: {e}")
        return False

def main():
    """–ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"""
    print("üéØ === –ü–†–û–°–¢–û–ô CREWAI –¢–ï–°–¢ ===")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
    try:
        import crewai
        print(f"‚úÖ CrewAI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {crewai.__version__}")
    except ImportError:
        print("‚ùå CrewAI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return
    
    # –¢–µ—Å—Ç 1: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π
    if test_minimal_crew():
        print("‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø—Ä–æ—à–µ–ª!")
    else:
        print("‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è")
        
    # –¢–µ—Å—Ç 2: –° OpenAI
    if test_with_openai():
        print("‚úÖ OpenAI —Ç–µ—Å—Ç –ø—Ä–æ—à–µ–ª!")
    else:
        print("‚ùå OpenAI —Ç–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è")
    
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main()