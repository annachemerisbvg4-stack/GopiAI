#!/usr/bin/env python3
"""
üß™ –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç GithubSearchTool –±–µ–∑ –∏–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä–∞
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))
sys.path.insert(0, str(project_root / "tools"))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
from dotenv import load_dotenv
load_dotenv()

def test_direct_github_import():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç GithubSearchTool"""
    print("üîç –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ GithubSearchTool...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
    github_token = os.getenv('GITHUB_TOKEN')
    if not github_token or github_token == 'your_github_token_here':
        print("‚ùå GITHUB_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")
        return False
    
    print(f"‚úÖ GitHub —Ç–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω: {github_token[:8]}...")
    
    try:
        # –ü—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç –∏–∑ crewai_toolkit
        print("üì¶ –ü—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å GithubSearchTool...")
        
        from tools.crewai_toolkit.tools.github_search_tool.github_search_tool import GithubSearchTool
        print("‚úÖ GithubSearchTool –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä
        print("üõ†Ô∏è –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞...")
        github_tool = GithubSearchTool()
        print("‚úÖ –≠–∫–∑–µ–º–ø–ª—è—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã
        print(f"üìã –ù–∞–∑–≤–∞–Ω–∏–µ: {github_tool.name}")
        print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {github_tool.description}")
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫
        print("\nüîç –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫...")
        test_params = {
            'search_query': 'python machine learning',
            'github_repo': 'microsoft/vscode',
            'content_types': ['code', 'repo']
        }
        
        print(f"üéØ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞: {test_params}")
        
        # –í—ã–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç
        result = github_tool._run(**test_params)
        
        print("‚úÖ –ü–æ–∏—Å–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç (–ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤):")
        print("-" * 50)
        print(str(result)[:500])
        print("-" * 50)
        
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("üí° –ü—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ CrewAI Toolkit")
        return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
        print(f"üîß –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
        import traceback
        print(f"üîç –ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞: {traceback.format_exc()}")
        return False

def test_alternative_approach():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π crewai-tools"""
    print("\nüîÑ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ —á–µ—Ä–µ–∑ crewai-tools...")
    
    try:
        # –ü—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞
        from crewai_tools import GithubSearchTool as OfficialGithubSearchTool
        print("‚úÖ –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π GithubSearchTool –Ω–∞–π–¥–µ–Ω!")
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä
        github_tool = OfficialGithubSearchTool()
        print("‚úÖ –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–æ–∑–¥–∞–Ω!")
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫
        result = github_tool._run(
            search_query='python AI',
            github_repo='microsoft/vscode',
            content_types=['code']
        )
        
        print("‚úÖ –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {str(result)[:200]}...")
        
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ø–∞–∫–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä—è–º–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è GitHub –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤...")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç –∏–∑ –Ω–∞—à–µ–≥–æ toolkit
    success1 = test_direct_github_import()
    
    # –¢–µ—Å—Ç 2: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ø–∞–∫–µ—Ç
    success2 = test_alternative_approach()
    
    print("\n" + "=" * 60)
    print("üìä –ò–¢–û–ì–ò –ü–†–Ø–ú–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"   –ü—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç –∏–∑ toolkit: {'‚úÖ –£–°–ü–ï–•' if success1 else '‚ùå –ù–ï–£–î–ê–ß–ê'}")
    print(f"   –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π crewai-tools: {'‚úÖ –£–°–ü–ï–•' if success2 else '‚ùå –ù–ï–£–î–ê–ß–ê'}")
    
    if success1 or success2:
        print("\nüéâ –•–û–¢–Ø –ë–´ –û–î–ò–ù –ü–û–î–•–û–î –†–ê–ë–û–¢–ê–ï–¢!")
        if success2:
            print("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π crewai-tools –ø–∞–∫–µ—Ç")
    else:
        print("\n‚ö†Ô∏è –û–±–∞ –ø–æ–¥—Ö–æ–¥–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç - –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")
    
    input("\n–ù–∞–∂–º–∏ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
