#!/bin/bash
# üöÄ GopiAI-CrewAI Installation Script
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏

echo "üéØ === GOPIAI-CREWAI INSTALLATION ==="
echo "‚è∞ Starting installation: $(date)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.8+ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

PYTHON_VERSION=$(python3 -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')
echo "‚úÖ Python version: $PYTHON_VERSION"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ Python
if [[ $(echo "$PYTHON_VERSION < 3.8" | bc -l) -eq 1 ]]; then
    echo "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8+. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $PYTHON_VERSION"
    exit 1
fi

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

echo "üìÅ Working directory: $SCRIPT_DIR"

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "üîß Creating virtual environment..."
if [ ! -d "venv" ]; then
    python3 -m venv venv
    echo "‚úÖ Virtual environment created"
else
    echo "‚úÖ Virtual environment already exists"
fi

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "üîÑ Activating virtual environment..."
source venv/bin/activate

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip
echo "üì¶ Updating pip..."
pip install --upgrade pip

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üì¶ Installing dependencies..."
if [ -f "requirements.txt" ]; then
    pip install -r requirements.txt
    echo "‚úÖ Dependencies installed"
else
    echo "‚ùå requirements.txt not found"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–ø–æ–∫
echo "üìÅ Creating directories..."
mkdir -p memory
mkdir -p communication
mkdir -p cache
mkdir -p logs
echo "‚úÖ Directories created"

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ .env —Ñ–∞–π–ª–∞
echo "üîë Setting up environment file..."
if [ ! -f ".env" ]; then
    if [ -f ".env.example" ]; then
        cp .env.example .env
        echo "‚úÖ .env file created from example"
        echo "‚ö†Ô∏è  –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à–∏ API –∫–ª—é—á–∏!"
    else
        echo "‚ùå .env.example not found"
    fi
else
    echo "‚úÖ .env file already exists"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
echo "üß™ Testing installation..."
python3 -c "
import sys
try:
    import crewai
    import dotenv
    import requests
    print('‚úÖ Core packages imported successfully')
except ImportError as e:
    print(f'‚ùå Import error: {e}')
    sys.exit(1)
"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
echo "üîß Checking tools structure..."
if [ -d "tools/gopiai_integration" ]; then
    TOOL_COUNT=$(find tools/gopiai_integration -name "*.py" | wc -l)
    echo "‚úÖ Found $TOOL_COUNT GopiAI tools"
else
    echo "‚ùå GopiAI tools directory not found"
    exit 1
fi

# –§–∏–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
echo ""
echo "üéâ === INSTALLATION COMPLETE ==="
echo ""
echo "üìã Next steps:"
echo "1. Edit .env file and add your API keys:"
echo "   nano .env"
echo ""
echo "2. Get free API keys from:"
echo "   üî∏ Groq: https://console.groq.com"
echo "   üî∏ Google Gemini: https://aistudio.google.com"
echo "   üî∏ Cerebras: https://cloud.cerebras.ai"
echo ""
echo "3. Run the integration:"
echo "   python3 main.py"
echo ""
echo "4. Choose demo mode:"
echo "   1 - Simple demo (1 agent)"
echo "   2 - Advanced demo (3 agents)"
echo "   3 - Tests only"
echo ""
echo "üìñ Read README.md for detailed documentation"
echo ""
echo "üöÄ Happy coding with GopiAI + CrewAI!"