"""
File Explorer Component –¥–ª—è GopiAI Standalone Interface
====================================================

–ü—Ä–æ–≤–æ–¥–Ω–∏–∫ —Ñ–∞–π–ª–æ–≤ —Å –¥–µ—Ä–µ–≤–æ–º –ø–∞–ø–æ–∫ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏–∫–æ–Ω–æ–∫ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤.
"""

import os
from PySide6.QtWidgets import QWidget, QVBoxLayout, QLabel, QTreeView, QHBoxLayout, QPushButton, QLineEdit
from PySide6.QtCore import QDir, Signal, Qt
from .icon_file_system_model import IconFileSystemModel
from .file_type_detector import FileTypeDetector


class FileExplorerWidget(QWidget):
    """–ü—Ä–æ–≤–æ–¥–Ω–∏–∫ —Ñ–∞–π–ª–æ–≤ —Å –¥–µ—Ä–µ–≤–æ–º –ø–∞–ø–æ–∫ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏–∫–æ–Ω–æ–∫"""
    
    # –°–∏–≥–Ω–∞–ª—ã
    file_selected = Signal(str)  # –§–∞–π–ª –≤—ã–±—Ä–∞–Ω
    file_double_clicked = Signal(str)  # –§–∞–π–ª –æ—Ç–∫—Ä—ã—Ç –¥–≤–æ–π–Ω—ã–º –∫–ª–∏–∫–æ–º
    
    def __init__(self, parent=None, icon_manager=None):
        super().__init__(parent)
        self.setObjectName("fileExplorer")
        self.icon_manager = icon_manager
        self._current_path = os.path.expanduser("~")
        self._setup_ui()
        self._connect_signals()

    def _setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞"""
        layout = QVBoxLayout(self)
        layout.setContentsMargins(5, 5, 5, 5)
        layout.setSpacing(5)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–∫–æ–Ω–∫–æ–π
        header_layout = QHBoxLayout()
        
        if self.icon_manager:
            try:
                folder_icon = self.icon_manager.get_icon("folder")
                header = QLabel("–ü—Ä–æ–≤–æ–¥–Ω–∏–∫")
                if folder_icon and not folder_icon.isNull():
                    header.setPixmap(folder_icon.pixmap(16, 16))
            except:
                header = QLabel("üìÅ –ü—Ä–æ–≤–æ–¥–Ω–∏–∫")
        else:
            header = QLabel("üìÅ –ü—Ä–æ–≤–æ–¥–Ω–∏–∫")
            
        header.setObjectName("panelHeader")
        header.setFixedHeight(30)
        header_layout.addWidget(header)
        header_layout.addStretch()
        
        # –ö–Ω–æ–ø–∫–∞ "–î–æ–º–æ–π"
        home_btn = QPushButton("üè†")
        home_btn.setToolTip("–ü–µ—Ä–µ–π—Ç–∏ –≤ –¥–æ–º–∞—à–Ω—é—é –ø–∞–ø–∫—É")
        home_btn.setFixedSize(30, 30)
        home_btn.clicked.connect(self._go_home)
        header_layout.addWidget(home_btn)
        
        # –ö–Ω–æ–ø–∫–∞ "–í–≤–µ—Ä—Ö"
        up_btn = QPushButton("‚¨ÜÔ∏è")
        up_btn.setToolTip("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤–≤–µ—Ä—Ö")
        up_btn.setFixedSize(30, 30)
        up_btn.clicked.connect(self._go_up)
        header_layout.addWidget(up_btn)
        
        layout.addLayout(header_layout)
        
        # –°—Ç—Ä–æ–∫–∞ –ø—É—Ç–∏
        path_layout = QHBoxLayout()
        path_layout.setContentsMargins(0, 0, 0, 5)
        
        self.path_input = QLineEdit()
        self.path_input.setPlaceholderText("–ü—É—Ç—å –∫ –ø–∞–ø–∫–µ...")
        self.path_input.setText(self._current_path)
        self.path_input.returnPressed.connect(self._path_changed)
        path_layout.addWidget(self.path_input)
        
        go_btn = QPushButton("‚û°Ô∏è")
        go_btn.setToolTip("–ü–µ—Ä–µ–π—Ç–∏ –∫ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø—É—Ç–∏")
        go_btn.setFixedSize(30, 30)
        go_btn.clicked.connect(self._path_changed)
        path_layout.addWidget(go_btn)
        
        layout.addLayout(path_layout)
        
        # –î–µ—Ä–µ–≤–æ —Ñ–∞–π–ª–æ–≤ —Å –∫–∞—Å—Ç–æ–º–Ω–æ–π –º–æ–¥–µ–ª—å—é
        self.tree_view = QTreeView()
        self.file_model = IconFileSystemModel(self.icon_manager, self)
        self.file_model.setRootPath("")
        self.tree_view.setModel(self.file_model)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        self.tree_view.setRootIndex(self.file_model.index(self._current_path))
        self.tree_view.hideColumn(1)  # –†–∞–∑–º–µ—Ä
        self.tree_view.hideColumn(2)  # –¢–∏–ø
        self.tree_view.hideColumn(3)  # –î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è
          # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è
        self.tree_view.setAlternatingRowColors(False)  # –û—Ç–∫–ª—é—á–∞–µ–º –ø–æ–ª–æ—Å—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        self.tree_view.setSortingEnabled(True)
        self.tree_view.sortByColumn(0, Qt.SortOrder.AscendingOrder)  # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∏–º–µ–Ω–∏
        
        layout.addWidget(self.tree_view)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å
        info_layout = QHBoxLayout()
        self.info_label = QLabel("–ì–æ—Ç–æ–≤")
        self.info_label.setObjectName("statusLabel")
        info_layout.addWidget(self.info_label)
        info_layout.addStretch()
        
        # –°—á—ë—Ç—á–∏–∫ —Ñ–∞–π–ª–æ–≤
        self.file_count_label = QLabel("")
        self.file_count_label.setObjectName("statusLabel")
        info_layout.addWidget(self.file_count_label)
        
        layout.addLayout(info_layout)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á—ë—Ç—á–∏–∫ —Ñ–∞–π–ª–æ–≤
        self._update_file_count()

    def _connect_signals(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤"""
        # –í—ã–±–æ—Ä —Ñ–∞–π–ª–∞
        self.tree_view.selectionModel().selectionChanged.connect(self._on_selection_changed)
        
        # –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫
        self.tree_view.doubleClicked.connect(self._on_double_click)
        
        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞–ø–∫–∏
        self.file_model.directoryLoaded.connect(self._update_file_count)

    def _on_selection_changed(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞"""
        selected_file = self.get_selected_file()
        if selected_file:
            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            file_type = FileTypeDetector.get_file_type(selected_file)
            file_name = os.path.basename(selected_file)
            
            if os.path.isdir(selected_file):
                self.info_label.setText(f"üìÅ –ü–∞–ø–∫–∞: {file_name}")
            else:
                self.info_label.setText(f"üìÑ {file_type.title()}: {file_name}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª
            self.file_selected.emit(selected_file)
        else:
            self.info_label.setText("–ì–æ—Ç–æ–≤")

    def _on_double_click(self, index):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞"""
        file_path = self.file_model.filePath(index)
        
        if os.path.isdir(file_path):
            # –ï—Å–ª–∏ –ø–∞–ø–∫–∞ - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –Ω–µ—ë
            self.set_root_path(file_path)
        else:
            # –ï—Å–ª–∏ —Ñ–∞–π–ª - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –æ—Ç–∫—Ä—ã—Ç–∏—è
            self.file_double_clicked.emit(file_path)

    def _go_home(self):
        """–ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–æ–º–∞—à–Ω—é—é –ø–∞–ø–∫—É"""
        home_path = os.path.expanduser("~")
        self.set_root_path(home_path)

    def _go_up(self):
        """–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤–≤–µ—Ä—Ö"""
        parent_path = os.path.dirname(self._current_path)
        if parent_path != self._current_path:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–∂–µ–º –ø–æ–¥–Ω—è—Ç—å—Å—è
            self.set_root_path(parent_path)

    def _path_changed(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—É—Ç–∏"""
        new_path = self.path_input.text().strip()
        if new_path and os.path.exists(new_path) and os.path.isdir(new_path):
            self.set_root_path(new_path)
        else:
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ä—ã–π –ø—É—Ç—å
            self.path_input.setText(self._current_path)
            self.info_label.setText("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –ø—É—Ç—å")

    def _update_file_count(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á—ë—Ç—á–∏–∫–∞ —Ñ–∞–π–ª–æ–≤"""
        try:
            if os.path.exists(self._current_path):
                items = os.listdir(self._current_path)
                folders = sum(1 for item in items if os.path.isdir(os.path.join(self._current_path, item)))
                files = len(items) - folders
                self.file_count_label.setText(f"üìÅ {folders} | üìÑ {files}")
            else:
                self.file_count_label.setText("")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥—Å—á—ë—Ç–∞ —Ñ–∞–π–ª–æ–≤: {e}")
            self.file_count_label.setText("")

    def set_root_path(self, path: str):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –ø—É—Ç–∏ –¥–ª—è –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞"""
        if os.path.exists(path) and os.path.isdir(path):
            self._current_path = os.path.abspath(path)
            self.tree_view.setRootIndex(self.file_model.index(self._current_path))
            self.path_input.setText(self._current_path)
            self.info_label.setText(f"üìÅ {os.path.basename(self._current_path)}")
            self._update_file_count()
        else:
            print(f"‚ö†Ô∏è –ü—É—Ç—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {path}")
            self.info_label.setText("‚ö†Ô∏è –ü—É—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω")

    def get_selected_file(self) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"""
        indexes = self.tree_view.selectedIndexes()
        if indexes:
            return self.file_model.filePath(indexes[0])
        return ""

    def set_icon_manager(self, icon_manager):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–∫–æ–Ω–æ–∫"""
        self.icon_manager = icon_manager
        if self.file_model:
            self.file_model.set_icon_manager(icon_manager)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        self._update_header_icon()

    def _update_header_icon(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ"""
        if self.icon_manager:
            try:
                folder_icon = self.icon_manager.get_icon("folder")
                if folder_icon and not folder_icon.isNull():
                    # –ù–∞–π–¥—ë–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–±–Ω–æ–≤–∏–º –µ–≥–æ –∏–∫–æ–Ω–∫—É
                    header = self.findChild(QLabel, "panelHeader") 
                    if header:
                        header.setPixmap(folder_icon.pixmap(16, 16))
                        header.setText("–ü—Ä–æ–≤–æ–¥–Ω–∏–∫")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞: {e}")

    def refresh(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞"""
        if self.file_model:
            self.file_model.clear_icon_cache()
        self._update_file_count()
        self.info_label.setText("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ")
