"""
Menu Bar Component –¥–ª—è GopiAI Standalone Interface
============================================

–ê–≤—Ç–æ–Ω–æ–º–Ω–æ–µ –º–µ–Ω—é —Å –ø–æ–ª–Ω—ã–º –Ω–∞–±–æ—Ä–æ–º –∫–æ–º–∞–Ω–¥ –∏ —Å–∏–≥–Ω–∞–ª–æ–≤.
"""

from PySide6.QtWidgets import QMenuBar, QMenu
from PySide6.QtCore import Signal
from PySide6.QtGui import QIcon
from pathlib import Path

# –ò–º–ø–æ—Ä—Ç —Å–∏—Å—Ç–µ–º—ã –∏–∫–æ–Ω–æ–∫
try:
    from .icon_system import AutoIconSystem
except ImportError:
    AutoIconSystem = None


class StandaloneMenuBar(QMenuBar):
    """–ê–≤—Ç–æ–Ω–æ–º–Ω–æ–µ –º–µ–Ω—é —Å –ø–æ–ª–Ω—ã–º –Ω–∞–±–æ—Ä–æ–º —Å–∏–≥–Ω–∞–ª–æ–≤"""
    
    # –°–∏–≥–Ω–∞–ª—ã —Ñ–∞–π–ª–æ–≤–æ–≥–æ –º–µ–Ω—é
    newFileRequested = Signal()
    openFileRequested = Signal()
    openFolderRequested = Signal()
    saveRequested = Signal()
    saveAsRequested = Signal()
    exitRequested = Signal()
    
    # –°–∏–≥–Ω–∞–ª—ã –º–µ–Ω—é –≤–∏–¥–∞
    openTextEditorRequested = Signal()
    openProjectExplorerRequested = Signal()
    openChatRequested = Signal()
    openBrowserRequested = Signal()
    openTerminalRequested = Signal()
    
    # –°–∏–≥–Ω–∞–ª—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
    toggleProductivityExtension = Signal()
    toggleVoiceExtension = Signal()
    toggleAiToolsExtension = Signal()
      # –°–∏–≥–Ω–∞–ª—ã —Ç–µ–º—ã
    changeThemeRequested = Signal(str)  # –ü–µ—Ä–µ–¥–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã

    def __init__(self, parent=None):
        super().__init__(parent)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –∏–∫–æ–Ω–æ–∫
        self._setup_icon_system()
        
        # –°–æ–∑–¥–∞—ë–º –º–µ–Ω—é
        self._build_menu()

    def _setup_icon_system(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∏–∫–æ–Ω–æ–∫"""
        if AutoIconSystem:
            self.icon_system = AutoIconSystem()
        else:
            # Fallback - –ø—Ä–æ—Å—Ç–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä –∏–∫–æ–Ω–æ–∫
            self.icon_system = self._create_simple_icon_manager()

    def _create_simple_icon_manager(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–∫–æ–Ω–æ–∫ –∫–∞–∫ fallback"""
        class SimpleIconManager:
            def __init__(self):
                self.icons_path = Path(__file__).parent.parent / "node_modules" / "lucide-static" / "icons"
                self._icon_cache = {}
                
            def get_icon(self, icon_name: str):
                """–ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É –ø–æ –∏–º–µ–Ω–∏"""
                if icon_name in self._icon_cache:
                    return self._icon_cache[icon_name]
                
                svg_path = self.icons_path / f"{icon_name}.svg"
                if svg_path.exists():
                    icon = QIcon(str(svg_path))
                    self._icon_cache[icon_name] = icon
                    return icon
                
                return QIcon()  # –ü—É—Å—Ç–∞—è –∏–∫–æ–Ω–∫–∞
                
        return SimpleIconManager()

    def _build_menu(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –º–µ–Ω—é"""
        # –§–∞–π–ª–æ–≤–æ–µ –º–µ–Ω—é
        file_menu = self.addMenu("üìÅ –§–∞–π–ª")
        self._setup_file_menu(file_menu)
        
        # –ú–µ–Ω—é –ø—Ä–∞–≤–∫–∏
        edit_menu = self.addMenu("‚úèÔ∏è –ü—Ä–∞–≤–∫–∞")
        self._setup_edit_menu(edit_menu)
        
        # –ú–µ–Ω—é –≤–∏–¥–∞
        view_menu = self.addMenu("üëÅÔ∏è –í–∏–¥")
        self._setup_view_menu(view_menu)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫–∏ –º–µ–Ω—é
        self._update_menu_icons()

    def _setup_file_menu(self, file_menu):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–≥–æ –º–µ–Ω—é"""
        self.new_action = file_menu.addAction("–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π")
        self.open_action = file_menu.addAction("–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª")
        self.open_folder_action = file_menu.addAction("–û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É")
        file_menu.addSeparator()
        self.save_action = file_menu.addAction("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
        self.save_as_action = file_menu.addAction("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫")
        file_menu.addSeparator()
        self.exit_action = file_menu.addAction("–í—ã—Ö–æ–¥")
        
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤
        self.new_action.triggered.connect(self.newFileRequested.emit)
        self.open_action.triggered.connect(self.openFileRequested.emit)
        self.open_folder_action.triggered.connect(self.openFolderRequested.emit)
        self.save_action.triggered.connect(self.saveRequested.emit)
        self.save_as_action.triggered.connect(self.saveAsRequested.emit)
        self.exit_action.triggered.connect(self.exitRequested.emit)

    def _setup_edit_menu(self, edit_menu):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ–Ω—é –ø—Ä–∞–≤–∫–∏"""
        self.undo_action = edit_menu.addAction("–û—Ç–º–µ–Ω–∞")
        self.redo_action = edit_menu.addAction("–ü–æ–≤—Ç–æ—Ä")
        edit_menu.addSeparator()
        self.cut_action = edit_menu.addAction("–í—ã—Ä–µ–∑–∞—Ç—å")
        self.copy_action = edit_menu.addAction("–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å")
        self.paste_action = edit_menu.addAction("–í—Å—Ç–∞–≤–∏—Ç—å")
        self.delete_action = edit_menu.addAction("–£–¥–∞–ª–∏—Ç—å")
        edit_menu.addSeparator()
        self.select_all_action = edit_menu.addAction("–í—ã–¥–µ–ª–∏—Ç—å –≤—Å—ë")

    def _setup_view_menu(self, view_menu):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ–Ω—é –≤–∏–¥–∞"""        # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏
        self.project_explorer_action = view_menu.addAction("–§–∞–π–ª–æ–≤—ã–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫")
        self.chat_action = view_menu.addAction("–ò–ò —á–∞—Ç")
        self.browser_action = view_menu.addAction("–ë—Ä–∞—É–∑–µ—Ä")
        self.terminal_action = view_menu.addAction("–¢–µ—Ä–º–∏–Ω–∞–ª")
        self.text_editor_action = view_menu.addAction("–†–µ–¥–∞–∫—Ç–æ—Ä")
        
        view_menu.addSeparator()
        
        # –ü–æ–¥–º–µ–Ω—é —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
        extensions_menu = view_menu.addMenu("üîå –†–∞—Å—à–∏—Ä–µ–Ω–∏—è")
        self.productivity_action = extensions_menu.addAction("üìù –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
        self.voice_action = extensions_menu.addAction("üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
        self.ai_tools_action = extensions_menu.addAction("ü§ñ –ò–ò –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã")
          # –ü–æ–¥–º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç–µ–º—ã
        view_menu.addSeparator()
        theme_menu = view_menu.addMenu("üé® –¢–µ–º–∞")
        
        # –û—Ç–¥–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–µ–º—ã
        material_sky_action = theme_menu.addAction("üåä Material Sky")
        emerald_garden_action = theme_menu.addAction("üåø Emerald Garden")
        crimson_relic_action = theme_menu.addAction("üî• Crimson Relic")
        golden_ember_action = theme_menu.addAction("‚≠ê Golden Ember")
        
        theme_menu.addSeparator()
        change_theme_action = theme_menu.addAction("üé® –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–µ–º—É...")
        
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ —Ç–µ–º
        material_sky_action.triggered.connect(lambda: self.changeThemeRequested.emit("Material Sky"))
        emerald_garden_action.triggered.connect(lambda: self.changeThemeRequested.emit("Emerald Garden"))
        crimson_relic_action.triggered.connect(lambda: self.changeThemeRequested.emit("Crimson Relic"))
        golden_ember_action.triggered.connect(lambda: self.changeThemeRequested.emit("Golden Ember"))
        change_theme_action.triggered.connect(lambda: self.changeThemeRequested.emit("dialog"))
        
        # –î–µ–ª–∞–µ–º –¥–µ–π—Å—Ç–≤–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π checkable
        self.productivity_action.setCheckable(True)
        self.voice_action.setCheckable(True)
        self.ai_tools_action.setCheckable(True)
        
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤–∫–ª—é—á–µ–Ω–∞
        self.productivity_action.setChecked(True)
          # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ –≤–∏–¥–∞
        self.project_explorer_action.triggered.connect(self.openProjectExplorerRequested.emit)
        self.chat_action.triggered.connect(self.openChatRequested.emit)
        self.browser_action.triggered.connect(self.openBrowserRequested.emit)
        self.terminal_action.triggered.connect(self.openTerminalRequested.emit)
        self.text_editor_action.triggered.connect(self.openTextEditorRequested.emit)
        
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
        self.productivity_action.triggered.connect(self.toggleProductivityExtension.emit)
        self.voice_action.triggered.connect(self.toggleVoiceExtension.emit)
        self.ai_tools_action.triggered.connect(self.toggleAiToolsExtension.emit)

    def _update_menu_icons(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∫–æ–Ω–æ–∫ –≤ –º–µ–Ω—é"""
        # –ú–∞–ø–ø–∏–Ω–≥ –¥–µ–π—Å—Ç–≤–∏–π –∫ –∏–∫–æ–Ω–∫–∞–º
        icon_mapping = {
            # –§–∞–π–ª–æ–≤–æ–µ –º–µ–Ω—é
            'new_action': 'file-plus',
            'open_action': 'file-open',
            'open_folder_action': 'folder-open',
            'save_action': 'save',
            'save_as_action': 'save-as',
            'exit_action': 'x',            # –ú–µ–Ω—é –ø—Ä–∞–≤–∫–∏
            'undo_action': 'undo',
            'redo_action': 'redo',
            'cut_action': 'scissors',
            'copy_action': 'copy',
            'paste_action': 'clipboard',
            'delete_action': 'trash-2',
            'select_all_action': 'text-select',
            
            # –ú–µ–Ω—é –≤–∏–¥–∞
            'project_explorer_action': 'folder-open',
            'chat_action': 'message-circle',
            'browser_action': 'globe',
            'terminal_action': 'terminal',
            'text_editor_action': 'file-text',
        }        # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫–∏
        for action_name, icon_name in icon_mapping.items():
            if hasattr(self, action_name):
                action = getattr(self, action_name)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø icon_system –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –º–µ—Ç–æ–¥
                try:
                    if hasattr(self.icon_system, 'get_icon_for_action_name'):
                        # AutoIconSystem
                        icon = self.icon_system.get_icon_for_action_name(action_name)
                    elif hasattr(self.icon_system, 'get_icon'):
                        # SimpleIconManager
                        icon = self.icon_system.get_icon(icon_name)
                    else:
                        print(f"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø icon_system: {type(self.icon_system)}")
                        continue
                        
                    if not icon.isNull():
                        action.setIcon(icon)
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –¥–ª—è {action_name}: {e}")

    def refresh_icons(self):
        """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∏–∫–æ–Ω–æ–∫ –≤ –º–µ–Ω—é"""
        self._update_menu_icons()
        print("üîÑ –ò–∫–æ–Ω–∫–∏ –º–µ–Ω—é –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
