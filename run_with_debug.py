#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π launcher —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python run_with_debug.py
"""

import os
import sys
import subprocess
from datetime import datetime

def main():
    """–ó–∞–ø—É—Å–∫ GopiAI —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    
    print("üîç GopiAI Debug Mode Launcher")
    print("=" * 50)
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    env = os.environ.copy()
    env.update({
        'PYTHONUNBUFFERED': '1',      # –û—Ç–∫–ª—é—á–∞–µ–º –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—é –≤—ã–≤–æ–¥–∞
        'PYTHONASYNCIODEBUG': '1',    # Debug –¥–ª—è asyncio
        'PYTHONVERBOSE': '1',         # –ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥ Python
        'QT_LOGGING_RULES': 'qt.*=true',  # Qt –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        'QT_DEBUG_PLUGINS': '1',      # Debug Qt –ø–ª–∞–≥–∏–Ω–æ–≤
        'GOPIAI_DEBUG': 'true',       # –ù–∞—à —Ñ–ª–∞–≥ –¥–ª—è GopiAI
    })
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –ª–æ–≥–æ–≤
    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
    log_file = f"gopiai_debug_{timestamp}.log"
    
    print(f"üìÅ –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤: {log_file}")
    print(f"üêç Python: {sys.executable}")
    print(f"üìÇ –†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞: {os.getcwd()}")
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º GopiAI...")
    print("=" * 50)
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –≤ —Ñ–∞–π–ª
    cmd = [
        sys.executable,
        '-u',  # –û—Ç–∫–ª—é—á–∞–µ–º –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—é
        '-X', 'dev',  # Development mode
        'GopiAI-UI/gopiai/ui/main.py'
    ]
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –≤—ã–≤–æ–¥–∞ –≤ —Ñ–∞–π–ª + –∫–æ–Ω—Å–æ–ª—å
        with open(log_file, 'w', encoding='utf-8') as f:
            process = subprocess.Popen(
                cmd,
                stdout=subprocess.PIPE,
                stderr=subprocess.STDOUT,
                env=env,
                universal_newlines=True,
                bufsize=1  # Line buffered
            )
            
            # –ß–∏—Ç–∞–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
            for line in process.stdout:
                print(line.rstrip())  # –í –∫–æ–Ω—Å–æ–ª—å
                f.write(line)         # –í —Ñ–∞–π–ª
                f.flush()             # –°—Ä–∞–∑—É –∑–∞–ø–∏—Å—ã–≤–∞–µ–º
            
            process.wait()
            
        print(f"\nüìÅ –î–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {log_file}")
        return process.returncode
        
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return 0
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        return 1

if __name__ == "__main__":
    sys.exit(main())