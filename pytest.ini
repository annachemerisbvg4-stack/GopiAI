[tool:pytest]
# Master pytest configuration for GopiAI Testing Infrastructure
testpaths = 
    GopiAI-Core/tests
    GopiAI-UI/tests
    GopiAI-CrewAI/tests
    GopiAI-Assets/tests
    test_infrastructure
    tests

python_files = test_*.py
python_classes = Test*
python_functions = test_*

addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --durations=10
    --maxfail=10
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=json:coverage.json
    -p test_infrastructure.pytest_known_issues_plugin

markers =
    # Test categories
    unit: Unit tests
    integration: Integration tests
    ui: UI tests with pytest-qt
    e2e: End-to-end tests
    performance: Performance tests
    security: Security tests
    
    # Test requirements
    requires_display: Tests that require a display
    requires_server: Tests that require CrewAI server running
    requires_crewai: Tests that require CrewAI server
    requires_ai_service: Tests that require external AI services
    
    # Test characteristics
    slow: Slow running tests (>5 seconds)
    fast: Fast running tests (<1 second)
    
    # Known issues
    xfail_known_issue: Known issues marked as expected failures
    known_issue: Mark test as affected by known issue
    expected_failure: Mark test as expected to fail
    flaky: Mark test as flaky/unstable
    
    # Environment specific
    crewai_env: Tests that run in CrewAI environment
    gopiai_env: Tests that run in GopiAI environment
    txtai_env: Tests that run in txtai environment

filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:PySide6
    ignore::RuntimeWarning

# Qt configuration for UI tests
qt_api = pyside6
qt_default_raising = true

# Asyncio configuration
asyncio_mode = auto

# Timeout configuration
timeout = 300
timeout_method = thread

# Coverage configuration
[coverage:run]
source = .
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    */*_env/*
    */node_modules/*
    */.git/*
    */.pytest_cache/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Known issue markers (auto-generated)
markers =
    xfail_issue_TEST_001: API timeout in authentication (Issue: TEST-001)
    xfail_issue_TEST_002: UI widget rendering issue (Issue: TEST-002)
    xfail_issue_TEST_003: Memory system indexing slow (Issue: TEST-003)
