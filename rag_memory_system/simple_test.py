"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç RAG Memory —Å–∏—Å—Ç–µ–º—ã
"""
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é
sys.path.insert(0, str(Path(__file__).parent.parent))

def simple_test():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –±–µ–∑ —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üß† –¢–µ—Å—Ç RAG Memory —Å–∏—Å—Ç–µ–º—ã")
    print("=" * 40)
    
    try:
        # –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
        from rag_memory_system import RAGMemoryManager, MessageRole
        print("‚úÖ –ú–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–∞–º—è—Ç–∏
        memory = RAGMemoryManager()
        print("‚úÖ RAG Memory Manager —Å–æ–∑–¥–∞–Ω")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Å–µ—Å—Å–∏–∏
        session = memory.create_session(
            title="–¢–µ—Å—Ç RAG —Å–∏—Å—Ç–µ–º—ã", 
            project_context="GopiAI-Core",
            tags=["—Ç–µ—Å—Ç", "–ø–∞–º—è—Ç—å"]
        )
        print(f"‚úÖ –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞: {session.session_id}")
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
        memory.add_message(session.session_id, MessageRole.USER, 
                          "–ü—Ä–∏–≤–µ—Ç! –¢–µ—Å—Ç–∏—Ä—É—é RAG Memory —Å–∏—Å—Ç–µ–º—É.")
        
        memory.add_message(session.session_id, MessageRole.ASSISTANT, 
                          "–û—Ç–ª–∏—á–Ω–æ! –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç. RAG Memory –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å "
                          "–∏ –∏—Å–∫–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤.")
        
        memory.add_message(session.session_id, MessageRole.USER, 
                          "–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É GopiAI. –ö–∞–∫–∏–µ –µ—Å—Ç—å –º–æ–¥—É–ª–∏?")
        
        memory.add_message(session.session_id, MessageRole.ASSISTANT, 
                          "GopiAI –∏–º–µ–µ—Ç –º–æ–¥—É–ª—å–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É:\n"
                          "- GopiAI-Core: –±–∞–∑–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã\n"
                          "- GopiAI-Extensions: —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è\n"
                          "- GopiAI-Widgets: UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã\n"
                          "- GopiAI-Assets: —Ä–µ—Å—É—Ä—Å—ã")
        
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏
        memory.save_session(session)
        print("‚úÖ –°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∏ –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞
        print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞:")
        results = memory.search_conversations("–º–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ GopiAI")
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ '–º–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ GopiAI'")
        
        for i, result in enumerate(results, 1):
            print(f"  {i}. {result.title} (—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {result.relevance_score:.2f})")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        stats = memory.get_memory_stats()
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"  - –†–∞–∑–≥–æ–≤–æ—Ä–æ–≤: {stats.total_sessions}")
        print(f"  - –°–æ–æ–±—â–µ–Ω–∏–π: {stats.total_messages}")
        print(f"  - –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –ë–î: {stats.total_documents}")
        print(f"  - –†–∞–∑–º–µ—Ä: {stats.storage_size_mb:.2f} –ú–ë")
        
        print("\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ–±-—Å–µ—Ä–≤–µ—Ä:")
        print("   python rag_memory_system\\run_server.py")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    simple_test()
