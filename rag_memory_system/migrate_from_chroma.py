#!/usr/bin/env python3
"""
–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ ChromaDB –≤ Simple RAG
"""
import json
import uuid
from pathlib import Path
from datetime import datetime

def convert_chroma_to_simple():
    """–ü–µ—Ä–µ–Ω–æ—Å–∏—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ chroma_db –≤ simple_rag_data"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø–∞–ø–∫–∞ chroma_db
    chroma_path = Path("chroma_db")
    if not chroma_path.exists():
        print("‚ùå –ü–∞–ø–∫–∞ chroma_db –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è simple RAG
    data_dir = Path("simple_rag_data")
    data_dir.mkdir(exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (—Ç–∞–∫ –∫–∞–∫ ChromaDB —Å–ª–æ–∂–Ω–æ —á–∏—Ç–∞—Ç—å)
    conversations = {}
    chunks_storage = []
    
    # –°–æ–∑–¥–∞–µ–º –æ–¥–Ω—É —Å–µ—Å—Å–∏—é –¥–ª—è –≤—Å–µ—Ö —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    session_id = str(uuid.uuid4())
    conversations[session_id] = {
        "id": session_id,
        "title": "Migrated from ChromaDB",
        "project_context": "Data migrated from ChromaDB",
        "tags": ["migration", "old-data"],
        "created_at": datetime.now().isoformat(),
        "messages": []
    }
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –º–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è: {session_id}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    with open(data_dir / "conversations.json", "w", encoding="utf-8") as f:
        json.dump(conversations, f, ensure_ascii=False, indent=2)
    
    with open(data_dir / "chunks.json", "w", encoding="utf-8") as f:
        json.dump(chunks_storage, f, ensure_ascii=False, indent=2)
    
    print("üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ simple_rag_server.py")

if __name__ == "__main__":
    convert_chroma_to_simple()