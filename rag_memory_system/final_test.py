#!/usr/bin/env python3
"""
–ò—Ç–æ–≥–æ–≤—ã–π —Ç–µ—Å—Ç –∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è RAG Memory —Å–∏—Å—Ç–µ–º—ã
–í–∫–ª—é—á–∞–µ—Ç –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏: —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–π, –ø–æ–∏—Å–∫, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, API —Ç–µ—Å—Ç—ã
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import requests
import json
from datetime import datetime
from memory_manager import RAGMemoryManager
from models import MessageRole
import time

def print_separator(text: str):
    """–ö—Ä–∞—Å–∏–≤—ã–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏"""
    print(f"\n{'='*60}")
    print(f"üîπ {text}")
    print('='*60)

def test_local_memory():
    """–¢–µ—Å—Ç –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–∞–º—è—Ç–∏ –±–µ–∑ API"""
    print_separator("–¢–ï–°–¢ –õ–û–ö–ê–õ–¨–ù–û–ô –ü–ê–ú–Ø–¢–ò")
    
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –ø–∞–º—è—Ç–∏
    memory = RAGMemoryManager()
      # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–µ—Å—Å–∏—é
    session = memory.create_session(
        title="–ò—Ç–æ–≥–æ–≤—ã–π —Ç–µ—Å—Ç RAG —Å–∏—Å—Ç–µ–º—ã",
        tags=["–∏—Ç–æ–≥–æ–≤—ã–π", "—Ç–µ—Å—Ç", "–¥–µ–º–æ"]
    )
    session_id = session.session_id
      # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
    memory.add_message(session_id, MessageRole.USER, "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –∏—Ç–æ–≥–æ–≤–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RAG Memory —Å–∏—Å—Ç–µ–º—ã")
    memory.add_message(session_id, MessageRole.ASSISTANT, "–û—Ç–ª–∏—á–Ω–æ! –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ. –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç: —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–π, –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è, –ø–æ–∏—Å–∫, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞.")
    memory.add_message(session_id, MessageRole.USER, "–ü–æ–∫–∞–∂–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º—ã")
    
    stats = memory.get_memory_stats()
    stats_text = f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats.total_sessions} —Å–µ—Å—Å–∏–π, {stats.total_messages} —Å–æ–æ–±—â–µ–Ω–∏–π, {stats.storage_size_mb:.1f} –ú–ë"
    memory.add_message(session_id, MessageRole.ASSISTANT, stats_text)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å–µ—Å—Å–∏—è: {session_id}")
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ 4 —Å–æ–æ–±—â–µ–Ω–∏—è")
      # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫
    results = memory.search_conversations("—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã", limit=3)
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞")
    
    return session_id

def test_api_endpoints():
    """–¢–µ—Å—Ç API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤"""
    print_separator("–¢–ï–°–¢ API –ò–ù–¢–ï–†–§–ï–ô–°–ê")
    
    base_url = "http://localhost:8001"
    
    try:
        # –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        response = requests.get(f"{base_url}/stats")
        if response.status_code == 200:
            stats = response.json()
            print(f"‚úÖ API Stats: {stats['total_sessions']} —Å–µ—Å—Å–∏–π, {stats['total_messages']} —Å–æ–æ–±—â–µ–Ω–∏–π")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API Stats: {response.status_code}")
        
        # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞
        response = requests.get(f"{base_url}/search", params={"q": "RAG —Å–∏—Å—Ç–µ–º–∞", "limit": 3})
        if response.status_code == 200:
            results = response.json()
            print(f"‚úÖ API Search: –Ω–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API Search: {response.status_code}")
        
        # –¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        response = requests.get(f"{base_url}/")
        if response.status_code == 200:
            print("‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: {response.status_code}")
            
        return True
        
    except requests.exceptions.ConnectionError:
        print("‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ start_server.py")
        return False

def search_demo():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"""
    print_separator("–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–û–ò–°–ö–ê")
    
    memory = RAGMemoryManager()
    
    search_queries = [
        ("–º–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞", "–ü–æ–∏—Å–∫ –ø–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ"),
        ("UI –≤–∏–¥–∂–µ—Ç—ã", "–ü–æ–∏—Å–∫ –ø–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É"),
        ("–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ API", "–ü–æ–∏—Å–∫ –ø–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è–º"),
        ("–±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è", "–ü–æ–∏—Å–∫ –ø–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏"),
        ("—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã", "–ü–æ–∏—Å–∫ –ø–æ –º–µ—Ç—Ä–∏–∫–∞–º")
    ]
    
    for query, description in search_queries:
        print(f"\nüîç {description}: '{query}'")
        results = memory.search_conversations(query, limit=2)
        
        for i, result in enumerate(results, 1):
            print(f"  {i}. {result.title}")
            print(f"     üìä –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {result.relevance_score:.3f}")
            print(f"     üè∑Ô∏è –¢–µ–≥–∏: {', '.join(result.tags)}")
            print(f"     üìù –§—Ä–∞–≥–º–µ–Ω—Ç: {result.context_preview[:100]}...")

def show_system_info():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ"""
    print_separator("–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ò–°–¢–ï–ú–ï")
    
    memory = RAGMemoryManager()
    stats = memory.get_memory_stats()
    
    print(f"üìà –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   ‚Ä¢ –í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π: {stats.total_sessions}")
    print(f"   ‚Ä¢ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {stats.total_messages}")
    print(f"   ‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –ë–î: {stats.total_documents}")
    print(f"   ‚Ä¢ –†–∞–∑–º–µ—Ä —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: {stats.storage_size_mb:.2f} –ú–ë")
    print(f"   ‚Ä¢ –°–∞–º–∞—è —Å—Ç–∞—Ä–∞—è —Å–µ—Å—Å–∏—è: {stats.oldest_session}")
    print(f"   ‚Ä¢ –ù–æ–≤–µ–π—à–∞—è —Å–µ—Å—Å–∏—è: {stats.newest_session}")
    print(f"   ‚Ä¢ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–≥–∏: {', '.join(stats.most_active_tags[:10])}")
    
    print(f"\nüóÇÔ∏è –§–ê–ô–õ–û–í–ê–Ø –°–¢–†–£–ö–¢–£–†–ê:")
    current_dir = os.path.dirname(os.path.abspath(__file__))
    print(f"   ‚Ä¢ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {current_dir}/config.py")
    print(f"   ‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {current_dir}/chroma_db/")
    print(f"   ‚Ä¢ –†–∞–∑–≥–æ–≤–æ—Ä—ã: {current_dir}/conversations/")
    print(f"   ‚Ä¢ –õ–æ–≥–∏: {current_dir}/rag_memory.log")
    
    print(f"\nüåê –í–ï–ë-–ò–ù–¢–ï–†–§–ï–ô–°:")
    print(f"   ‚Ä¢ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: http://localhost:8001/")
    print(f"   ‚Ä¢ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8001/docs")
    print(f"   ‚Ä¢ API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: http://localhost:8001/stats")
    print(f"   ‚Ä¢ API –ø–æ–∏—Å–∫: http://localhost:8001/search?q=–∑–∞–ø—Ä–æ—Å")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß† RAG MEMORY –°–ò–°–¢–ï–ú–ê - –ò–¢–û–ì–û–í–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï")
    print("=" * 60)
    print("üéØ –¶–µ–ª—å: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏")
    print("üìÖ –î–∞—Ç–∞:", datetime.now().strftime("%Y-%m-%d %H:%M:%S"))
    
    # 1. –¢–µ—Å—Ç –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–∞–º—è—Ç–∏
    try:
        session_id = test_local_memory()
        print(f"‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–∞–º—è—Ç–∏: {e}")
        return
    
    # 2. –¢–µ—Å—Ç API
    api_works = test_api_endpoints()
    
    # 3. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞
    try:
        search_demo()
        print(f"‚úÖ –ü–æ–∏—Å–∫–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")
    
    # 4. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
    show_system_info()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print_separator("–ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("üéâ RAG Memory —Å–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞!")
    print("\n‚úÖ –†–ê–ë–û–¢–ê–Æ–©–ò–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´:")
    print("   ‚Ä¢ ‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å (—Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–π, —Å–æ–æ–±—â–µ–Ω–∏—è)")
    print("   ‚Ä¢ ‚úÖ –í–µ–∫—Ç–æ—Ä–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (ChromaDB)")
    print("   ‚Ä¢ ‚úÖ –ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è –∏ —ç–º–±–µ–¥–¥–∏–Ω–≥–∏ (HuggingFace)")
    print("   ‚Ä¢ ‚úÖ –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫")
    print("   ‚Ä¢ ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏")
    print(f"   ‚Ä¢ {'‚úÖ' if api_works else '‚ùå'} API –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏ –≤–µ–±-dashboard")
    
    print("\nüöÄ –ì–û–¢–û–í–û –ö –ò–ù–¢–ï–ì–†–ê–¶–ò–ò:")
    print("   ‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å GopiAI –ø—Ä–æ–µ–∫—Ç–æ–º")
    print("   ‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏")
    print("   ‚Ä¢ –ü–æ–∏—Å–∫ –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤")
    print("   ‚Ä¢ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
    
    if api_works:
        print(f"\nüåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω: http://localhost:8001/")
    else:
        print(f"\nüí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: python start_server.py")

if __name__ == "__main__":
    main()
