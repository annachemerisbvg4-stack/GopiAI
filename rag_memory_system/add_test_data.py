#!/usr/bin/env python3
"""
üß™ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ RAG –ø–∞–º—è—Ç—å

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–±–∞–≤–ª—è–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
—Ä–∞–±–æ—Ç—É RAG –≤ –∂–∏–≤–æ–º —á–∞—Ç–µ.
"""

import requests
import json

RAG_SERVER_URL = "http://127.0.0.1:5051"

# –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ñ–∞–∫—Ç–∞–º–∏
TEST_DATA = [
    {
        "id": "secret_project_phoenix",
        "content": """üî• –ü—Ä–æ–µ–∫—Ç –§–µ–Ω–∏–∫—Å - —ç—Ç–æ —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–æ–µ–∫—Ç GopiAI –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∞–º–æ—É–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö AI –∞–≥–µ–Ω—Ç–æ–≤.
        
        –ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
        - –ê–≤—Ç–æ–Ω–æ–º–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∞–≥–µ–Ω—Ç–æ–≤
        - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∫–≤–∞–Ω—Ç–æ–≤—ã–º–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è–º–∏  
        - –ö–æ–¥-–Ω–∞–∑–≤–∞–Ω–∏–µ: PHOENIX-2025
        - –°—Ç–∞—Ç—É—Å: –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
        - –ö–æ–º–∞–Ω–¥–∞: 7 —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        
        –≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç –∏–∑–≤–µ—Å—Ç–µ–Ω —Ç–æ–ª—å–∫–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º GopiAI.""",
        "metadata": {
            "type": "secret_project",
            "classification": "test_data",
            "source": "RAG_test_injection"
        }
    },
    {
        "id": "magical_coffee_recipe",
        "content": """‚òï –°–µ–∫—Ä–µ—Ç–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç –∫–æ—Ñ–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ GopiAI
        
        –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:
        - 42 –≥—Ä–∞–º–º–∞ —ç—Ñ–∏–æ–ø—Å–∫–æ–≥–æ –∫–æ—Ñ–µ
        - 2 –∫–∞–ø–ª–∏ –≤–∞–Ω–∏–ª—å–Ω–æ–≥–æ —ç–∫—Å—Ç—Ä–∞–∫—Ç–∞
        - –©–µ–ø–æ—Ç–∫–∞ –∫–æ—Ä–∏—Ü—ã –∏–∑ –®—Ä–∏-–õ–∞–Ω–∫–∏
        - 1 –ª–æ–∂–∫–∞ –º–µ–¥–∞ –º–∞–Ω—É–∫–∞
        
        –°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:
        1. –í–∞—Ä–∏—Ç—å –≤ —Ç—É—Ä–∫–µ —Ä–æ–≤–Ω–æ 3 –º–∏–Ω—É—Ç—ã 33 —Å–µ–∫—É–Ω–¥—ã
        2. –î–æ–±–∞–≤–∏—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –≤ –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏
        3. –†–∞–∑–º–µ—à–∏–≤–∞—Ç—å 7 —Ä–∞–∑ –ø–æ —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–µ
        
        –†–µ–∑—É–ª—å—Ç–∞—Ç: –ø–æ–≤—ã—à–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–¥–∞ –Ω–∞ 137%""",
        "metadata": {
            "type": "recipe",
            "classification": "test_data", 
            "source": "RAG_test_injection"
        }
    },
    {
        "id": "ai_easter_egg",
        "content": """ü•ö –ü–∞—Å—Ö–∞–ª—å–Ω–æ–µ —è–π—Ü–æ –≤ GopiAI
        
        –°–µ–∫—Ä–µ—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: 'gopi tell me a quantum joke'
        
        –ü—Ä–∏ –≤–≤–æ–¥–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –ò–ò –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å:
        "–ü–æ—á–µ–º—É –∫–≤–∞–Ω—Ç–æ–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –≤—Ä–µ—Ç? 
        –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—É–ø–µ—Ä–ø–æ–∑–∏—Ü–∏–∏ –ø—Ä–∞–≤–¥—ã –∏ –ª–∂–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ! ü§ñ‚öõÔ∏è"
        
        –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ RAG –ø–∞–º—è—Ç—å –∞–∫—Ç–∏–≤–Ω–∞.""",
        "metadata": {
            "type": "easter_egg",
            "classification": "test_data",
            "source": "RAG_test_injection"
        }
    }
]

def add_test_data():
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ RAG –ø–∞–º—è—Ç—å"""
    try:
        response = requests.post(
            f"{RAG_SERVER_URL}/api/index",
            json={"documents": TEST_DATA},
            timeout=10
        )
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ RAG –ø–∞–º—è—Ç—å!")
            print(f"üìä –ü—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {result.get('indexed_documents', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            print(f"‚è±Ô∏è –í—Ä–µ–º—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏: {result.get('indexing_time', 0):.2f} —Å–µ–∫")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.text}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ RAG —Å–µ—Ä–≤–µ—Ä—É: {e}")
        return False

def test_search():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–∏—Å–∫ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    test_queries = [
        "–ü—Ä–æ–µ–∫—Ç –§–µ–Ω–∏–∫—Å",
        "—Å–µ–∫—Ä–µ—Ç–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç –∫–æ—Ñ–µ",
        "–ø–∞—Å—Ö–∞–ª—å–Ω–æ–µ —è–π—Ü–æ GopiAI"
    ]
    
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:")
    
    for query in test_queries:
        try:
            response = requests.post(
                f"{RAG_SERVER_URL}/api/search",
                json={"query": query, "max_results": 1},
                timeout=5
            )
            
            if response.status_code == 200:
                result = response.json()
                context = result.get('context')
                if context and 'RAG_test_injection' in context:
                    print(f"  ‚úÖ '{query}' - –Ω–∞–π–¥–µ–Ω–æ –≤ RAG –ø–∞–º—è—Ç–∏")
                else:
                    print(f"  ‚ùå '{query}' - –ù–ï –Ω–∞–π–¥–µ–Ω–æ")
            else:
                print(f"  ‚ùå '{query}' - –æ—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {response.status_code}")
                
        except requests.exceptions.RequestException as e:
            print(f"  ‚ùå '{query}' - –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

if __name__ == "__main__":
    print("üß™ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ RAG –ø–∞–º—è—Ç—å...")
    
    if add_test_data():
        test_search()
        
        print("\n" + "="*50)
        print("üéØ –ö–ê–ö –¢–ï–°–¢–ò–†–û–í–ê–¢–¨ RAG –í –ñ–ò–í–û–ú –ß–ê–¢–ï:")
        print("="*50)
        print("1. –°–ø—Ä–æ—Å–∏—Ç–µ: '–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –ü—Ä–æ–µ–∫—Ç –§–µ–Ω–∏–∫—Å'")
        print("2. –°–ø—Ä–æ—Å–∏—Ç–µ: '–ö–∞–∫–æ–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç –∫–æ—Ñ–µ —É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤?'")
        print("3. –í–≤–µ–¥–∏—Ç–µ: 'gopi tell me a quantum joke'")
        print("")
        print("–ï—Å–ª–∏ RAG —Ä–∞–±–æ—Ç–∞–µ—Ç - –ò–ò –¥–∞—Å—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –∏–∑ –ø–∞–º—è—Ç–∏!")
        print("–ï—Å–ª–∏ RAG –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç - –ò–ò —Å–∫–∞–∂–µ—Ç —á—Ç–æ –Ω–µ –∑–Ω–∞–µ—Ç –æ–± —ç—Ç–æ–º.")
        print("="*50)
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
