/**
 * AI Recovery Module v2.0 - –° –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π TxtAI –ø–∞–º—è—Ç–∏
 * –ú–æ–¥—É–ª—å –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É —á–∞—Ç—É –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–¥–∞
 * –ù–û–í–û–ï: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å GopiAI Memory System –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
 */

class AIRecoveryModule {
    constructor(chatInterface, options = {}) {
        this.chat = chatInterface;
        this.options = {
            enabled: true,
            timeoutSeconds: 45,
            maxRetries: 2,
            compressionLevel: 'smart',
            showNotifications: true,
            useMemorySystem: true, // –ù–û–í–û–ï: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å TxtAI –ø–∞–º—è—Ç—å
            memoryContextLimit: 5,  // –ù–û–í–û–ï: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –ø–∞–º—è—Ç–∏
            ...options
        };

        // –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥—É–ª—è
        this.isMonitoring = false;
        this.lastRequestTime = null;
        this.retryCount = 0;
        this.originalSendMessage = null;

        // –§–ª–∞–≥–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ä–µ–∫—É—Ä—Å–∏–∏
        this.isRecovering = false;
        this.isRetrying = false;

        // –ù–û–í–û–ï: –°—Å—ã–ª–∫–∞ –Ω–∞ bridge –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–º—è—Ç–∏
        this.bridge = null;

        console.log('üîÑ AI Recovery Module v2.0 initialized with Memory System');
    }

    /**
     * –ê–∫—Ç–∏–≤–∞—Ü–∏—è –º–æ–¥—É–ª—è - –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É —á–∞—Ç—É
     */
    activate() {
        if (!this.chat) {
            console.error('‚ùå AI Recovery: No chat interface provided');
            return;
        }

        // –ù–û–í–û–ï: –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ bridge
        this.getBridgeReference();

        // –ü–∞—Ç—á–∏–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π sendMessage –º–µ—Ç–æ–¥—ã
        this.patchChatInterface();

        // –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        this.startHealthMonitoring();

        console.log('‚úÖ AI Recovery Module v2.0 activated with Memory System');
    }

    /**
     * –ù–û–í–û–ï: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ bridge –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–º—è—Ç–∏
     */
    getBridgeReference() {
        // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ bridge –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
        if (window.bridge) {
            this.bridge = window.bridge;
            console.log('üß† AI Recovery: Memory bridge connected');
        } else {
            console.warn('‚ö†Ô∏è AI Recovery: Memory bridge not found, working without memory');
            this.options.useMemorySystem = false;
        }
    }

    /**
     * –ü–∞—Ç—á–∏–Ω–≥ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —á–∞—Ç–∞
     */
    patchChatInterface() {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
        this.originalSendMessage = this.chat.sendMessage.bind(this.chat);

        // –ó–∞–º–µ–Ω—è–µ–º –Ω–∞ –Ω–∞—à wrapper
        this.chat.sendMessage = this.wrappedSendMessage.bind(this);

        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—à–∏ –º–µ—Ç–æ–¥—ã –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–∞—Ç–∞
        this.chat._recoveryModule = this;
        this.chat.triggerRecovery = () => this.performRecovery();
    }

    /**
     * –û–±—ë—Ä—Ç–∫–∞ –¥–ª—è sendMessage —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º
     */
    async wrappedSendMessage() {
        if (this.isRecovering || this.isRetrying) {
            return; // –ò–∑–±–µ–≥–∞–µ–º —Ä–µ–∫—É—Ä—Å–∏–∏
        }

        this.lastRequestTime = Date.now();
        this.startTimeoutWatch();

        try {
            // –ù–û–í–û–ï: –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø–∞–º—è—Ç—å –ü–ï–†–ï–î –æ—Ç–ø—Ä–∞–≤–∫–æ–π
            await this.saveMessageToMemory();

            // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
            const result = await this.originalSendMessage();
            this.onSuccessfulResponse();
            return result;

        } catch (error) {
            await this.handleSendError(error);
            throw error;
        }
    }

    /**
     * –ù–û–í–û–ï: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø–∞–º—è—Ç—å –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
     */
    async saveMessageToMemory() {
        if (!this.options.useMemorySystem || !this.bridge) {
            return;
        }

        try {
            // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ input
            const messageInput = document.getElementById('message-input');
            if (messageInput && messageInput.value.trim()) {
                const message = messageInput.value.trim();
                console.log('üíæ AI Recovery: Pre-saving message to memory');
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —á–µ—Ä–µ–∑ bridge (—ç—Ç–æ –æ–±–Ω–æ–≤–∏—Ç TxtAI –ø–∞–º—è—Ç—å)
                if (this.bridge.save_chat_exchange) {
                    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò
                }
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è AI Recovery: Failed to pre-save message:', error);
        }
    }

    /**
     * –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ç–∞–π–º–∞—É—Ç–æ–≤
     */
    startTimeoutWatch() {
        this.clearTimeoutWatch();

        this.timeoutWatcher = setTimeout(() => {
            if (this.chat.isProcessing && !this.isRecovering) {
                console.warn('üö® AI Recovery: Response timeout detected');
                this.performRecovery();
            }
        }, this.options.timeoutSeconds * 1000);
    }

    clearTimeoutWatch() {
        if (this.timeoutWatcher) {
            clearTimeout(this.timeoutWatcher);
            this.timeoutWatcher = null;
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
     */
    onSuccessfulResponse() {
        this.clearTimeoutWatch();
        this.retryCount = 0;
        this.lastRequestTime = null;
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏
     */
    async handleSendError(error) {
        this.clearTimeoutWatch();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
        if (this.shouldTriggerRecovery(error)) {
            await this.performRecovery();
        }
    }

    /**
     * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ, –Ω—É–∂–Ω–æ –ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
     */
    shouldTriggerRecovery(error) {
        if (!this.options.enabled || this.retryCount >= this.options.maxRetries) {
            return false;
        }

        const errorMessage = error?.message?.toLowerCase() || '';
        const recoveryTriggers = [
            'timeout',
            'failed to fetch',
            'network error',
            'connection',
            'context window',
            'rate limit'
        ];

        return recoveryTriggers.some(trigger => errorMessage.includes(trigger));
    }

    /**
     * –û–ë–ù–û–í–õ–ï–ù–û: –ì–ª–∞–≤–Ω—ã–π –º–µ—Ç–æ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å –ø–∞–º—è—Ç—å—é
     */
    async performRecovery() {
        if (this.isRecovering) {
            return; // –ò–∑–±–µ–≥–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        }

        this.isRecovering = true;
        this.retryCount++;

        console.log(`üîÑ AI Recovery: Starting recovery attempt ${this.retryCount}/${this.options.maxRetries} with Memory System`);

        try {
            // 1. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if (this.options.showNotifications) {
                this.showRecoveryNotification();
            }

            // 2. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
            this.stopCurrentOperations();

            // 3. –ù–û–í–û–ï: –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –ø–∞–º—è—Ç–∏
            const memoryContext = await this.getMemoryContext();

            // 4. –ù–û–í–û–ï: –í—ã–ø–æ–ª–Ω—è–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å –ø–æ–ª–Ω–æ–π –ø–∞–º—è—Ç—å—é
            await this.memoryAwareRestore(memoryContext);

            // 5. –£–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if (this.options.showNotifications) {
                this.hideRecoveryNotification();
                this.showSuccessNotification();
            }

            console.log('‚úÖ AI Recovery: Recovery completed successfully with Memory');

        } catch (error) {
            console.error('‚ùå AI Recovery: Recovery failed:', error);
            this.showFailureNotification();

        } finally {
            this.isRecovering = false;
        }
    }

    /**
     * –ù–û–í–û–ï: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏–∑ TxtAI –ø–∞–º—è—Ç–∏
     */
    async getMemoryContext() {
        if (!this.options.useMemorySystem || !this.bridge) {
            return this.getFallbackContext();
        }

        try {
            // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const messageInput = document.getElementById('message-input');
            const lastMessage = messageInput ? messageInput.value.trim() : '';

            if (!lastMessage) {
                return this.getFallbackContext();
            }

            // –û–±–æ–≥–∞—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ –ø–∞–º—è—Ç—å
            let enrichedContext = '';
            if (this.bridge.enrich_message) {
                enrichedContext = await this.bridge.enrich_message(lastMessage);
                console.log('üß† AI Recovery: Retrieved memory context');
            }

            // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–∞–º—è—Ç–∏
            let memoryStats = {};
            if (this.bridge.get_memory_stats) {
                const statsJson = await this.bridge.get_memory_stats();
                try {
                    memoryStats = JSON.parse(statsJson);
                } catch (e) {
                    console.warn('‚ö†Ô∏è Failed to parse memory stats');
                }
            }

            return {
                lastMessage,
                enrichedContext,
                memoryStats,
                source: 'txtai_memory'
            };

        } catch (error) {
            console.warn('‚ö†Ô∏è AI Recovery: Failed to get memory context:', error);
            return this.getFallbackContext();
        }
    }

    /**
     * –ù–û–í–û–ï: Fallback –∫–æ–Ω—Ç–µ–∫—Å—Ç –µ—Å–ª–∏ –ø–∞–º—è—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
     */
    getFallbackContext() {
        const history = this.chat.chatHistory || [];
        const recentMessages = history.slice(-4);

        return {
            recent: recentMessages,
            source: 'local_history'
        };
    }

    /**
     * –ù–û–í–û–ï: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å —É—á–µ—Ç–æ–º –ø–∞–º—è—Ç–∏
     */
    async memoryAwareRestore(context) {
        console.log('üß† AI Recovery: Performing memory-aware restore');

        if (context.source === 'txtai_memory') {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±–æ–≥–∞—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –ø–∞–º—è—Ç–∏
            await this.restoreWithTxtAIMemory(context);
        } else {
            // Fallback –∫ —Å—Ç–∞—Ä–æ–º—É –º–µ—Ç–æ–¥—É
            await this.restoreWithLocalHistory(context);
        }
    }

    /**
     * –ù–û–í–û–ï: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å TxtAI –ø–∞–º—è—Ç—å—é
     */
    async restoreWithTxtAIMemory(context) {
        const restorePrompt = `[–°–ò–°–¢–ï–ú–ê: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ —Å –ø–∞–º—è—Ç—å—é GopiAI]

–ö–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ–µ–∫—Ç–∞: GopiAI - –º–æ–¥—É–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: –ú–æ–¥—É–ª—å–Ω–∞—è (GopiAI-Core, GopiAI-UI, GopiAI-WebView, GopiAI-Widgets)
–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: Python, PySide6, QtWebEngine, TxtAI, Claude AI

–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "${context.lastMessage}"

–†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –ø–∞–º—è—Ç–∏:
${context.enrichedContext}

–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∞–º—è—Ç–∏: ${context.memoryStats.total_messages || 0} —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –±–∞–∑–µ

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –ø—Ä–æ–µ–∫—Ç–æ–º GopiAI. –û—Ç–≤–µ—Ç—å—Ç–µ –∫—Ä–∞—Ç–∫–æ "–ì–æ—Ç–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å GopiAI".`;

        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å
            const response = await puter.ai.chat([{ 
                role: 'user', 
                content: restorePrompt 
            }], {
                model: this.chat.currentModel
            });

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–∫—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –ø–∞–º—è—Ç—å
            if (this.bridge.save_chat_exchange) {
                await this.bridge.save_chat_exchange(
                    "[–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏]", 
                    "–°–µ—Å—Å–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å –ø–æ–ª–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º GopiAI"
                );
            }

            console.log('‚úÖ AI Recovery: TxtAI memory restore completed');

        } catch (error) {
            console.error('‚ùå AI Recovery: TxtAI restore failed:', error);
            throw error;
        }
    }

    /**
     * –ù–û–í–û–ï: Fallback –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å –ª–æ–∫–∞–ª—å–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π
     */
    async restoreWithLocalHistory(context) {
        console.log('üìù AI Recovery: Using fallback local history restore');

        const recentMessages = context.recent || [];
        const summary = recentMessages.length > 0 ? 
            `–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${recentMessages.slice(-2).map(m => 
                `${m.role}: ${m.content.substring(0, 50)}...`).join('; ')}` : 
            '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏';

        const restorePrompt = `[–°–ò–°–¢–ï–ú–ê: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ GopiAI]
–ü—Ä–æ–µ–∫—Ç: GopiAI - –º–æ–¥—É–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
${summary}
–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å. –û—Ç–≤–µ—Ç—å—Ç–µ "–ì–æ—Ç–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å".`;

        const response = await puter.ai.chat([{ 
            role: 'user', 
            content: restorePrompt 
        }], {
            model: this.chat.currentModel
        });

        console.log('‚úÖ AI Recovery: Local history restore completed');
    }

    /**
     * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
     */
    stopCurrentOperations() {
        if (this.chat.hideTypingIndicator) {
            this.chat.hideTypingIndicator();
        }

        this.chat.isProcessing = false;

        if (this.chat.sendButton) {
            this.chat.sendButton.disabled = false;
        }

        this.clearTimeoutWatch();
    }

    /**
     * UI —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
     */
    showRecoveryNotification() {
        this.hideAllNotifications();

        const notification = document.createElement('div');
        notification.id = 'ai-recovery-notification';
        notification.className = 'recovery-notification recovery-in-progress';
        notification.innerHTML = `
            <div class="recovery-content">
                <span class="recovery-icon">üîÑ</span>
                <span class="recovery-text">–ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ò–ò —Å –ø–æ–ª–Ω–æ–π –ø–∞–º—è—Ç—å—é...</span>
            </div>
        `;

        this.addNotificationToDOM(notification);
    }

    showSuccessNotification() {
        this.hideAllNotifications();

        const notification = document.createElement('div');
        notification.id = 'ai-recovery-notification';
        notification.className = 'recovery-notification recovery-success';
        notification.innerHTML = `
            <div class="recovery-content">
                <span class="recovery-icon">‚úÖ</span>
                <span class="recovery-text">–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å –ø–∞–º—è—Ç—å—é GopiAI</span>
            </div>
        `;

        this.addNotificationToDOM(notification);

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => this.hideAllNotifications(), 3000);
    }

    showFailureNotification() {
        this.hideAllNotifications();

        const notification = document.createElement('div');
        notification.id = 'ai-recovery-notification';
        notification.className = 'recovery-notification recovery-failure';
        notification.innerHTML = `
            <div class="recovery-content">
                <span class="recovery-icon">‚ùå</span>
                <span class="recovery-text">–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ</span>
            </div>
        `;

        this.addNotificationToDOM(notification);
    }

    addNotificationToDOM(notification) {
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π –∏–ª–∏ –≤ body
        const container = this.chat.messagesContainer || document.body;
        container.appendChild(notification);

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        this.ensureNotificationStyles();
    }

    hideAllNotifications() {
        const existing = document.getElementById('ai-recovery-notification');
        if (existing) {
            existing.remove();
        }
    }

    /**
     * –°—Ç–∏–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
     */
    ensureNotificationStyles() {
        if (document.getElementById('ai-recovery-styles')) {
            return;
        }

        const styles = document.createElement('style');
        styles.id = 'ai-recovery-styles';
        styles.textContent = `
            .recovery-notification {
                position: fixed;
                top: 20px;
                right: 20px;
                z-index: 10000;
                padding: 12px 20px;
                border-radius: 8px;
                color: white;
                font-weight: 500;
                box-shadow: 0 4px 12px rgba(0,0,0,0.15);
                animation: slideIn 0.3s ease-out;
            }
            
            .recovery-in-progress {
                background: linear-gradient(135deg, #3b82f6, #1d4ed8);
            }
            
            .recovery-success {
                background: linear-gradient(135deg, #10b981, #047857);
            }
            
            .recovery-failure {
                background: linear-gradient(135deg, #ef4444, #dc2626);
            }
            
            .recovery-content {
                display: flex;
                align-items: center;
                gap: 8px;
            }
            
            .recovery-icon {
                font-size: 16px;
            }
            
            .recovery-text {
                font-size: 14px;
            }
            
            @keyframes slideIn {
                from {
                    transform: translateX(100%);
                    opacity: 0;
                }
                to {
                    transform: translateX(0);
                    opacity: 1;
                }
            }
        `;

        document.head.appendChild(styles);
    }

    /**
     * –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–¥–æ—Ä–æ–≤—å—è –ò–ò
     */
    startHealthMonitoring() {
        if (this.isMonitoring) {
            return;
        }

        this.isMonitoring = true;
        console.log('üîç AI Recovery: Health monitoring started with Memory System');
    }

    /**
     * –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –º–æ–¥—É–ª—è
     */
    deactivate() {
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
        if (this.originalSendMessage && this.chat) {
            this.chat.sendMessage = this.originalSendMessage;
        }

        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        this.clearTimeoutWatch();
        this.isMonitoring = false;

        // –£–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        this.hideAllNotifications();

        console.log('üîÑ AI Recovery Module v2.0 deactivated');
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥—É–ª—è
     */
    updateSettings(newOptions) {
        this.options = { ...this.options, ...newOptions };
        console.log('‚öôÔ∏è AI Recovery: Settings updated', this.options);
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.AIRecoveryModule = AIRecoveryModule;