"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤ –∏ –∏–∫–æ–Ω–æ–∫
====================================================

–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã FileTypeDetector –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–æ–∫.
"""

import os
from ui_components.file_type_detector import FileTypeDetector

def test_file_types():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤\n")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã (–ø—Ä–∏–º–µ—Ä—ã)
    test_files = [
        "document.pdf",
        "image.png",
        "code.py",
        "video.mp4",
        "audio.mp3",
        "archive.zip",
        "spreadsheet.xlsx",
        "text.txt",
        "webpage.html",
        "config.json",
        "README.md",
        "Dockerfile",
        "package.json",
        "requirements.txt",
        ".gitignore",
        "Makefile",
        "font.ttf",
        "database.sqlite",
        "presentation.pptx",
        "executable.exe",
        "script.js",
        "style.css",
        "hidden_file.secret",
        "unknown_extension.xyz"
    ]
    
    # –î–æ–±–∞–≤–∏–º —Ç–∞–∫–∂–µ –ø–∞–ø–∫—É
    test_files.append("folder_example")
    
    print("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤:\n")
    print(f"{'–§–∞–π–ª':<25} {'–¢–∏–ø':<15} {'–ò–∫–æ–Ω–∫–∞':<15}")
    print("-" * 55)
    
    for filename in test_files:
        if filename == "folder_example":
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è —Ç–µ—Å—Ç–∞
            file_path = os.path.join(os.getcwd(), filename)
            if not os.path.exists(file_path):
                os.makedirs(file_path, exist_ok=True)
        else:
            file_path = filename
            
        file_type = FileTypeDetector.get_file_type(file_path)
        icon_name = FileTypeDetector.get_icon_for_file(file_path)
        
        print(f"{filename:<25} {file_type:<15} {icon_name:<15}")
    
    print("\n" + "=" * 55)
    
    # –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –ø–∞–ø–∫–∏
    folder_path = os.path.join(os.getcwd(), "folder_example")
    if os.path.exists(folder_path):
        try:
            os.rmdir(folder_path)
        except:
            pass

def test_real_files():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö –∏–∑ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"""
    print("\nüìÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö:\n")
    
    current_dir = os.getcwd()
    real_files = []
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 —Ñ–∞–π–ª–æ–≤ –∏–∑ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    try:
        for item in os.listdir(current_dir)[:15]:
            item_path = os.path.join(current_dir, item)
            real_files.append((item, item_path))
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {e}")
        return
    
    print(f"{'–§–∞–π–ª/–ü–∞–ø–∫–∞':<30} {'–¢–∏–ø':<15} {'–ò–∫–æ–Ω–∫–∞':<15}")
    print("-" * 60)
    
    for filename, file_path in real_files:
        file_type = FileTypeDetector.get_file_type(file_path)
        icon_name = FileTypeDetector.get_icon_for_file(file_path)
        
        # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ –∏–º–µ–Ω–∞
        display_name = filename[:27] + "..." if len(filename) > 30 else filename
        print(f"{display_name:<30} {file_type:<15} {icon_name:<15}")

def test_icon_manager_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –∏–∫–æ–Ω–æ–∫"""
    print("\nüé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –∏–∫–æ–Ω–æ–∫:\n")
    
    try:
        from ui_components.icon_system import AutoIconSystem
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –∏–∫–æ–Ω–æ–∫
        icon_system = AutoIconSystem()
        
        test_icons = ['folder', 'file', 'image', 'code', 'video', 'audio', 'archive']
        
        print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏–∫–æ–Ω–æ–∫:")
        for icon_name in test_icons:
            if hasattr(icon_system, 'get_icon'):
                try:
                    icon = icon_system.get_icon(icon_name)
                    status = "‚úÖ –î–æ—Å—Ç—É–ø–Ω–∞" if icon and not icon.isNull() else "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
                except Exception as e:
                    status = f"‚ùå –û—à–∏–±–∫–∞: {e}"
            else:
                status = "‚ùå –ú–µ—Ç–æ–¥ get_icon –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
            
            print(f"  {icon_name:<10}: {status}")
            
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Å–∏—Å—Ç–µ–º—ã –∏–∫–æ–Ω–æ–∫: {e}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —Ñ–∞–π–ª–æ–≤—ã—Ö –∏–∫–æ–Ω–æ–∫\n")
    
    test_file_types()
    test_real_files()
    test_icon_manager_integration()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
