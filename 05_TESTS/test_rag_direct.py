#!/usr/bin/env python3
"""
–°–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ get_rag_context
–≠—Ç–æ—Ç —Ç–µ—Å—Ç –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ RAG —Å–µ—Ä–≤–µ—Ä—É –Ω–∞–ø—Ä—è–º—É—é
"""

import requests
import json

def test_direct_rag_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ RAG —Å–µ—Ä–≤–µ—Ä—É"""
    print("[TEST] –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä—è–º–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ RAG —Å–µ—Ä–≤–µ—Ä—É")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ RAG —Å–µ—Ä–≤–µ—Ä—É
    rag_url = "http://127.0.0.1:5051/api/search"
    test_query = "–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å CrewAI –∞–≥–µ–Ω—Ç–æ–≤?"
    
    try:
        print(f"üîç –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ RAG —Å–µ—Ä–≤–µ—Ä—É: {rag_url}")
        print(f"üìù –ó–∞–ø—Ä–æ—Å: {test_query}")
        
        response = requests.post(
            rag_url,
            json={"query": test_query, "max_results": 3},
            timeout=5
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –∫–æ–¥: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ RAG —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª —É—Å–ø–µ—à–Ω–æ!")
            print(f"üìÑ –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {data}")
            
            context_items = data.get("context", [])
            if context_items:
                print(f"üìö –ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {len(context_items)}")
                for i, item in enumerate(context_items, 1):
                    print(f"   {i}. {item[:100]}...")
            else:
                print("‚ö†Ô∏è –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø—É—Å—Ç—ã")
        else:
            print(f"‚ùå RAG —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ RAG —Å–µ—Ä–≤–µ—Ä—É")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ RAG —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5051")
        print("üîß –î–ª—è –∑–∞–ø—É—Å–∫–∞ RAG —Å–µ—Ä–≤–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
        print("   python rag_memory_system/rag_server.py")
        
    except requests.exceptions.Timeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ RAG —Å–µ—Ä–≤–µ—Ä—É")
        
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

def test_rag_server_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å RAG —Å–µ—Ä–≤–µ—Ä–∞"""
    print("\n[TEST] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ RAG —Å–µ—Ä–≤–µ—Ä–∞")
    print("=" * 50)
    
    status_urls = [
        "http://127.0.0.1:5051/",
        "http://127.0.0.1:5051/health",
        "http://127.0.0.1:5051/api/"
    ]
    
    for url in status_urls:
        try:
            response = requests.get(url, timeout=2)
            print(f"‚úÖ {url} - –°—Ç–∞—Ç—É—Å: {response.status_code}")
        except requests.exceptions.ConnectionError:
            print(f"‚ùå {url} - –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        except Exception as e:
            print(f"‚ö†Ô∏è {url} - –û—à–∏–±–∫–∞: {e}")

def check_rag_processes():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω—ã –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å—ã RAG —Å–µ—Ä–≤–µ—Ä–∞"""
    print("\n[TEST] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ RAG —Å–µ—Ä–≤–µ—Ä–∞")
    print("=" * 50)
    
    import subprocess
    import platform
    
    try:
        if platform.system() == "Windows":
            # –ò—â–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã Python, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å RAG —Å–µ—Ä–≤–µ—Ä–æ–º
            result = subprocess.run(
                ["tasklist", "/FI", "IMAGENAME eq python.exe"],
                capture_output=True, text=True
            )
            print("üîç –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Python:")
            print(result.stdout)
        else:
            # –î–ª—è Linux/Mac
            result = subprocess.run(
                ["ps", "aux", "|", "grep", "python"],
                capture_output=True, text=True, shell=True
            )
            print("üîç –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Python:")
            print(result.stdout)
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {e}")

def main():
    print("üß™ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ RAG —Å–∏—Å—Ç–µ–º—ã")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    test_direct_rag_connection()
    
    # –¢–µ—Å—Ç 2: –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞
    test_rag_server_status()
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    check_rag_processes()
    
    print("\n" + "=" * 60)
    print("‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüí° –ï—Å–ª–∏ RAG —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:")
    print("   1. cd rag_memory_system")
    print("   2. python rag_server.py")

if __name__ == "__main__":
    main()