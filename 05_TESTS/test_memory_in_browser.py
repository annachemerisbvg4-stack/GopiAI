"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π HTML –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø–∞–º—è—Ç–∏ –≤ GopiAI
–î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ —á–∞—Ç –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
"""

test_memory_js = """
// –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏ GopiAI
console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ GopiAI...');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å bridge
if (typeof bridge !== 'undefined') {
    console.log('‚úÖ Bridge –¥–æ—Å—Ç—É–ø–µ–Ω');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥—ã –ø–∞–º—è—Ç–∏
    const memoryMethods = [
        'enrich_message',
        'save_chat_exchange', 
        'start_new_chat_session',
        'get_memory_stats',
        'is_memory_available'
    ];
    
    memoryMethods.forEach(method => {
        if (typeof bridge[method] === 'function') {
            console.log(`‚úÖ ${method} –¥–æ—Å—Ç—É–ø–µ–Ω`);
        } else {
            console.log(`‚ùå ${method} –ù–ï –¥–æ—Å—Ç—É–ø–µ–Ω`);
        }
    });
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–∞–º—è—Ç–∏
    try {
        const available = bridge.is_memory_available();
        console.log(`üß† –ü–∞–º—è—Ç—å –¥–æ—Å—Ç—É–ø–Ω–∞: ${available}`);
        
        if (available) {
            // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            const stats = bridge.get_memory_stats();
            console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∞–º—è—Ç–∏:', JSON.parse(stats));
            
            // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–æ–≥–∞—â–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            const testMessage = "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?";
            const enriched = bridge.enrich_message(testMessage);
            console.log('üí¨ –û–±–æ–≥–∞—â–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:', enriched);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏:', error);
    }
} else {
    console.log('‚ùå Bridge –ù–ï –¥–æ—Å—Ç—É–ø–µ–Ω');
}

// –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –¥–æ–∫—É–º–µ–Ω—Ç
document.body.innerHTML += `
<div style="background: #2d2d2d; color: #fff; padding: 20px; margin: 10px; border-radius: 8px; font-family: monospace;">
<h3>üß™ –¢–µ—Å—Ç –ø–∞–º—è—Ç–∏ GopiAI</h3>
<p>–û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.</p>
<p>Bridge –¥–æ—Å—Ç—É–ø–µ–Ω: ${typeof bridge !== 'undefined' ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}</p>
${typeof bridge !== 'undefined' && typeof bridge.is_memory_available === 'function' ? 
  `<p>–ü–∞–º—è—Ç—å –¥–æ—Å—Ç—É–ø–Ω–∞: ${bridge.is_memory_available() ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}</p>` : 
  '<p>–ú–µ—Ç–æ–¥—ã –ø–∞–º—è—Ç–∏: ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã</p>'
}
</div>
`;
"""

print("–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç JavaScript –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ GopiAI:")
print("=" * 60)
print(test_memory_js)
print("=" * 60)
print("\n–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å—Ç–∏—Ç–µ GopiAI –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ –ø–∞–º—è—Ç–∏:")
print("- '‚úÖ Chat memory system imported successfully'")
print("- '‚úÖ Memory system initialized in WebViewChatBridge'")
print("- –ò–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ RAG API")