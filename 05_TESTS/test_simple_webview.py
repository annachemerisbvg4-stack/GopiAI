#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç WebView –±–µ–∑ —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
===========================================

–°–æ–∑–¥–∞—ë–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π WebView –±–µ–∑ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏.
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, str(Path(__file__).parent / "GopiAI-UI"))

from PySide6.QtWidgets import QApplication, QVBoxLayout, QWidget, QLabel, QPushButton
from PySide6.QtCore import Qt
from PySide6.QtWebEngineWidgets import QWebEngineView
from PySide6.QtWebEngineCore import QWebEngineSettings

class SimpleWebViewTest(QWidget):
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç WebView –±–µ–∑ —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    def __init__(self):
        super().__init__()
        self.setWindowTitle("GopiAI WebView Stability Test")
        self.setGeometry(100, 100, 800, 600)
        
        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        layout = QVBoxLayout(self)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å
        info_label = QLabel("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ WebView (–±–µ–∑ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è)")
        info_label.setStyleSheet("font-size: 14px; font-weight: bold; padding: 10px;")
        layout.addWidget(info_label)
        
        # WebView
        self.web_view = QWebEngineView()
        layout.addWidget(self.web_view)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ WebEngine (–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è)
        settings = self.web_view.settings()
        settings.setAttribute(QWebEngineSettings.WebAttribute.JavascriptEnabled, True)
        
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        test_btn = QPushButton("üåê –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ—Å—Ç—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É")
        test_btn.clicked.connect(self.load_simple_page)
        layout.addWidget(test_btn)
        
        puter_btn = QPushButton("üöÄ –ó–∞–≥—Ä—É–∑–∏—Ç—å puter.js (CDN)")
        puter_btn.clicked.connect(self.load_puter_test)
        layout.addWidget(puter_btn)
        
        close_btn = QPushButton("‚ùå –ó–∞–∫—Ä—ã—Ç—å")
        close_btn.clicked.connect(self.close)
        layout.addWidget(close_btn)
    
    def load_simple_page(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Å—Ç–æ–π HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
        html = """
        <!DOCTYPE html>
        <html>
        <head>
            <title>Simple Test</title>
            <style>
                body { font-family: Arial; padding: 20px; background: #f0f0f0; }
                .test { padding: 10px; margin: 10px; background: white; border: 1px solid #ccc; }
            </style>
        </head>
        <body>
            <h1>‚úÖ WebView Test Page</h1>
            <div class="test">
                <h3>JavaScript Test:</h3>
                <button onclick="testFunction()">Run Test</button>
                <div id="result"></div>
            </div>
            
            <script>
                function testFunction() {
                    const result = document.getElementById('result');
                    result.innerHTML = '<p style="color: green;">‚úÖ JavaScript —Ä–∞–±–æ—Ç–∞–µ—Ç!</p>';
                    
                    // –ü—Ä–æ—Å—Ç–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞
                    console.log('Test function executed successfully');
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É
                document.addEventListener('DOMContentLoaded', function() {
                    console.log('‚úÖ Simple page loaded successfully');
                });
            </script>
        </body>
        </html>
        """
        
        self.web_view.setHtml(html)
        print("üîÑ –ü—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
    
    def load_puter_test(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å puter.js"""
        html = """
        <!DOCTYPE html>
        <html>
        <head>
            <title>Puter.js Test</title>
            <script src="https://js.puter.com/v2/"></script>
            <style>
                body { font-family: Arial; padding: 20px; background: #f0f0f0; }
                .status { padding: 10px; margin: 10px; background: white; border: 1px solid #ccc; }
                .success { border-color: green; background: #f0fff0; }
                .error { border-color: red; background: #fff0f0; }
            </style>
        </head>
        <body>
            <h1>üöÄ Puter.js Test Page</h1>
            <div id="status" class="status">–ó–∞–≥—Ä—É–∑–∫–∞ puter.js...</div>
            
            <script>
                function updateStatus(message, isSuccess = true) {
                    const status = document.getElementById('status');
                    status.textContent = message;
                    status.className = isSuccess ? 'status success' : 'status error';
                }
                
                // –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ puter.js
                function waitForPuter() {
                    if (typeof puter !== 'undefined') {
                        updateStatus('‚úÖ Puter.js –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
                        console.log('‚úÖ Puter.js ready');
                        
                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
                        if (puter.ai && puter.ai.chat) {
                            updateStatus('‚úÖ Puter.js –∏ puter.ai –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ!');
                        }
                    } else {
                        setTimeout(waitForPuter, 100);
                    }
                }
                
                // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
                document.addEventListener('DOMContentLoaded', function() {
                    console.log('DOM loaded, waiting for puter.js...');
                    waitForPuter();
                });
                
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏
                window.addEventListener('error', function(event) {
                    updateStatus('‚ùå –û—à–∏–±–∫–∞: ' + event.message, false);
                    console.error('Page error:', event);
                });
            </script>
        </body>
        </html>
        """
        
        self.web_view.setHtml(html)
        print("üîÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å puter.js –∑–∞–≥—Ä—É–∂–µ–Ω–∞")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    app = QApplication(sys.argv)
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç—ë–º–Ω—É—é —Ç–µ–º—É
    app.setStyleSheet("""
        QWidget {
            background-color: #2d2d2d;
            color: #ffffff;
        }
        QPushButton {
            background-color: #0078d4;
            color: #ffffff;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            font-weight: bold;
        }
        QPushButton:hover {
            background-color: #106ebe;
        }
        QLabel {
            color: #ffffff;
        }
    """)
    
    # –°–æ–∑–¥–∞—ë–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_window = SimpleWebViewTest()
    test_window.show()
    
    print("üß™ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç WebView –∑–∞–ø—É—â–µ–Ω")
    print("üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
    print("   1. –ù–∞–∂–º–∏—Ç–µ '–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ—Å—Ç—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É' –¥–ª—è –±–∞–∑–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–∞")
    print("   2. –ù–∞–∂–º–∏—Ç–µ '–ó–∞–≥—Ä—É–∑–∏—Ç—å puter.js' –¥–ª—è —Ç–µ—Å—Ç–∞ —Å –≤–Ω–µ—à–Ω–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π")
    print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –Ω–µ—Ç –ø–∞–¥–µ–Ω–∏–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    
    return app.exec()

if __name__ == "__main__":
    sys.exit(main())